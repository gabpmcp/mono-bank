{
  "version": 3,
  "sources": ["../../../assets/vendor/topbar.js", "../../../assets/node_modules/phoenix_html/priv/static/phoenix_html.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/utils.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/constants.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/push.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/timer.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/channel.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/ajax.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/longpoll.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/presence.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/serializer.js", "../../../assets/node_modules/phoenix/assets/js/phoenix/socket.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../../assets/node_modules/phoenix_live_view/assets/node_modules/morphdom/dist/morphdom-esm.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../../../assets/node_modules/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js", "../../../assets/js/app.js"],
  "sourcesContent": ["/**\n * @license MIT\n * topbar 2.0.0, 2023-02-04\n * https://buunguyen.github.io/topbar\n * Copyright (c) 2021 Buu Nguyen\n */\n(function (window, document) {\n  \"use strict\";\n\n  // https://gist.github.com/paulirish/1579671\n  (function () {\n    var lastTime = 0;\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame =\n        window[vendors[x] + \"RequestAnimationFrame\"];\n      window.cancelAnimationFrame =\n        window[vendors[x] + \"CancelAnimationFrame\"] ||\n        window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n    if (!window.requestAnimationFrame)\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    if (!window.cancelAnimationFrame)\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n  })();\n\n  var canvas,\n    currentProgress,\n    showing,\n    progressTimerId = null,\n    fadeTimerId = null,\n    delayTimerId = null,\n    addEvent = function (elem, type, handler) {\n      if (elem.addEventListener) elem.addEventListener(type, handler, false);\n      else if (elem.attachEvent) elem.attachEvent(\"on\" + type, handler);\n      else elem[\"on\" + type] = handler;\n    },\n    options = {\n      autoRun: true,\n      barThickness: 3,\n      barColors: {\n        0: \"rgba(26,  188, 156, .9)\",\n        \".25\": \"rgba(52,  152, 219, .9)\",\n        \".50\": \"rgba(241, 196, 15,  .9)\",\n        \".75\": \"rgba(230, 126, 34,  .9)\",\n        \"1.0\": \"rgba(211, 84,  0,   .9)\",\n      },\n      shadowBlur: 10,\n      shadowColor: \"rgba(0,   0,   0,   .6)\",\n      className: null,\n    },\n    repaint = function () {\n      canvas.width = window.innerWidth;\n      canvas.height = options.barThickness * 5; // need space for shadow\n\n      var ctx = canvas.getContext(\"2d\");\n      ctx.shadowBlur = options.shadowBlur;\n      ctx.shadowColor = options.shadowColor;\n\n      var lineGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n      for (var stop in options.barColors)\n        lineGradient.addColorStop(stop, options.barColors[stop]);\n      ctx.lineWidth = options.barThickness;\n      ctx.beginPath();\n      ctx.moveTo(0, options.barThickness / 2);\n      ctx.lineTo(\n        Math.ceil(currentProgress * canvas.width),\n        options.barThickness / 2\n      );\n      ctx.strokeStyle = lineGradient;\n      ctx.stroke();\n    },\n    createCanvas = function () {\n      canvas = document.createElement(\"canvas\");\n      var style = canvas.style;\n      style.position = \"fixed\";\n      style.top = style.left = style.right = style.margin = style.padding = 0;\n      style.zIndex = 100001;\n      style.display = \"none\";\n      if (options.className) canvas.classList.add(options.className);\n      document.body.appendChild(canvas);\n      addEvent(window, \"resize\", repaint);\n    },\n    topbar = {\n      config: function (opts) {\n        for (var key in opts)\n          if (options.hasOwnProperty(key)) options[key] = opts[key];\n      },\n      show: function (delay) {\n        if (showing) return;\n        if (delay) {\n          if (delayTimerId) return;\n          delayTimerId = setTimeout(() => topbar.show(), delay);\n        } else  {\n          showing = true;\n          if (fadeTimerId !== null) window.cancelAnimationFrame(fadeTimerId);\n          if (!canvas) createCanvas();\n          canvas.style.opacity = 1;\n          canvas.style.display = \"block\";\n          topbar.progress(0);\n          if (options.autoRun) {\n            (function loop() {\n              progressTimerId = window.requestAnimationFrame(loop);\n              topbar.progress(\n                \"+\" + 0.05 * Math.pow(1 - Math.sqrt(currentProgress), 2)\n              );\n            })();\n          }\n        }\n      },\n      progress: function (to) {\n        if (typeof to === \"undefined\") return currentProgress;\n        if (typeof to === \"string\") {\n          to =\n            (to.indexOf(\"+\") >= 0 || to.indexOf(\"-\") >= 0\n              ? currentProgress\n              : 0) + parseFloat(to);\n        }\n        currentProgress = to > 1 ? 1 : to;\n        repaint();\n        return currentProgress;\n      },\n      hide: function () {\n        clearTimeout(delayTimerId);\n        delayTimerId = null;\n        if (!showing) return;\n        showing = false;\n        if (progressTimerId != null) {\n          window.cancelAnimationFrame(progressTimerId);\n          progressTimerId = null;\n        }\n        (function loop() {\n          if (topbar.progress(\"+.1\") >= 1) {\n            canvas.style.opacity -= 0.05;\n            if (canvas.style.opacity <= 0.05) {\n              canvas.style.display = \"none\";\n              fadeTimerId = null;\n              return;\n            }\n          }\n          fadeTimerId = window.requestAnimationFrame(loop);\n        })();\n      },\n    };\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = topbar;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return topbar;\n    });\n  } else {\n    this.topbar = topbar;\n  }\n}.call(this, window, document));\n", "\"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        submit = document.createElement(\"input\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"none\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n\n    // Insert a button and click it instead of using `form.submit`\n    // because the `submit` function does not emit a `submit` event.\n    submit.type = \"submit\";\n    form.appendChild(submit);\n    submit.click();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = \"\"\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for(let i = 0; i < len; i++){ binary += String.fromCharCode(bytes[i]) }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", \"application/json\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within its own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body){\n    if(typeof(body) !== \"string\"){ body = arrayBufferToBase64(body) }\n    if(this.currentBatch){\n      this.currentBatch.push(body)\n    } else if(this.awaitingBatchAck){\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages){\n    this.awaitingBatchAck = true\n    this.ajax(\"POST\", \"application/x-ndjson\", messages.join(\"\\n\"), () => this.onerror(\"timeout\"), resp => {\n      this.awaitingBatchAck = false\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      } else if(this.batchBuffer.length > 0){\n        this.batchSend(this.batchBuffer)\n        this.batchBuffer = []\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, contentType, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), contentType, body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {Function} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {Function} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millisec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Phoenix uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Phoenix won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if(!this.logger && opts.debug){\n      this.logger = (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n    if(this.longPollFallbackMs && this.transport !== LongPoll){\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger && this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect(){\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key){ return this.sessionStore && this.sessionStore.getItem(key) }\n\n  storeSession(key, val){ this.sessionStore && this.sessionStore.setItem(key, val) }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500){\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log(\"transport\", `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if(this.getSession(`phx:fallback:${fallbackTransport.name}`)){ return fallback(\"memorized\") }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError(reason => {\n      this.log(\"transport\", \"error\", reason)\n      if(primaryTransport && !established){\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if(!primaryTransport){\n        // only memorize LP if we never connected to primary\n        if(!this.primaryPassedHealthCheck){ this.storeSession(`phx:fallback:${fallbackTransport.name}`, \"true\") }\n        return this.log(\"transport\", `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping(rtt => {\n        this.log(\"transport\", \"connected to primary after\", rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats(){\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(() => this.reconnectTimer.scheduleTimeout(), WS_CLOSE_NORMAL, \"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onopen = function (){ } // noop\n          this.conn.onerror = function (){ } // noop\n          this.conn.onmessage = function (){ } // noop\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimeoutTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "\nexport const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER = [1000, 3000]\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_REMOVE = \"data-phx-remove\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_DISCONNECTED_CLASS = \"phx-disconnected\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\n", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    clearTimeout(this.chunkTimer)\n    this.uploadChannel.leave()\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => typeof(cid) === \"number\"\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`)){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  THROTTLED\n} from \"./constants\"\n\nimport {\n  clone,\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  findUploadInputs(node){ return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`) },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  markPhxChildDestroyed(el){\n    el.setAttribute(PHX_SESSION, \"\")\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findParentCIDs(node, cids){\n    let initial = new Set(cids)\n    return cids.reduce((acc, cid) => {\n      let selector = `[${PHX_COMPONENT}=\"${cid}\"] [${PHX_COMPONENT}]`\n\n      this.filterWithinSameLiveView(this.all(node, selector), node)\n        .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n        .forEach(childCID => acc.delete(childCID))\n\n      return acc\n    }, initial)\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = clone(source[PHX_PRIVATE])\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    let {prefix, suffix} = titleEl.dataset\n    document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => callback())\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            this.putPrivate(el, THROTTLED, true)\n            setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER), timeout)\n          }\n        } else {\n          setTimeout(() => this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle), timeout)\n        }\n\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => this.triggerCycle(el, DEBOUNCE_TRIGGER))\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  discardError(container, el, phxFeedbackFor){\n    let field = el.getAttribute && el.getAttribute(phxFeedbackFor)\n    // TODO: Remove id lookup after we update Phoenix to use input_name instead of input_id\n    let input = field && container.querySelector(`[id=\"${field}\"], [name=\"${field}\"]`)\n    if(!input){ return }\n\n    if(!(this.private(input, PHX_HAS_FOCUSED) || this.private(input.form, PHX_HAS_SUBMITTED))){\n      el.classList.add(PHX_NO_FEEDBACK_CLASS)\n    }\n  },\n\n  showError(inputEl, phxFeedbackFor){\n    if(inputEl.id || inputEl.name){\n      this.all(inputEl.form, `[${phxFeedbackFor}=\"${inputEl.id}\"], [${phxFeedbackFor}=\"${inputEl.name}\"]`, (el) => {\n        this.removeClass(el, PHX_NO_FEEDBACK_CLASS)\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  dispatchEvent(target, eventString, detail = {}){\n    let event = new CustomEvent(eventString, {bubbles: true, cancelable: true, detail: detail})\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  mergeAttrs(target, source, opts = {}){\n    let exclude = opts.exclude || []\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(exclude.indexOf(name) < 0){ target.setAttribute(name, source.getAttribute(name)) }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {except: [\"value\"]}) }\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(!DOM.isTextualInput(focused)){ return }\n    let wasFocused = focused.matches(\":focus\")\n    if(focused.readOnly){ focused.blur() }\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  syncPropsToAttrs(el){\n    if(el instanceof HTMLSelectElement){\n      let selectedItem = el.options.item(el.selectedIndex)\n      if(selectedItem && selectedItem.getAttribute(\"selected\") === null){\n        selectedItem.setAttribute(\"selected\", \"\")\n      }\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  constructor(fileEl, file, view){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function (){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  cancel(){\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    LiveUploader.clearFiles(this.fileEl)\n  }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){ this.cancel() }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.name = file.name || entry.ref\n      entry.type = file.type\n      entry.size = file.size\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.putPrivate(inputEl, \"files\", this.activeFiles(inputEl).concat(newFiles))\n      inputEl.value = null\n    } else {\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view))\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        entry.zipPostFlight(resp)\n        entry.onDone(() => {\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        })\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  }\n}\n\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_REMOVE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    DOM.all(this.container, \"[phx-update=append] > *, [phx-update=prepend] > *\", el => {\n      el.setAttribute(PHX_REMOVE, \"\")\n    })\n  }\n\n  perform(){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let added = []\n    let updates = []\n    let appendPrependUpdates = []\n    let externalFormTriggered = null\n\n    let diffHTML = liveSocket.time(\"premorph container prep\", () => {\n      return this.buildDiffHTML(container, html, phxUpdate, targetContainer)\n    })\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      morphdom(targetContainer, diffHTML, {\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null,\n        getNodeKey: (node) => {\n          return DOM.isPhxDestroyed(node) ? null : node.id\n        },\n        onBeforeNodeAdded: (el) => {\n          this.trackBefore(\"added\", el)\n          return el\n        },\n        onNodeAdded: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          //input handling\n          DOM.discardError(targetContainer, el, phxFeedbackFor)\n          // nested view handling\n          if(DOM.isPhxChild(el) && view.ownsElement(el)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => {\n          // nested view handling\n          if(DOM.isPhxChild(el)){ liveSocket.destroyViewByEl(el) }\n          this.trackAfter(\"discarded\", el)\n        },\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_REMOVE) !== null){ return true }\n          if(el.parentNode !== null && DOM.isPhxUpdate(el.parentNode, phxUpdate, [\"append\", \"prepend\"]) && el.id){ return false }\n          if(this.skipCIDSibling(el)){ return false }\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: true})\n            updates.push(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n          DOM.discardError(targetContainer, toEl, phxFeedbackFor)\n          DOM.syncPropsToAttrs(toEl)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          if(isFocusedFormEl && !this.forceFocusedSelectUpdate(fromEl, toEl)){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            return false\n          } else {\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n            DOM.syncAttrsToProps(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    })\n\n    if(liveSocket.isDebugEnabled()){ detectDuplicateIds() }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    if(externalFormTriggered){\n      liveSocket.disconnect()\n      externalFormTriggered.submit()\n    }\n    return true\n  }\n\n  forceFocusedSelectUpdate(fromEl, toEl){\n    let isSelect = [\"select\", \"select-one\", \"select-multiple\"].find((t) => t === fromEl.type)\n    return fromEl.multiple === true || (isSelect && fromEl.innerHTML != toEl.innerHTML)\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.getAttribute(PHX_SKIP) !== null\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  // builds HTML for morphdom patch\n  // - for full patches of LiveView or a component with a single\n  //   root node, simply returns the HTML\n  // - for patches of a component with multiple root nodes, the\n  //   parent node becomes the target container and non-component\n  //   siblings are marked as skip.\n  buildDiffHTML(container, html, phxUpdate, targetContainer){\n    let isCIDPatch = this.isCIDPatch()\n    let isCIDWithSingleRoot = isCIDPatch && targetContainer.getAttribute(PHX_COMPONENT) === this.targetCID.toString()\n    if(!isCIDPatch || isCIDWithSingleRoot){\n      return html\n    } else {\n      // component patch with multiple CID roots\n      let diffContainer = null\n      let template = document.createElement(\"template\")\n      diffContainer = DOM.cloneNode(targetContainer)\n      let [firstComponent, ...rest] = DOM.findComponentNodeList(diffContainer, this.targetCID)\n      template.innerHTML = html\n      rest.forEach(el => el.remove())\n      Array.from(diffContainer.childNodes).forEach(child => {\n        // we can only skip trackable nodes with an ID\n        if(child.id && child.nodeType === Node.ELEMENT_NODE && child.getAttribute(PHX_COMPONENT) !== this.targetCID.toString()){\n          child.setAttribute(PHX_SKIP, \"\")\n          child.innerHTML = \"\"\n        }\n      })\n      Array.from(template.content.childNodes).forEach(el => diffContainer.insertBefore(el, firstComponent))\n      firstComponent.remove()\n      return diffContainer.outerHTML\n    }\n  }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  REPLY,\n  STATIC,\n  TITLE\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    return this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids)\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids}\n    this.toOutputBuffer(rendered, output)\n    return output.buffer\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(var key in newc){ oldc[key] = newc[key] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined ? cdiff : this.cloneMerge(oldc[cid] || {}, cdiff)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n  }\n\n  cloneMerge(target, source){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val)\n      }\n    }\n    return merged\n  }\n\n  componentToString(cid){ return this.recursiveCIDToString(this.rendered[COMPONENTS], cid) }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  toOutputBuffer(rendered, output){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, output) }\n    let {[STATIC]: statics} = rendered\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], output)\n      output.buffer += statics[i]\n    }\n  }\n\n  comprehensionToBuffer(rendered, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics} = rendered\n\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        this.dynamicToBuffer(dynamic[i - 1], output)\n        output.buffer += statics[i]\n      }\n    }\n  }\n\n  dynamicToBuffer(rendered, output){\n    if(typeof (rendered) === \"number\"){\n      output.buffer += this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, output)\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let template = document.createElement(\"template\")\n    template.innerHTML = this.recursiveToString(component, components, onlyCids)\n    let container = template.content\n    let skip = onlyCids && !onlyCids.has(cid)\n\n    let [hasChildNodes, hasChildComponents] =\n      Array.from(container.childNodes).reduce(([hasNodes, hasComponents], child, i) => {\n        if(child.nodeType === Node.ELEMENT_NODE){\n          if(child.getAttribute(PHX_COMPONENT)){\n            return [hasNodes, true]\n          }\n          child.setAttribute(PHX_COMPONENT, cid)\n          if(!child.id){ child.id = `${this.parentViewId()}-${cid}-${i}` }\n          if(skip){\n            child.setAttribute(PHX_SKIP, \"\")\n            child.innerHTML = \"\"\n          }\n          return [true, hasComponents]\n        } else {\n          if(child.nodeValue.trim() !== \"\"){\n            logError(\"only HTML element tags are allowed at the root of components.\\n\\n\" +\n              `got: \"${child.nodeValue.trim()}\"\\n\\n` +\n              \"within:\\n\", template.innerHTML.trim())\n            child.replaceWith(this.createSpan(child.nodeValue, cid))\n            return [true, hasComponents]\n          } else {\n            child.remove()\n            return [hasNodes, hasComponents]\n          }\n        }\n      }, [false, false])\n\n    if(!hasChildNodes && !hasChildComponents){\n      logError(\"expected at least one HTML element tag inside a component, but the component is empty:\\n\",\n        template.innerHTML.trim())\n      return this.createSpan(\"\", cid).outerHTML\n    } else if(!hasChildNodes && hasChildComponents){\n      logError(\"expected at least one HTML element tag directly inside a component, but only subcomponents were found. A component must render at least one HTML tag directly inside itself.\",\n        template.innerHTML.trim())\n      return template.innerHTML\n    } else {\n      return template.innerHTML\n    }\n  }\n\n  createSpan(text, cid){\n    let span = document.createElement(\"span\")\n    span.innerText = text\n    span.setAttribute(PHX_COMPONENT, cid)\n    return span\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.__liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:hook:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:hook:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view.dispatchUploads(name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view.withinTargets(phxTarget, view => view.dispatchUploads(name, files))\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_DISCONNECTED_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PUSH_TIMEOUT,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\n\nlet serializeForm = (form, meta = {}) => {\n  let formData = new FormData(form)\n  let toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  let params = new URLSearchParams()\n  for(let [key, val] of formData.entries()){ params.append(key, val) }\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash){\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pruningCIDs = []\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function (){ }\n    this.stopCallback = function (){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.uploaders = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      return {\n        redirect: this.redirect ? this.href : undefined,\n        url: this.redirect ? undefined : this.href || undefined,\n        params: this.connectParams(),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash\n      }\n    })\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.liveSocket.main === this }\n\n  connectParams(){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_DISCONNECTED_CLASS,\n      PHX_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  isLoading(){ return this.el.classList.contains(PHX_DISCONNECTED_CLASS) }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_DISCONNECTED_CLASS)\n    }\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  withinTargets(phxTarget, callback){\n    if(phxTarget instanceof HTMLElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(/^(0|[1-9]\\d*)$/.test(phxTarget)){\n      let targets = DOM.findComponentNodeList(this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, targets[0])\n      }\n    } else {\n      let targets = Array.from(document.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    if(title){ DOM.putTitle(title) }\n\n    callback({diff, reply, events})\n    return reply\n  }\n\n  onJoin(resp){\n    let {rendered, container} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let html = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      let forms = this.formsForRecovery(html)\n      this.joinCount++\n\n      if(forms.length > 0){\n        forms.forEach(([form, newForm, newCid], i) => {\n          this.pushFormRecovery(form, newCid, resp => {\n            if(i === forms.length - 1){\n              this.onJoinComplete(resp, html, events)\n            }\n          })\n        })\n      } else {\n        this.onJoinComplete(resp, html, events)\n      }\n    })\n  }\n\n  dropPendingRefs(){ DOM.all(this.el, `[${PHX_REF}]`, el => el.removeAttribute(PHX_REF)) }\n\n  onJoinComplete({live_patch}, html, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => {\n      window.dispatchEvent(new CustomEvent(`phx:hook:${event}`, {detail: payload}))\n    })\n  }\n\n  applyJoinPatch(live_patch, html, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false)\n    this.joinNewChildren()\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      let hook = this.addHook(hookEl)\n      if(hook){ hook.__mounted() }\n    })\n\n    this.joinPending = false\n    this.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  performPatch(patch, pruneCids){\n    let destroyedCIDs = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n\n      let newHook = this.addHook(el)\n      if(newHook){ newHook.__mounted() }\n    })\n\n    patch.after(\"phxChildAdded\", _el => phxChildrenAdded = true)\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      let cid = this.componentID(el)\n      if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      let hook = this.getHook(el)\n      hook && this.destroyHook(hook)\n    })\n\n    patch.perform()\n\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n\n    return phxChildrenAdded\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    this.joinCallback()\n    this.pendingJoinOps.forEach(([view, op]) => {\n      if(!view.isDestroyed()){ op() }\n    })\n    this.pendingJoinOps = []\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || this.liveSocket.hasPendingLink()){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let html = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff).concat(this.pruningCIDs) : null\n      let html = this.rendered.toString(cids)\n      return `<${tag}>${html}</${tag}>`\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let html = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        cb(resp)\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){\n    for(let id in this.root.children[this.id]){\n      this.getChildById(id).destroy()\n    }\n  }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  join(callback){\n    if(!this.parent){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = () => callback && callback(this.joinCount)\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => !this.isDestroyed() && this.onJoin(data))\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      return this.onRedirect({to: this.href})\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.log(\"error\", () => [\"unable to join\", resp])\n    return this.liveSocket.reloadWithJitter(this)\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if((this.isJoinPending() && document.visibilityState !== \"hidden\") ||\n      (this.liveSocket.hasPendingLink() && reason !== \"leave\")){\n\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    this.log(\"error\", () => [\"view crashed\", reason])\n    if(!this.liveSocket.isUnloaded()){ this.displayError() }\n  }\n\n  displayError(){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {to: this.href, kind: \"error\"}) }\n    this.showLoader()\n    this.setContainerClasses(PHX_DISCONNECTED_CLASS, PHX_ERROR_CLASS)\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el]] = refGenerator ? refGenerator() : [null, []]\n    let onLoadingDone = function (){ }\n    if(el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null)){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          let hookReply = null\n          if(ref !== null){ this.undoRefs(ref) }\n          if(resp.diff){\n            hookReply = this.applyDiff(\"update\", resp.diff, ({diff, events}) => {\n              this.update(diff, events)\n            })\n          }\n          if(resp.redirect){ this.onRedirect(resp.redirect) }\n          if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n          if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n          onLoadingDone()\n          onReply(resp, hookReply)\n        })\n      })\n    )\n  }\n\n  undoRefs(ref){\n    DOM.all(this.el, `[${PHX_REF}=\"${ref}\"]`, el => {\n      let disabledVal = el.getAttribute(PHX_DISABLED)\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      // restore inputs\n      if(el.getAttribute(PHX_READONLY) !== null){\n        el.readOnly = false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        el.disabled = disabledVal === \"true\" ? true : false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n\n    elements.forEach(el => {\n      el.classList.add(`phx-${event}-loading`)\n      el.setAttribute(PHX_REF, newRef)\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        el.innerText = disableText\n      }\n    })\n    return [newRef, elements]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx){\n    if(target.getAttribute(this.binding(\"target\"))){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els] = this.putRef([], \"hook\")\n    this.pushWithReply(() => [ref, els], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined){\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    return meta\n  }\n\n  pushEvent(type, el, targetCtx, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([el], type), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta),\n      cid: this.targetComponentID(el, targetCtx)\n    })\n  }\n\n  pushKey(keyElement, targetCtx, kind, phxEvent, meta){\n    this.pushWithReply(() => this.putRef([keyElement], kind), \"event\", {\n      type: kind,\n      event: phxEvent,\n      value: this.extractMeta(keyElement, meta),\n      cid: this.targetComponentID(keyElement, targetCtx)\n    })\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, eventTarget, callback){\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\")\n    let formData = serializeForm(inputEl.form, {_target: eventTarget.name})\n    if(inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR))\n      if(DOM.isUploadInput(inputEl) && inputEl.getAttribute(\"data-phx-auto-upload\") !== null){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, onReply){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let refGenerator = () => {\n      let formElements = Array.from(formEl.elements)\n      let disables = formElements.filter(filterDisables)\n      let buttons = formElements.filter(filterButton).filter(filterIgnored)\n      let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n      buttons.forEach(button => {\n        button.setAttribute(PHX_DISABLED, button.disabled)\n        button.disabled = true\n      })\n      inputs.forEach(input => {\n        input.setAttribute(PHX_READONLY, input.readOnly)\n        input.readOnly = true\n        if(input.files){\n          input.setAttribute(PHX_DISABLED, input.disabled)\n          input.disabled = true\n        }\n      })\n      formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n      return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\")\n    }\n\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      return this.scheduleSubmit(formEl, ref, () => this.pushFormSubmit(formEl, targetCtx, phxEvent, onReply))\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (_uploads) => {\n        let formData = serializeForm(formEl, {})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else {\n      let formData = serializeForm(formEl)\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      this.uploaders[inputEl] = uploader\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        if(resp.error){\n          this.undoRefs(ref)\n          let [entry_ref, reason] = resp.error\n          this.log(\"upload\", () => [`error for entry ${entry_ref}`, reason])\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  dispatchUploads(name, filesOrBlobs){\n    let inputs = DOM.findUploadInputs(this.el).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {files: filesOrBlobs}) }\n  }\n\n  pushFormRecovery(form, newCid, callback){\n    this.liveSocket.withinOwners(form, (view, targetCtx) => {\n      let input = form.elements[0]\n      let phxEvent = form.getAttribute(this.binding(PHX_AUTO_RECOVER)) || form.getAttribute(this.binding(\"change\"))\n      view.pushInput(input, targetCtx, newCid, phxEvent, input, callback)\n    })\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n\n    this.pushWithReply(refGen, \"live_patch\", {url: href}, resp => {\n      if(resp.link_redirect){\n        this.liveSocket.replaceMain(href, null, callback, linkRef)\n      } else {\n        if(this.liveSocket.commitPendingLink(linkRef)){\n          this.href = href\n        }\n        this.applyPendingUpdates()\n        callback && callback(linkRef)\n      }\n    }).receive(\"timeout\", () => this.liveSocket.redirect(window.location.href))\n  }\n\n  formsForRecovery(html){\n    if(this.joinCount === 0){ return [] }\n\n    let phxChange = this.binding(\"change\")\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n\n    return (\n      DOM.all(this.el, `form[${phxChange}]`)\n        .filter(form => form.id && this.ownsElement(form))\n        .filter(form => form.elements.length > 0)\n        .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n        .map(form => {\n          let newForm = template.content.querySelector(`form[id=\"${form.id}\"][${phxChange}=\"${form.getAttribute(phxChange)}\"]`)\n          if(newForm){\n            return [form, newForm, this.componentID(newForm)]\n          } else {\n            return [form, null, null]\n          }\n        })\n        .filter(([form, newForm, newCid]) => newForm)\n    )\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n    if(willDestroyCIDs.length > 0){\n      this.pruningCIDs.push(...willDestroyCIDs)\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // The cids are either back on the page or they will be fully removed,\n        // so we can remove them from the pruningCIDs.\n        this.pruningCIDs = this.pruningCIDs.filter(cid => willDestroyCIDs.indexOf(cid) !== -1)\n\n        // See if any of the cids we wanted to destroy were added back,\n        // if they were added back, we don't actually destroy them.\n        let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n          return DOM.findComponentNodeList(this.el, cid).length === 0\n        })\n\n        if(completelyDestroyCIDs.length > 0){\n          this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n            this.rendered.pruneCIDs(resp.cids)\n          })\n        }\n      })\n    }\n  }\n\n  ownsElement(el){\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      maybe(el.closest(PHX_VIEW_SELECTOR), node => node.id) === this.id\n  }\n\n  submitForm(form, targetCtx, phxEvent){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, () => {\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  RELOAD_JITTER\n\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport {PHX_SESSION} from \"./constants\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import LiveSocket from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.domCallbacks = Object.assign({onNodeAdded: closure(), onBeforeElUpdated: closure()}, opts.dom || {})\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.removeItem(PHX_LV_DEBUG) }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      }\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){ this.socket.disconnect(callback) }\n\n  // private\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        console.log(`simulating ${latency}ms of latency from server to client`)\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    console.log(`simulating ${latency}ms of latency from client to server`)\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    view.destroy()\n    this.disconnect()\n    let [minMs, maxMs] = RELOAD_JITTER\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n    if(tries > MAX_RELOADS){\n      this.log(view, \"join\", () => [`exceeded ${MAX_RELOADS} consecutive reloads. Entering failsafe mode`])\n      afterMs = FAILSAFE_JITTER\n    }\n    setTimeout(() => {\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.getAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.disconnect()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let oldMainEl = this.main.el\n    let newMainEl = DOM.cloneNode(oldMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash)\n    this.main.setRedirect(href)\n    this.main.join(joinCount => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        oldMainEl.replaceWith(newMainEl)\n        callback && callback()\n      }\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash){\n    let view = new View(el, this, null, flash)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el))\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => {\n      let phxTarget = childEl.getAttribute(this.binding(\"target\"))\n      if(phxTarget === null){\n        callback(view, childEl)\n      } else {\n        view.withinTargets(phxTarget, callback)\n      }\n    })\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root){ root.destroyDescendent(el.id) }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents(){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    this.bindNav()\n    this.bindClicks()\n    this.bindForms()\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, target, targetCtx, phxEvent, _phxTarget) => {\n      let matchKey = target.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      view.pushKey(target, targetCtx, type, phxEvent, {key: e.key, ...this.eventMeta(type, e, target)})\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      if(!phxTarget){\n        view.pushEvent(type, targetEl, targetCtx, phxEvent, this.eventMeta(type, e, targetEl))\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, targetCtx, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget && !phxTarget !== \"window\"){\n        view.pushEvent(type, targetEl, targetCtx, phxEvent, this.eventMeta(type, e, targetEl))\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, () => {\n            this.withinOwners(e.target, (view, targetCtx) => {\n              callback(e, event, view, e.target, targetCtx, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, () => {\n              this.withinOwners(el, (view, targetCtx) => {\n                callback(e, event, view, el, targetCtx, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    this.bindClick(\"click\", \"click\", false)\n    this.bindClick(\"mousedown\", \"capture-click\", true)\n  }\n\n  bindClick(eventName, bindingName, capture){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      if(!this.isConnected()){ return }\n      let target = null\n      if(capture){\n        target = e.target.matches(`[${click}]`) ? e.target : e.target.querySelector(`[${click}]`)\n      } else {\n        target = closestPhxBinding(e.target, click)\n      }\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){ return }\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      this.debounce(target, e, () => {\n        this.withinOwners(target, (view, targetCtx) => {\n          view.pushEvent(\"click\", target, targetCtx, phxEvent, this.eventMeta(\"click\", e, target))\n        })\n      })\n    }, capture)\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n        this.main.pushLinkPatch(href, null)\n      } else {\n        this.replaceMain(href, null, () => {\n          if(root){ this.replaceRootHistory() }\n          if(typeof(scroll) === \"number\"){\n            setTimeout(() => {\n              window.scrollTo(0, scroll)\n            }, 0) // the body needs to render before we scroll.\n          }\n        })\n      }\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      let wantsNewTab = e.metaKey || e.ctrlKey || e.button === 1\n      if(!type || !this.isConnected() || !this.main || wantsNewTab){ return }\n      let href = target.href\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      if(this.pendingLink === href){ return }\n\n      if(type === \"patch\"){\n        this.pushHistoryPatch(href, linkState, target)\n      } else if(type === \"redirect\"){\n        this.historyRedirect(href, linkState)\n      } else {\n        throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n      }\n    }, false)\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", info)\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", info)\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, () => {\n        Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n        this.registerNewLocation(window.location)\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){ return }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, (view, targetCtx) => view.submitForm(e.target, targetCtx, phxEvent))\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let input = e.target\n        let phxEvent = input.form && input.form.getAttribute(this.binding(\"change\"))\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // detect dup because some browsers dispatch both \"input\" and \"change\"\n        if(at === currentIterations - 1 && type !== lastType){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, () => {\n          this.withinOwners(input.form, (view, targetCtx) => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            view.pushInput(input, targetCtx, null, phxEvent, e.target)\n          })\n        })\n      }, false)\n    }\n  }\n\n  debounce(el, event, callback){\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n    DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, callback)\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n", "// If you want to use Phoenix channels, run `mix help phx.gen.channel`\n// to get started and then uncomment the line below.\n// import \"./user_socket.js\"\n\n// You can include dependencies in two ways.\n//\n// The simplest option is to put them in assets/vendor and\n// import them using relative paths:\n//\n//     import \"../vendor/some-package.js\"\n//\n// Alternatively, you can `npm install some-package --prefix assets` and import\n// them using a path starting with the package name:\n//\n//     import \"some-package\"\n//\n\n// Include phoenix_html to handle method=PUT/DELETE in forms and buttons.\nimport \"phoenix_html\"\n// Establish Phoenix Socket and LiveView configuration.\nimport {Socket} from \"phoenix\"\nimport {LiveSocket} from \"phoenix_live_view\"\nimport topbar from \"../vendor/topbar\"\n\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\nlet liveSocket = new LiveSocket(\"/live\", Socket, {\n  longPollFallbackMs: 2500,\n  params: {_csrf_token: csrfToken}\n})\n\n// Show progress bar on live navigation and form submits\ntopbar.config({barColors: {0: \"#29d\"}, shadowColor: \"rgba(0, 0, 0, .3)\"})\nwindow.addEventListener(\"phx:page-loading-start\", _info => topbar.show(300))\nwindow.addEventListener(\"phx:page-loading-stop\", _info => topbar.hide())\n\n// connect if there are any LiveViews on the page\nliveSocket.connect()\n\n// expose liveSocket on window for web console debug logs and latency simulation:\n// >> liveSocket.enableDebug()\n// >> liveSocket.enableLatencySim(1000)  // enabled for duration of browser session\n// >> liveSocket.disableLatencySim()\nwindow.liveSocket = liveSocket\n\n"],
  "mappings": "0zBAAA,IAAAA,GAAAC,GAAA,CAAAC,GAAAC,KAAA,EAMC,SAAUC,EAAQC,EAAU,CAC3B,cAGC,UAAY,CAGX,QAFIC,EAAW,EACXC,EAAU,CAAC,KAAM,MAAO,SAAU,GAAG,EAChCC,EAAI,EAAGA,EAAID,EAAQ,QAAU,CAACH,EAAO,sBAAuB,EAAEI,EACrEJ,EAAO,sBACLA,EAAOG,EAAQC,GAAK,yBACtBJ,EAAO,qBACLA,EAAOG,EAAQC,GAAK,yBACpBJ,EAAOG,EAAQC,GAAK,+BAEnBJ,EAAO,wBACVA,EAAO,sBAAwB,SAAUK,EAAUC,EAAS,CAC1D,IAAIC,EAAW,IAAI,KAAK,EAAE,QAAQ,EAC9BC,EAAa,KAAK,IAAI,EAAG,IAAMD,EAAWL,EAAS,EACnDO,EAAKT,EAAO,WAAW,UAAY,CACrCK,EAASE,EAAWC,CAAU,CAChC,EAAGA,CAAU,EACb,OAAAN,EAAWK,EAAWC,EACfC,CACT,GACGT,EAAO,uBACVA,EAAO,qBAAuB,SAAUS,EAAI,CAC1C,aAAaA,CAAE,CACjB,EACJ,GAAG,EAEH,IAAIC,EACFC,EACAC,EACAC,EAAkB,KAClBC,EAAc,KACdC,EAAe,KACfC,EAAW,SAAUC,EAAMC,EAAMC,EAAS,CACpCF,EAAK,iBAAkBA,EAAK,iBAAiBC,EAAMC,EAAS,EAAK,EAC5DF,EAAK,YAAaA,EAAK,YAAY,KAAOC,EAAMC,CAAO,EAC3DF,EAAK,KAAOC,GAAQC,CAC3B,EACAC,EAAU,CACR,QAAS,GACT,aAAc,EACd,UAAW,CACT,EAAG,0BACH,MAAO,0BACP,MAAO,0BACP,MAAO,0BACP,MAAO,yBACT,EACA,WAAY,GACZ,YAAa,0BACb,UAAW,IACb,EACAC,EAAU,UAAY,CACpBX,EAAO,MAAQV,EAAO,WACtBU,EAAO,OAASU,EAAQ,aAAe,EAEvC,IAAIE,EAAMZ,EAAO,WAAW,IAAI,EAChCY,EAAI,WAAaF,EAAQ,WACzBE,EAAI,YAAcF,EAAQ,YAE1B,IAAIG,EAAeD,EAAI,qBAAqB,EAAG,EAAGZ,EAAO,MAAO,CAAC,EACjE,QAASc,KAAQJ,EAAQ,UACvBG,EAAa,aAAaC,EAAMJ,EAAQ,UAAUI,EAAK,EACzDF,EAAI,UAAYF,EAAQ,aACxBE,EAAI,UAAU,EACdA,EAAI,OAAO,EAAGF,EAAQ,aAAe,CAAC,EACtCE,EAAI,OACF,KAAK,KAAKX,EAAkBD,EAAO,KAAK,EACxCU,EAAQ,aAAe,CACzB,EACAE,EAAI,YAAcC,EAClBD,EAAI,OAAO,CACb,EACAG,EAAe,UAAY,CACzBf,EAAST,EAAS,cAAc,QAAQ,EACxC,IAAIyB,EAAQhB,EAAO,MACnBgB,EAAM,SAAW,QACjBA,EAAM,IAAMA,EAAM,KAAOA,EAAM,MAAQA,EAAM,OAASA,EAAM,QAAU,EACtEA,EAAM,OAAS,OACfA,EAAM,QAAU,OACZN,EAAQ,WAAWV,EAAO,UAAU,IAAIU,EAAQ,SAAS,EAC7DnB,EAAS,KAAK,YAAYS,CAAM,EAChCM,EAAShB,EAAQ,SAAUqB,CAAO,CACpC,EACAM,EAAS,CACP,OAAQ,SAAUC,EAAM,CACtB,QAASC,KAAOD,EACVR,EAAQ,eAAeS,CAAG,IAAGT,EAAQS,GAAOD,EAAKC,GACzD,EACA,KAAM,SAAUC,EAAO,CACrB,GAAI,CAAAlB,EACJ,GAAIkB,EAAO,CACT,GAAIf,EAAc,OAClBA,EAAe,WAAW,IAAMY,EAAO,KAAK,EAAGG,CAAK,CACtD,MACElB,EAAU,GACNE,IAAgB,MAAMd,EAAO,qBAAqBc,CAAW,EAC5DJ,GAAQe,EAAa,EAC1Bf,EAAO,MAAM,QAAU,EACvBA,EAAO,MAAM,QAAU,QACvBiB,EAAO,SAAS,CAAC,EACbP,EAAQ,SACT,SAASW,GAAO,CACflB,EAAkBb,EAAO,sBAAsB+B,CAAI,EACnDJ,EAAO,SACL,IAAM,IAAO,KAAK,IAAI,EAAI,KAAK,KAAKhB,CAAe,EAAG,CAAC,CACzD,CACF,EAAG,CAGT,EACA,SAAU,SAAUqB,EAAI,CACtB,OAAI,OAAOA,GAAO,cACd,OAAOA,GAAO,WAChBA,GACGA,EAAG,QAAQ,GAAG,GAAK,GAAKA,EAAG,QAAQ,GAAG,GAAK,EACxCrB,EACA,GAAK,WAAWqB,CAAE,GAE1BrB,EAAkBqB,EAAK,EAAI,EAAIA,EAC/BX,EAAQ,GACDV,CACT,EACA,KAAM,UAAY,CAChB,aAAaI,CAAY,EACzBA,EAAe,KACVH,IACLA,EAAU,GACNC,GAAmB,OACrBb,EAAO,qBAAqBa,CAAe,EAC3CA,EAAkB,MAEnB,SAASkB,GAAO,CACf,GAAIJ,EAAO,SAAS,KAAK,GAAK,IAC5BjB,EAAO,MAAM,SAAW,IACpBA,EAAO,MAAM,SAAW,KAAM,CAChCA,EAAO,MAAM,QAAU,OACvBI,EAAc,KACd,MACF,CAEFA,EAAcd,EAAO,sBAAsB+B,CAAI,CACjD,EAAG,EACL,CACF,EAEE,OAAOhC,IAAW,UAAY,OAAOA,GAAO,SAAY,SAC1DA,GAAO,QAAU4B,EACR,OAAO,QAAW,YAAc,OAAO,IAChD,OAAO,UAAY,CACjB,OAAOA,CACT,CAAC,EAED,KAAK,OAASA,CAElB,GAAE,KAAK7B,GAAM,OAAQ,QAAQ,KClK5B,UAAW,CACV,IAAImC,EAAgBC,EAAiB,EAErC,SAASA,GAAmB,CAC1B,GAAI,OAAO,OAAO,aAAgB,WAAY,OAAO,OAAO,YAE5D,SAASC,EAAYC,EAAOC,EAAQ,CAClCA,EAASA,GAAU,CAAC,QAAS,GAAO,WAAY,GAAO,OAAQ,MAAS,EACxE,IAAIC,EAAM,SAAS,YAAY,aAAa,EAC5C,OAAAA,EAAI,gBAAgBF,EAAOC,EAAO,QAASA,EAAO,WAAYA,EAAO,MAAM,EACpEC,CACT,CACA,OAAAH,EAAY,UAAY,OAAO,MAAM,UAC9BA,CACT,CAEA,SAASI,EAAiBC,EAAMC,EAAO,CACrC,IAAIC,EAAQ,SAAS,cAAc,OAAO,EAC1C,OAAAA,EAAM,KAAO,SACbA,EAAM,KAAOF,EACbE,EAAM,MAAQD,EACPC,CACT,CAEA,SAASC,EAAYC,EAASC,EAAmB,CAC/C,IAAIC,EAAKF,EAAQ,aAAa,SAAS,EACnCG,EAASR,EAAiB,UAAWK,EAAQ,aAAa,aAAa,CAAC,EACxEI,EAAOT,EAAiB,cAAeK,EAAQ,aAAa,WAAW,CAAC,EACxEK,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAS,SAAS,cAAc,OAAO,EACvCC,EAASP,EAAQ,aAAa,QAAQ,EAE1CK,EAAK,OAAUL,EAAQ,aAAa,aAAa,IAAM,MAAS,MAAQ,OACxEK,EAAK,OAASH,EACdG,EAAK,MAAM,QAAU,OAEjBE,EAAQF,EAAK,OAASE,EACjBN,IAAmBI,EAAK,OAAS,UAE1CA,EAAK,YAAYD,CAAI,EACrBC,EAAK,YAAYF,CAAM,EACvB,SAAS,KAAK,YAAYE,CAAI,EAI9BC,EAAO,KAAO,SACdD,EAAK,YAAYC,CAAM,EACvBA,EAAO,MAAM,CACf,CAEA,OAAO,iBAAiB,QAAS,SAASE,EAAG,CAC3C,IAAIR,EAAUQ,EAAE,OAChB,GAAI,CAAAA,EAAE,iBAEN,KAAOR,GAAWA,EAAQ,cAAc,CACtC,IAAIS,EAAmB,IAAIpB,EAAc,qBAAsB,CAC7D,QAAW,GAAM,WAAc,EACjC,CAAC,EAED,GAAI,CAACW,EAAQ,cAAcS,CAAgB,EACzC,OAAAD,EAAE,eAAe,EACjBA,EAAE,yBAAyB,EACpB,GAGT,GAAIR,EAAQ,aAAa,aAAa,EACpC,OAAAD,EAAYC,EAASQ,EAAE,SAAWA,EAAE,QAAQ,EAC5CA,EAAE,eAAe,EACV,GAEPR,EAAUA,EAAQ,UAEtB,CACF,EAAG,EAAK,EAER,OAAO,iBAAiB,qBAAsB,SAAUQ,EAAG,CACzD,IAAIE,EAAUF,EAAE,OAAO,aAAa,cAAc,EAC/CE,GAAW,CAAC,OAAO,QAAQA,CAAO,GACnCF,EAAE,eAAe,CAErB,EAAG,EAAK,CACV,GAAG,EClFI,IAAIG,EAAWC,GACjB,OAAOA,GAAU,WACXA,EAEO,UAAW,CAAE,OAAOA,CAAM,ECL/BC,GAAa,OAAO,MAAS,YAAc,KAAO,KAClDC,EAAY,OAAO,QAAW,YAAc,OAAS,KACrDC,EAASF,IAAcC,GAAaC,EACpCC,GAAc,QACdC,EAAgB,CAAC,WAAY,EAAG,KAAM,EAAG,QAAS,EAAG,OAAQ,CAAC,EAC9DC,GAAkB,IAClBC,GAAkB,IAClBC,EAAiB,CAC5B,OAAQ,SACR,QAAS,UACT,OAAQ,SACR,QAAS,UACT,QAAS,SACX,EACaC,EAAiB,CAC5B,MAAO,YACP,MAAO,YACP,KAAM,WACN,MAAO,YACP,MAAO,WACT,EAEaC,GAAa,CACxB,SAAU,WACV,UAAW,WACb,EACaC,GAAa,CACxB,SAAU,CACZ,ECrBqBC,GAArB,KAA0B,CACxB,YAAYC,EAASC,EAAOC,EAASC,EAAQ,CAC3C,KAAK,QAAUH,EACf,KAAK,MAAQC,EACb,KAAK,QAAUC,GAAW,UAAW,CAAE,MAAO,CAAC,CAAE,EACjD,KAAK,aAAe,KACpB,KAAK,QAAUC,EACf,KAAK,aAAe,KACpB,KAAK,SAAW,CAAC,EACjB,KAAK,KAAO,EACd,CAMA,OAAOA,EAAQ,CACb,KAAK,QAAUA,EACf,KAAK,MAAM,EACX,KAAK,KAAK,CACZ,CAKA,MAAM,CACD,KAAK,YAAY,SAAS,IAC7B,KAAK,aAAa,EAClB,KAAK,KAAO,GACZ,KAAK,QAAQ,OAAO,KAAK,CACvB,MAAO,KAAK,QAAQ,MACpB,MAAO,KAAK,MACZ,QAAS,KAAK,QAAQ,EACtB,IAAK,KAAK,IACV,SAAU,KAAK,QAAQ,QAAQ,CACjC,CAAC,EACH,CAOA,QAAQC,EAAQC,EAAS,CACvB,OAAG,KAAK,YAAYD,CAAM,GACxBC,EAAS,KAAK,aAAa,QAAQ,EAGrC,KAAK,SAAS,KAAK,CAAC,OAAAD,EAAQ,SAAAC,CAAQ,CAAC,EAC9B,IACT,CAKA,OAAO,CACL,KAAK,eAAe,EACpB,KAAK,IAAM,KACX,KAAK,SAAW,KAChB,KAAK,aAAe,KACpB,KAAK,KAAO,EACd,CAKA,aAAa,CAAC,OAAAD,EAAQ,SAAAE,EAAU,KAAAC,CAAI,EAAE,CACpC,KAAK,SAAS,OAAOC,GAAKA,EAAE,SAAWJ,CAAM,EAC1C,QAAQI,GAAKA,EAAE,SAASF,CAAQ,CAAC,CACtC,CAKA,gBAAgB,CACX,CAAC,KAAK,UACT,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAChC,CAKA,eAAe,CACb,aAAa,KAAK,YAAY,EAC9B,KAAK,aAAe,IACtB,CAKA,cAAc,CACT,KAAK,cAAe,KAAK,cAAc,EAC1C,KAAK,IAAM,KAAK,QAAQ,OAAO,QAAQ,EACvC,KAAK,SAAW,KAAK,QAAQ,eAAe,KAAK,GAAG,EAEpD,KAAK,QAAQ,GAAG,KAAK,SAAUJ,GAAW,CACxC,KAAK,eAAe,EACpB,KAAK,cAAc,EACnB,KAAK,aAAeA,EACpB,KAAK,aAAaA,CAAO,CAC3B,CAAC,EAED,KAAK,aAAe,WAAW,IAAM,CACnC,KAAK,QAAQ,UAAW,CAAC,CAAC,CAC5B,EAAG,KAAK,OAAO,CACjB,CAKA,YAAYE,EAAO,CACjB,OAAO,KAAK,cAAgB,KAAK,aAAa,SAAWA,CAC3D,CAKA,QAAQA,EAAQE,EAAS,CACvB,KAAK,QAAQ,QAAQ,KAAK,SAAU,CAAC,OAAAF,EAAQ,SAAAE,CAAQ,CAAC,CACxD,CACF,EC9GqBG,GAArB,KAA2B,CACzB,YAAYJ,EAAUK,EAAU,CAC9B,KAAK,SAAWL,EAChB,KAAK,UAAYK,EACjB,KAAK,MAAQ,KACb,KAAK,MAAQ,CACf,CAEA,OAAO,CACL,KAAK,MAAQ,EACb,aAAa,KAAK,KAAK,CACzB,CAKA,iBAAiB,CACf,aAAa,KAAK,KAAK,EAEvB,KAAK,MAAQ,WAAW,IAAM,CAC5B,KAAK,MAAQ,KAAK,MAAQ,EAC1B,KAAK,SAAS,CAChB,EAAG,KAAK,UAAU,KAAK,MAAQ,CAAC,CAAC,CACnC,CACF,EC1BqBC,GAArB,KAA6B,CAC3B,YAAYC,EAAOC,EAAQC,EAAO,CAChC,KAAK,MAAQnB,EAAe,OAC5B,KAAK,MAAQiB,EACb,KAAK,OAAS1B,EAAQ2B,GAAU,CAAC,CAAC,EAClC,KAAK,OAASC,EACd,KAAK,SAAW,CAAC,EACjB,KAAK,WAAa,EAClB,KAAK,QAAU,KAAK,OAAO,QAC3B,KAAK,WAAa,GAClB,KAAK,SAAW,IAAIf,GAAK,KAAMH,EAAe,KAAM,KAAK,OAAQ,KAAK,OAAO,EAC7E,KAAK,WAAa,CAAC,EACnB,KAAK,gBAAkB,CAAC,EAExB,KAAK,YAAc,IAAIa,GAAM,IAAM,CAC9B,KAAK,OAAO,YAAY,GAAI,KAAK,OAAO,CAC7C,EAAG,KAAK,OAAO,aAAa,EAC5B,KAAK,gBAAgB,KAAK,KAAK,OAAO,QAAQ,IAAM,KAAK,YAAY,MAAM,CAAC,CAAC,EAC7E,KAAK,gBAAgB,KAAK,KAAK,OAAO,OAAO,IAAM,CACjD,KAAK,YAAY,MAAM,EACpB,KAAK,UAAU,GAAI,KAAK,OAAO,CACpC,CAAC,CACD,EACA,KAAK,SAAS,QAAQ,KAAM,IAAM,CAChC,KAAK,MAAQd,EAAe,OAC5B,KAAK,YAAY,MAAM,EACvB,KAAK,WAAW,QAAQoB,GAAaA,EAAU,KAAK,CAAC,EACrD,KAAK,WAAa,CAAC,CACrB,CAAC,EACD,KAAK,SAAS,QAAQ,QAAS,IAAM,CACnC,KAAK,MAAQpB,EAAe,QACzB,KAAK,OAAO,YAAY,GAAI,KAAK,YAAY,gBAAgB,CAClE,CAAC,EACD,KAAK,QAAQ,IAAM,CACjB,KAAK,YAAY,MAAM,EACpB,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,IAAI,UAAW,SAAS,KAAK,SAAS,KAAK,QAAQ,GAAG,EAC9F,KAAK,MAAQA,EAAe,OAC5B,KAAK,OAAO,OAAO,IAAI,CACzB,CAAC,EACD,KAAK,QAAQqB,GAAU,CAClB,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,IAAI,UAAW,SAAS,KAAK,QAASA,CAAM,EACjF,KAAK,UAAU,GAAI,KAAK,SAAS,MAAM,EAC1C,KAAK,MAAQrB,EAAe,QACzB,KAAK,OAAO,YAAY,GAAI,KAAK,YAAY,gBAAgB,CAClE,CAAC,EACD,KAAK,SAAS,QAAQ,UAAW,IAAM,CAClC,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,IAAI,UAAW,WAAW,KAAK,UAAU,KAAK,QAAQ,KAAM,KAAK,SAAS,OAAO,EACzG,IAAII,GAAK,KAAMH,EAAe,MAAOV,EAAQ,CAAC,CAAC,EAAG,KAAK,OAAO,EACpE,KAAK,EACf,KAAK,MAAQS,EAAe,QAC5B,KAAK,SAAS,MAAM,EACjB,KAAK,OAAO,YAAY,GAAI,KAAK,YAAY,gBAAgB,CAClE,CAAC,EACD,KAAK,GAAGC,EAAe,MAAO,CAACM,EAASe,IAAQ,CAC9C,KAAK,QAAQ,KAAK,eAAeA,CAAG,EAAGf,CAAO,CAChD,CAAC,CACH,CAOA,KAAKC,EAAU,KAAK,QAAQ,CAC1B,GAAG,KAAK,WACN,MAAM,IAAI,MAAM,4FAA4F,EAE5G,YAAK,QAAUA,EACf,KAAK,WAAa,GAClB,KAAK,OAAO,EACL,KAAK,QAEhB,CAMA,QAAQE,EAAS,CACf,KAAK,GAAGT,EAAe,MAAOS,CAAQ,CACxC,CAMA,QAAQA,EAAS,CACf,OAAO,KAAK,GAAGT,EAAe,MAAOoB,GAAUX,EAASW,CAAM,CAAC,CACjE,CAmBA,GAAGf,EAAOI,EAAS,CACjB,IAAIY,EAAM,KAAK,aACf,YAAK,SAAS,KAAK,CAAC,MAAAhB,EAAO,IAAAgB,EAAK,SAAAZ,CAAQ,CAAC,EAClCY,CACT,CAoBA,IAAIhB,EAAOgB,EAAI,CACb,KAAK,SAAW,KAAK,SAAS,OAAQC,GAC7B,EAAEA,EAAK,QAAUjB,IAAU,OAAOgB,GAAQ,aAAeA,IAAQC,EAAK,KAC9E,CACH,CAKA,SAAS,CAAE,OAAO,KAAK,OAAO,YAAY,GAAK,KAAK,SAAS,CAAE,CAkB/D,KAAKjB,EAAOC,EAASC,EAAU,KAAK,QAAQ,CAE1C,GADAD,EAAUA,GAAW,CAAC,EACnB,CAAC,KAAK,WACP,MAAM,IAAI,MAAM,kBAAkBD,UAAc,KAAK,iEAAiE,EAExH,IAAIc,EAAY,IAAIhB,GAAK,KAAME,EAAO,UAAW,CAAE,OAAOC,CAAQ,EAAGC,CAAO,EAC5E,OAAG,KAAK,QAAQ,EACdY,EAAU,KAAK,GAEfA,EAAU,aAAa,EACvB,KAAK,WAAW,KAAKA,CAAS,GAGzBA,CACT,CAkBA,MAAMZ,EAAU,KAAK,QAAQ,CAC3B,KAAK,YAAY,MAAM,EACvB,KAAK,SAAS,cAAc,EAE5B,KAAK,MAAQR,EAAe,QAC5B,IAAIwB,EAAU,IAAM,CACf,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,IAAI,UAAW,SAAS,KAAK,OAAO,EAC5E,KAAK,QAAQvB,EAAe,MAAO,OAAO,CAC5C,EACIwB,EAAY,IAAIrB,GAAK,KAAMH,EAAe,MAAOV,EAAQ,CAAC,CAAC,EAAGiB,CAAO,EACzE,OAAAiB,EAAU,QAAQ,KAAM,IAAMD,EAAQ,CAAC,EACpC,QAAQ,UAAW,IAAMA,EAAQ,CAAC,EACrCC,EAAU,KAAK,EACX,KAAK,QAAQ,GAAIA,EAAU,QAAQ,KAAM,CAAC,CAAC,EAExCA,CACT,CAcA,UAAUC,EAAQnB,EAASK,EAAK,CAAE,OAAOL,CAAQ,CAKjD,SAASU,EAAOX,EAAOC,EAASoB,EAAQ,CACtC,OAAG,KAAK,QAAUV,EAAe,GAE9BU,GAAWA,IAAY,KAAK,QAAQ,GAClC,KAAK,OAAO,UAAU,GAAG,KAAK,OAAO,IAAI,UAAW,4BAA6B,CAAC,MAAAV,EAAO,MAAAX,EAAO,QAAAC,EAAS,QAAAoB,CAAO,CAAC,EAC7G,IAEA,EAEX,CAKA,SAAS,CAAE,OAAO,KAAK,SAAS,GAAI,CAKpC,OAAOnB,EAAU,KAAK,QAAQ,CACzB,KAAK,UAAU,IAClB,KAAK,OAAO,eAAe,KAAK,KAAK,EACrC,KAAK,MAAQR,EAAe,QAC5B,KAAK,SAAS,OAAOQ,CAAO,EAC9B,CAKA,QAAQF,EAAOC,EAASe,EAAKK,EAAQ,CACnC,IAAIC,EAAiB,KAAK,UAAUtB,EAAOC,EAASe,EAAKK,CAAO,EAChE,GAAGpB,GAAW,CAACqB,EAAiB,MAAM,IAAI,MAAM,6EAA6E,EAE7H,IAAIC,EAAgB,KAAK,SAAS,OAAON,GAAQA,EAAK,QAAUjB,CAAK,EAErE,QAAQwB,EAAI,EAAGA,EAAID,EAAc,OAAQC,IAC5BD,EAAcC,GACpB,SAASF,EAAgBN,EAAKK,GAAW,KAAK,QAAQ,CAAC,CAEhE,CAKA,eAAeL,EAAI,CAAE,MAAO,cAAcA,GAAM,CAKhD,UAAU,CAAE,OAAO,KAAK,QAAUtB,EAAe,MAAO,CAKxD,WAAW,CAAE,OAAO,KAAK,QAAUA,EAAe,OAAQ,CAK1D,UAAU,CAAE,OAAO,KAAK,QAAUA,EAAe,MAAO,CAKxD,WAAW,CAAE,OAAO,KAAK,QAAUA,EAAe,OAAQ,CAK1D,WAAW,CAAE,OAAO,KAAK,QAAUA,EAAe,OAAQ,CAC5D,ECjTqB+B,GAArB,KAA0B,CAExB,OAAO,QAAQC,EAAQC,EAAUC,EAAQC,EAAM3B,EAAS4B,EAAW1B,EAAS,CAC1E,GAAGf,EAAO,eAAe,CACvB,IAAI0C,EAAM,IAAI1C,EAAO,eACrB,OAAO,KAAK,eAAe0C,EAAKL,EAAQC,EAAUE,EAAM3B,EAAS4B,EAAW1B,CAAQ,CACtF,KAAO,CACL,IAAI2B,EAAM,IAAI1C,EAAO,eACrB,OAAO,KAAK,WAAW0C,EAAKL,EAAQC,EAAUC,EAAQC,EAAM3B,EAAS4B,EAAW1B,CAAQ,CAC1F,CACF,CAEA,OAAO,eAAe2B,EAAKL,EAAQC,EAAUE,EAAM3B,EAAS4B,EAAW1B,EAAS,CAC9E,OAAA2B,EAAI,QAAU7B,EACd6B,EAAI,KAAKL,EAAQC,CAAQ,EACzBI,EAAI,OAAS,IAAM,CACjB,IAAI1B,EAAW,KAAK,UAAU0B,EAAI,YAAY,EAC9C3B,GAAYA,EAASC,CAAQ,CAC/B,EACGyB,IAAYC,EAAI,UAAYD,GAG/BC,EAAI,WAAa,IAAM,CAAE,EAEzBA,EAAI,KAAKF,CAAI,EACNE,CACT,CAEA,OAAO,WAAWA,EAAKL,EAAQC,EAAUC,EAAQC,EAAM3B,EAAS4B,EAAW1B,EAAS,CAClF,OAAA2B,EAAI,KAAKL,EAAQC,EAAU,EAAI,EAC/BI,EAAI,QAAU7B,EACd6B,EAAI,iBAAiB,eAAgBH,CAAM,EAC3CG,EAAI,QAAU,IAAM3B,GAAYA,EAAS,IAAI,EAC7C2B,EAAI,mBAAqB,IAAM,CAC7B,GAAGA,EAAI,aAAelC,GAAW,UAAYO,EAAS,CACpD,IAAIC,EAAW,KAAK,UAAU0B,EAAI,YAAY,EAC9C3B,EAASC,CAAQ,CACnB,CACF,EACGyB,IAAYC,EAAI,UAAYD,GAE/BC,EAAI,KAAKF,CAAI,EACNE,CACT,CAEA,OAAO,UAAUC,EAAK,CACpB,GAAG,CAACA,GAAQA,IAAS,GAAK,OAAO,KAEjC,GAAI,CACF,OAAO,KAAK,MAAMA,CAAI,CACxB,OAASC,EAAT,CACE,gBAAW,QAAQ,IAAI,gCAAiCD,CAAI,EACrD,IACT,CACF,CAEA,OAAO,UAAUE,EAAKC,EAAU,CAC9B,IAAIC,EAAW,CAAC,EAChB,QAAQC,KAAOH,EAAI,CACjB,GAAG,CAAC,OAAO,UAAU,eAAe,KAAKA,EAAKG,CAAG,EAAI,SACrD,IAAIC,EAAWH,EAAY,GAAGA,KAAaE,KAASA,EAChDE,EAAWL,EAAIG,GAChB,OAAOE,GAAa,SACrBH,EAAS,KAAK,KAAK,UAAUG,EAAUD,CAAQ,CAAC,EAEhDF,EAAS,KAAK,mBAAmBE,CAAQ,EAAI,IAAM,mBAAmBC,CAAQ,CAAC,CAEnF,CACA,OAAOH,EAAS,KAAK,GAAG,CAC1B,CAEA,OAAO,aAAaI,EAAK5B,EAAO,CAC9B,GAAG,OAAO,KAAKA,CAAM,EAAE,SAAW,EAAI,OAAO4B,EAE7C,IAAIC,EAASD,EAAI,MAAM,IAAI,EAAI,IAAM,IACrC,MAAO,GAAGA,IAAMC,IAAS,KAAK,UAAU7B,CAAM,GAChD,CACF,EC3EI8B,GAAuBC,GAAW,CACpC,IAAIC,EAAS,GACTC,EAAQ,IAAI,WAAWF,CAAM,EAC7BG,EAAMD,EAAM,WAChB,QAAQrB,EAAI,EAAGA,EAAIsB,EAAKtB,IAAMoB,GAAU,OAAO,aAAaC,EAAMrB,EAAE,EACpE,OAAO,KAAKoB,CAAM,CACpB,EAEqBG,EAArB,KAA8B,CAE5B,YAAYpB,EAAS,CACnB,KAAK,SAAW,KAChB,KAAK,MAAQ,KACb,KAAK,cAAgB,GACrB,KAAK,KAAO,IAAI,IAChB,KAAK,iBAAmB,GACxB,KAAK,aAAe,KACpB,KAAK,kBAAoB,KACzB,KAAK,YAAc,CAAC,EACpB,KAAK,OAAS,UAAW,CAAE,EAC3B,KAAK,QAAU,UAAW,CAAE,EAC5B,KAAK,UAAY,UAAW,CAAE,EAC9B,KAAK,QAAU,UAAW,CAAE,EAC5B,KAAK,aAAe,KAAK,kBAAkBA,CAAQ,EACnD,KAAK,WAAapC,EAAc,WAEhC,WAAW,IAAM,KAAK,KAAK,EAAG,CAAC,CACjC,CAEA,kBAAkBoC,EAAS,CACzB,OAAQA,EACL,QAAQ,QAAS,SAAS,EAC1B,QAAQ,SAAU,UAAU,EAC5B,QAAQ,IAAI,OAAO,QAAW/B,GAAW,SAAS,EAAG,MAAQA,GAAW,QAAQ,CACrF,CAEA,aAAa,CACX,OAAO6B,GAAK,aAAa,KAAK,aAAc,CAAC,MAAO,KAAK,KAAK,CAAC,CACjE,CAEA,cAAcuB,EAAMjC,EAAQkC,EAAS,CACnC,KAAK,MAAMD,EAAMjC,EAAQkC,CAAQ,EACjC,KAAK,WAAa1D,EAAc,UAClC,CAEA,WAAW,CACT,KAAK,QAAQ,SAAS,EACtB,KAAK,cAAc,KAAM,UAAW,EAAK,CAC3C,CAEA,UAAU,CAAE,OAAO,KAAK,aAAeA,EAAc,MAAQ,KAAK,aAAeA,EAAc,UAAW,CAE1G,MAAM,CACJ,KAAK,KAAK,MAAO,mBAAoB,KAAM,IAAM,KAAK,UAAU,EAAGyC,GAAQ,CACzE,GAAGA,EAAK,CACN,GAAI,CAAC,OAAA7B,EAAQ,MAAA+C,EAAO,SAAAC,CAAQ,EAAInB,EAChC,KAAK,MAAQkB,CACf,MACE/C,EAAS,EAGX,OAAOA,OACA,KACHgD,EAAS,QAAQC,GAAO,CAmBtB,WAAW,IAAM,KAAK,UAAU,CAAC,KAAMA,CAAG,CAAC,EAAG,CAAC,CACjD,CAAC,EACD,KAAK,KAAK,EACV,UACG,KACH,KAAK,KAAK,EACV,UACG,KACH,KAAK,WAAa7D,EAAc,KAChC,KAAK,OAAO,CAAC,CAAC,EACd,KAAK,KAAK,EACV,UACG,KACH,KAAK,QAAQ,GAAG,EAChB,KAAK,MAAM,KAAM,YAAa,EAAK,EACnC,UACG,OACA,KACH,KAAK,QAAQ,GAAG,EAChB,KAAK,cAAc,KAAM,wBAAyB,GAAG,EACrD,cACO,MAAM,IAAI,MAAM,yBAAyBY,GAAQ,EAE9D,CAAC,CACH,CAMA,KAAK0B,EAAK,CACL,OAAOA,GAAU,WAAWA,EAAOa,GAAoBb,CAAI,GAC3D,KAAK,aACN,KAAK,aAAa,KAAKA,CAAI,EACnB,KAAK,iBACb,KAAK,YAAY,KAAKA,CAAI,GAE1B,KAAK,aAAe,CAACA,CAAI,EACzB,KAAK,kBAAoB,WAAW,IAAM,CACxC,KAAK,UAAU,KAAK,YAAY,EAChC,KAAK,aAAe,IACtB,EAAG,CAAC,EAER,CAEA,UAAUsB,EAAS,CACjB,KAAK,iBAAmB,GACxB,KAAK,KAAK,OAAQ,uBAAwBA,EAAS,KAAK;CAAI,EAAG,IAAM,KAAK,QAAQ,SAAS,EAAGnB,GAAQ,CACpG,KAAK,iBAAmB,GACrB,CAACA,GAAQA,EAAK,SAAW,KAC1B,KAAK,QAAQA,GAAQA,EAAK,MAAM,EAChC,KAAK,cAAc,KAAM,wBAAyB,EAAK,GAC/C,KAAK,YAAY,OAAS,IAClC,KAAK,UAAU,KAAK,WAAW,EAC/B,KAAK,YAAc,CAAC,EAExB,CAAC,CACH,CAEA,MAAMgB,EAAMjC,EAAQkC,EAAS,CAC3B,QAAQlB,KAAO,KAAK,KAAOA,EAAI,MAAM,EACrC,KAAK,WAAaxC,EAAc,OAChC,IAAI8D,EAAO,OAAO,OAAO,CAAC,KAAM,IAAM,OAAQ,OAAW,SAAU,EAAI,EAAG,CAAC,KAAAL,EAAM,OAAAjC,EAAQ,SAAAkC,CAAQ,CAAC,EAClG,KAAK,YAAc,CAAC,EACpB,aAAa,KAAK,iBAAiB,EACnC,KAAK,kBAAoB,KACtB,OAAO,YAAgB,YACxB,KAAK,QAAQ,IAAI,WAAW,QAASI,CAAI,CAAC,EAE1C,KAAK,QAAQA,CAAI,CAErB,CAEA,KAAK3B,EAAQ4B,EAAazB,EAAM0B,EAAiBnD,EAAS,CACxD,IAAI2B,EACAD,EAAY,IAAM,CACpB,KAAK,KAAK,OAAOC,CAAG,EACpBwB,EAAgB,CAClB,EACAxB,EAAMN,GAAK,QAAQC,EAAQ,KAAK,YAAY,EAAG4B,EAAazB,EAAM,KAAK,QAASC,EAAWE,GAAQ,CACjG,KAAK,KAAK,OAAOD,CAAG,EACjB,KAAK,SAAS,GAAI3B,EAAS4B,CAAI,CACpC,CAAC,EACD,KAAK,KAAK,IAAID,CAAG,CACnB,CACF,EEzKA,IAAOyB,GAAQ,CACb,cAAe,EACf,YAAa,EACb,MAAO,CAAC,KAAM,EAAG,MAAO,EAAG,UAAW,CAAC,EAEvC,OAAOC,EAAKC,EAAS,CACnB,GAAGD,EAAI,QAAQ,cAAgB,YAC7B,OAAOC,EAAS,KAAK,aAAaD,CAAG,CAAC,EACjC,CACL,IAAIE,EAAU,CAACF,EAAI,SAAUA,EAAI,IAAKA,EAAI,MAAOA,EAAI,MAAOA,EAAI,OAAO,EACvE,OAAOC,EAAS,KAAK,UAAUC,CAAO,CAAC,CACzC,CACF,EAEA,OAAOC,EAAYF,EAAS,CAC1B,GAAGE,EAAW,cAAgB,YAC5B,OAAOF,EAAS,KAAK,aAAaE,CAAU,CAAC,EACxC,CACL,GAAI,CAACC,EAAUC,EAAKC,EAAOC,EAAOL,CAAO,EAAI,KAAK,MAAMC,CAAU,EAClE,OAAOF,EAAS,CAAC,SAAAG,EAAU,IAAAC,EAAK,MAAAC,EAAO,MAAAC,EAAO,QAAAL,CAAO,CAAC,CACxD,CACF,EAIA,aAAaM,EAAQ,CACnB,GAAI,CAAC,SAAAJ,EAAU,IAAAC,EAAK,MAAAE,EAAO,MAAAD,EAAO,QAAAJ,CAAO,EAAIM,EACzCC,EAAa,KAAK,YAAcL,EAAS,OAASC,EAAI,OAASC,EAAM,OAASC,EAAM,OACpFG,EAAS,IAAI,YAAY,KAAK,cAAgBD,CAAU,EACxDE,EAAO,IAAI,SAASD,CAAM,EAC1BE,EAAS,EAEbD,EAAK,SAASC,IAAU,KAAK,MAAM,IAAI,EACvCD,EAAK,SAASC,IAAUR,EAAS,MAAM,EACvCO,EAAK,SAASC,IAAUP,EAAI,MAAM,EAClCM,EAAK,SAASC,IAAUN,EAAM,MAAM,EACpCK,EAAK,SAASC,IAAUL,EAAM,MAAM,EACpC,MAAM,KAAKH,EAAUS,GAAQF,EAAK,SAASC,IAAUC,EAAK,WAAW,CAAC,CAAC,CAAC,EACxE,MAAM,KAAKR,EAAKQ,GAAQF,EAAK,SAASC,IAAUC,EAAK,WAAW,CAAC,CAAC,CAAC,EACnE,MAAM,KAAKP,EAAOO,GAAQF,EAAK,SAASC,IAAUC,EAAK,WAAW,CAAC,CAAC,CAAC,EACrE,MAAM,KAAKN,EAAOM,GAAQF,EAAK,SAASC,IAAUC,EAAK,WAAW,CAAC,CAAC,CAAC,EAErE,IAAIC,EAAW,IAAI,WAAWJ,EAAO,WAAaR,EAAQ,UAAU,EACpE,OAAAY,EAAS,IAAI,IAAI,WAAWJ,CAAM,EAAG,CAAC,EACtCI,EAAS,IAAI,IAAI,WAAWZ,CAAO,EAAGQ,EAAO,UAAU,EAEhDI,EAAS,MAClB,EAEA,aAAaC,EAAO,CAClB,IAAIJ,EAAO,IAAI,SAASI,CAAM,EAC1BC,EAAOL,EAAK,SAAS,CAAC,EACtBM,EAAU,IAAI,YAClB,OAAOD,QACA,KAAK,MAAM,KAAM,OAAO,KAAK,WAAWD,EAAQJ,EAAMM,CAAO,OAC7D,KAAK,MAAM,MAAO,OAAO,KAAK,YAAYF,EAAQJ,EAAMM,CAAO,OAC/D,KAAK,MAAM,UAAW,OAAO,KAAK,gBAAgBF,EAAQJ,EAAMM,CAAO,EAEhF,EAEA,WAAWF,EAAQJ,EAAMM,EAAQ,CAC/B,IAAIC,EAAcP,EAAK,SAAS,CAAC,EAC7BQ,EAAYR,EAAK,SAAS,CAAC,EAC3BS,EAAYT,EAAK,SAAS,CAAC,EAC3BC,EAAS,KAAK,cAAgB,KAAK,YAAc,EACjDS,EAAUJ,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASM,CAAW,CAAC,EACvEN,EAASA,EAASM,EAClB,IAAIZ,EAAQW,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASO,CAAS,CAAC,EACnEP,EAASA,EAASO,EAClB,IAAIZ,EAAQU,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASQ,CAAS,CAAC,EACnER,EAASA,EAASQ,EAClB,IAAIE,EAAOP,EAAO,MAAMH,EAAQG,EAAO,UAAU,EACjD,MAAO,CAAC,SAAUM,EAAS,IAAK,KAAM,MAAAf,EAAc,MAAAC,EAAc,QAASe,CAAI,CACjF,EAEA,YAAYP,EAAQJ,EAAMM,EAAQ,CAChC,IAAIC,EAAcP,EAAK,SAAS,CAAC,EAC7BY,EAAUZ,EAAK,SAAS,CAAC,EACzBQ,EAAYR,EAAK,SAAS,CAAC,EAC3BS,EAAYT,EAAK,SAAS,CAAC,EAC3BC,EAAS,KAAK,cAAgB,KAAK,YACnCS,EAAUJ,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASM,CAAW,CAAC,EACvEN,EAASA,EAASM,EAClB,IAAIb,EAAMY,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASW,CAAO,CAAC,EAC/DX,EAASA,EAASW,EAClB,IAAIjB,EAAQW,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASO,CAAS,CAAC,EACnEP,EAASA,EAASO,EAClB,IAAIZ,EAAQU,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASQ,CAAS,CAAC,EACnER,EAASA,EAASQ,EAClB,IAAIE,EAAOP,EAAO,MAAMH,EAAQG,EAAO,UAAU,EAC7Cb,EAAU,CAAC,OAAQK,EAAO,SAAUe,CAAI,EAC5C,MAAO,CAAC,SAAUD,EAAS,IAAAhB,EAAU,MAAAC,EAAc,MAAOkB,EAAe,MAAO,QAAAtB,CAAgB,CAClG,EAEA,gBAAgBa,EAAQJ,EAAMM,EAAQ,CACpC,IAAIE,EAAYR,EAAK,SAAS,CAAC,EAC3BS,EAAYT,EAAK,SAAS,CAAC,EAC3BC,EAAS,KAAK,cAAgB,EAC9BN,EAAQW,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASO,CAAS,CAAC,EACnEP,EAASA,EAASO,EAClB,IAAIZ,EAAQU,EAAQ,OAAOF,EAAO,MAAMH,EAAQA,EAASQ,CAAS,CAAC,EACnER,EAASA,EAASQ,EAClB,IAAIE,EAAOP,EAAO,MAAMH,EAAQG,EAAO,UAAU,EAEjD,MAAO,CAAC,SAAU,KAAM,IAAK,KAAM,MAAAT,EAAc,MAAAC,EAAc,QAASe,CAAI,CAC9E,CACF,ECFqBG,GAArB,KAA4B,CAC1B,YAAYC,EAAUC,EAAO,CAAC,EAAE,CAC9B,KAAK,qBAAuB,CAAC,KAAM,CAAC,EAAG,MAAO,CAAC,EAAG,MAAO,CAAC,EAAG,QAAS,CAAC,CAAC,EACxE,KAAK,SAAW,CAAC,EACjB,KAAK,WAAa,CAAC,EACnB,KAAK,IAAM,EACX,KAAK,QAAUA,EAAK,SAAWC,GAC/B,KAAK,UAAYD,EAAK,WAAaE,EAAO,WAAaC,EACvD,KAAK,yBAA2B,GAChC,KAAK,mBAAqBH,EAAK,mBAC/B,KAAK,cAAgB,KACrB,KAAK,aAAeA,EAAK,gBAAmBE,GAAUA,EAAO,eAC7D,KAAK,uBAAyB,EAC9B,KAAK,eAAiB9B,GAAW,OAAO,KAAKA,EAAU,EACvD,KAAK,eAAiBA,GAAW,OAAO,KAAKA,EAAU,EACvD,KAAK,cAAgB,GACrB,KAAK,WAAa4B,EAAK,YAAc,cACrC,KAAK,aAAe,EACjB,KAAK,YAAcG,GACpB,KAAK,OAASH,EAAK,QAAU,KAAK,eAClC,KAAK,OAASA,EAAK,QAAU,KAAK,iBAElC,KAAK,OAAS,KAAK,eACnB,KAAK,OAAS,KAAK,gBAErB,IAAII,EAA+B,KAChCC,GAAaA,EAAU,mBACxBA,EAAU,iBAAiB,WAAYC,GAAM,CACxC,KAAK,OACN,KAAK,WAAW,EAChBF,EAA+B,KAAK,aAExC,CAAC,EACDC,EAAU,iBAAiB,WAAYC,GAAM,CACxCF,IAAiC,KAAK,eACvCA,EAA+B,KAC/B,KAAK,QAAQ,EAEjB,CAAC,GAEH,KAAK,oBAAsBJ,EAAK,qBAAuB,IACvD,KAAK,cAAiBO,GACjBP,EAAK,cACCA,EAAK,cAAcO,CAAK,EAExB,CAAC,IAAM,IAAM,GAAI,EAAEA,EAAQ,IAAM,IAG5C,KAAK,iBAAoBA,GACpBP,EAAK,iBACCA,EAAK,iBAAiBO,CAAK,EAE3B,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,GAAI,EAAEA,EAAQ,IAAM,IAGvE,KAAK,OAASP,EAAK,QAAU,KAC1B,CAAC,KAAK,QAAUA,EAAK,QACtB,KAAK,OAAS,CAACX,EAAMhB,EAAKsB,IAAS,CAAE,QAAQ,IAAI,GAAGN,MAAShB,IAAOsB,CAAI,CAAE,GAE5E,KAAK,kBAAoBK,EAAK,mBAAqB,IACnD,KAAK,OAASQ,EAAQR,EAAK,QAAU,CAAC,CAAC,EACvC,KAAK,SAAW,GAAGD,KAAYU,GAAW,YAC1C,KAAK,IAAMT,EAAK,KAAOU,GACvB,KAAK,sBAAwB,KAC7B,KAAK,eAAiB,KACtB,KAAK,oBAAsB,KAC3B,KAAK,eAAiB,IAAIC,GAAM,IAAM,CACpC,KAAK,SAAS,IAAM,KAAK,QAAQ,CAAC,CACpC,EAAG,KAAK,gBAAgB,CAC1B,CAKA,sBAAsB,CAAE,OAAOR,CAAS,CAQxC,iBAAiBS,EAAa,CAC5B,KAAK,eACL,KAAK,cAAgB,GACrB,aAAa,KAAK,aAAa,EAC/B,KAAK,eAAe,MAAM,EACvB,KAAK,OACN,KAAK,KAAK,MAAM,EAChB,KAAK,KAAO,MAEd,KAAK,UAAYA,CACnB,CAOA,UAAU,CAAE,OAAO,SAAS,SAAS,MAAM,QAAQ,EAAI,MAAQ,IAAK,CAOpE,aAAa,CACX,IAAIC,EAAMC,GAAK,aACbA,GAAK,aAAa,KAAK,SAAU,KAAK,OAAO,CAAC,EAAG,CAAC,IAAK,KAAK,GAAG,CAAC,EAClE,OAAGD,EAAI,OAAO,CAAC,IAAM,IAAaA,EAC/BA,EAAI,OAAO,CAAC,IAAM,IAAa,GAAG,KAAK,SAAS,KAAKA,IAEjD,GAAG,KAAK,SAAS,OAAO,SAAS,OAAOA,GACjD,CAWA,WAAWvC,EAAUyC,EAAMC,EAAO,CAChC,KAAK,eACL,KAAK,cAAgB,GACrB,aAAa,KAAK,aAAa,EAC/B,KAAK,eAAe,MAAM,EAC1B,KAAK,SAAS1C,EAAUyC,EAAMC,CAAM,CACtC,CASA,QAAQC,EAAO,CACVA,IACD,SAAW,QAAQ,IAAI,yFAAyF,EAChH,KAAK,OAAST,EAAQS,CAAM,GAE3B,MAAK,OACL,KAAK,oBAAsB,KAAK,YAAcd,EAC/C,KAAK,oBAAoBA,EAAU,KAAK,kBAAkB,EAE1D,KAAK,iBAAiB,EAE1B,CAQA,IAAId,EAAMhB,EAAKsB,EAAK,CAAE,KAAK,QAAU,KAAK,OAAON,EAAMhB,EAAKsB,CAAI,CAAE,CAKlE,WAAW,CAAE,OAAO,KAAK,SAAW,IAAK,CASzC,OAAOrB,EAAS,CACd,IAAII,EAAM,KAAK,QAAQ,EACvB,YAAK,qBAAqB,KAAK,KAAK,CAACA,EAAKJ,CAAQ,CAAC,EAC5CI,CACT,CAMA,QAAQJ,EAAS,CACf,IAAII,EAAM,KAAK,QAAQ,EACvB,YAAK,qBAAqB,MAAM,KAAK,CAACA,EAAKJ,CAAQ,CAAC,EAC7CI,CACT,CASA,QAAQJ,EAAS,CACf,IAAII,EAAM,KAAK,QAAQ,EACvB,YAAK,qBAAqB,MAAM,KAAK,CAACA,EAAKJ,CAAQ,CAAC,EAC7CI,CACT,CAMA,UAAUJ,EAAS,CACjB,IAAII,EAAM,KAAK,QAAQ,EACvB,YAAK,qBAAqB,QAAQ,KAAK,CAACA,EAAKJ,CAAQ,CAAC,EAC/CI,CACT,CAQA,KAAKJ,EAAS,CACZ,GAAG,CAAC,KAAK,YAAY,EAAI,MAAO,GAChC,IAAII,EAAM,KAAK,QAAQ,EACnBwC,EAAY,KAAK,IAAI,EACzB,KAAK,KAAK,CAAC,MAAO,UAAW,MAAO,YAAa,QAAS,CAAC,EAAG,IAAAxC,CAAQ,CAAC,EACvE,IAAIyC,EAAW,KAAK,UAAU9C,GAAO,CAChCA,EAAI,MAAQK,IACb,KAAK,IAAI,CAACyC,CAAQ,CAAC,EACnB7C,EAAS,KAAK,IAAI,EAAI4C,CAAS,EAEnC,CAAC,EACD,MAAO,EACT,CAMA,kBAAkB,CAChB,KAAK,eACL,KAAK,cAAgB,GACrB,KAAK,KAAO,IAAI,KAAK,UAAU,KAAK,YAAY,CAAC,EACjD,KAAK,KAAK,WAAa,KAAK,WAC5B,KAAK,KAAK,QAAU,KAAK,kBACzB,KAAK,KAAK,OAAS,IAAM,KAAK,WAAW,EACzC,KAAK,KAAK,QAAUE,GAAS,KAAK,YAAYA,CAAK,EACnD,KAAK,KAAK,UAAYxC,GAAS,KAAK,cAAcA,CAAK,EACvD,KAAK,KAAK,QAAUA,GAAS,KAAK,YAAYA,CAAK,CACrD,CAEA,WAAWyC,EAAI,CAAE,OAAO,KAAK,cAAgB,KAAK,aAAa,QAAQA,CAAG,CAAE,CAE5E,aAAaA,EAAKC,EAAI,CAAE,KAAK,cAAgB,KAAK,aAAa,QAAQD,EAAKC,CAAG,CAAE,CAEjF,oBAAoBC,EAAmBC,EAAoB,KAAK,CAC9D,aAAa,KAAK,aAAa,EAC/B,IAAIC,EAAc,GACdC,EAAmB,GACnBC,EAASC,EACTC,EAAYb,GAAW,CACzB,KAAK,IAAI,YAAa,mBAAmBO,EAAkB,UAAWP,CAAM,EAC5E,KAAK,IAAI,CAACW,EAASC,CAAQ,CAAC,EAC5BF,EAAmB,GACnB,KAAK,iBAAiBH,CAAiB,EACvC,KAAK,iBAAiB,CACxB,EACA,GAAG,KAAK,WAAW,gBAAgBA,EAAkB,MAAM,EAAI,OAAOM,EAAS,WAAW,EAE1F,KAAK,cAAgB,WAAWA,EAAUL,CAAiB,EAE3DI,EAAW,KAAK,QAAQZ,GAAU,CAChC,KAAK,IAAI,YAAa,QAASA,CAAM,EAClCU,GAAoB,CAACD,IACtB,aAAa,KAAK,aAAa,EAC/BI,EAASb,CAAM,EAEnB,CAAC,EACD,KAAK,OAAO,IAAM,CAEhB,GADAS,EAAc,GACX,CAACC,EAEF,OAAI,KAAK,0BAA2B,KAAK,aAAa,gBAAgBH,EAAkB,OAAQ,MAAM,EAC/F,KAAK,IAAI,YAAa,eAAeA,EAAkB,eAAe,EAG/E,aAAa,KAAK,aAAa,EAC/B,KAAK,cAAgB,WAAWM,EAAUL,CAAiB,EAC3D,KAAK,KAAKM,GAAO,CACf,KAAK,IAAI,YAAa,6BAA8BA,CAAG,EACvD,KAAK,yBAA2B,GAChC,aAAa,KAAK,aAAa,CACjC,CAAC,CACH,CAAC,EACD,KAAK,iBAAiB,CACxB,CAEA,iBAAiB,CACf,aAAa,KAAK,cAAc,EAChC,aAAa,KAAK,qBAAqB,CACzC,CAEA,YAAY,CACP,KAAK,UAAU,GAAG,KAAK,IAAI,YAAa,GAAG,KAAK,UAAU,qBAAqB,KAAK,YAAY,GAAG,EACtG,KAAK,cAAgB,GACrB,KAAK,yBACL,KAAK,gBAAgB,EACrB,KAAK,eAAe,MAAM,EAC1B,KAAK,eAAe,EACpB,KAAK,qBAAqB,KAAK,QAAQ,CAAC,CAAC,CAAExD,CAAQ,IAAMA,EAAS,CAAC,CACrE,CAMA,kBAAkB,CACb,KAAK,sBACN,KAAK,oBAAsB,KACxB,KAAK,UAAU,GAAI,KAAK,IAAI,YAAa,0DAA0D,EACtG,KAAK,iBAAiB,EACtB,KAAK,cAAgB,GACrB,KAAK,SAAS,IAAM,KAAK,eAAe,gBAAgB,EAAGyD,GAAiB,mBAAmB,EAEnG,CAEA,gBAAgB,CACX,KAAK,MAAQ,KAAK,KAAK,gBAC1B,KAAK,oBAAsB,KAC3B,KAAK,gBAAgB,EACrB,KAAK,eAAiB,WAAW,IAAM,KAAK,cAAc,EAAG,KAAK,mBAAmB,EACvF,CAEA,SAASzD,EAAUyC,EAAMC,EAAO,CAC9B,GAAG,CAAC,KAAK,KACP,OAAO1C,GAAYA,EAAS,EAG9B,KAAK,kBAAkB,IAAM,CACxB,KAAK,OACHyC,EAAO,KAAK,KAAK,MAAMA,EAAMC,GAAU,EAAE,EAAW,KAAK,KAAK,MAAM,GAGzE,KAAK,oBAAoB,IAAM,CAC1B,KAAK,OACN,KAAK,KAAK,OAAS,UAAW,CAAE,EAChC,KAAK,KAAK,QAAU,UAAW,CAAE,EACjC,KAAK,KAAK,UAAY,UAAW,CAAE,EACnC,KAAK,KAAK,QAAU,UAAW,CAAE,EACjC,KAAK,KAAO,MAGd1C,GAAYA,EAAS,CACvB,CAAC,CACH,CAAC,CACH,CAEA,kBAAkBA,EAAUiC,EAAQ,EAAE,CACpC,GAAGA,IAAU,GAAK,CAAC,KAAK,MAAQ,CAAC,KAAK,KAAK,eAAe,CACxDjC,EAAS,EACT,MACF,CAEA,WAAW,IAAM,CACf,KAAK,kBAAkBA,EAAUiC,EAAQ,CAAC,CAC5C,EAAG,IAAMA,CAAK,CAChB,CAEA,oBAAoBjC,EAAUiC,EAAQ,EAAE,CACtC,GAAGA,IAAU,GAAK,CAAC,KAAK,MAAQ,KAAK,KAAK,aAAeyB,EAAc,OAAO,CAC5E1D,EAAS,EACT,MACF,CAEA,WAAW,IAAM,CACf,KAAK,oBAAoBA,EAAUiC,EAAQ,CAAC,CAC9C,EAAG,IAAMA,CAAK,CAChB,CAEA,YAAY3B,EAAM,CAChB,IAAIqD,EAAYrD,GAASA,EAAM,KAC5B,KAAK,UAAU,GAAG,KAAK,IAAI,YAAa,QAASA,CAAK,EACzD,KAAK,iBAAiB,EACtB,KAAK,gBAAgB,EAClB,CAAC,KAAK,eAAiBqD,IAAc,KACtC,KAAK,eAAe,gBAAgB,EAEtC,KAAK,qBAAqB,MAAM,QAAQ,CAAC,CAAC,CAAE3D,CAAQ,IAAMA,EAASM,CAAK,CAAC,CAC3E,CAKA,YAAYwC,EAAM,CACb,KAAK,UAAU,GAAG,KAAK,IAAI,YAAaA,CAAK,EAChD,IAAIc,EAAkB,KAAK,UACvBC,EAAoB,KAAK,uBAC7B,KAAK,qBAAqB,MAAM,QAAQ,CAAC,CAAC,CAAE7D,CAAQ,IAAM,CACxDA,EAAS8C,EAAOc,EAAiBC,CAAiB,CACpD,CAAC,GACED,IAAoB,KAAK,WAAaC,EAAoB,IAC3D,KAAK,iBAAiB,CAE1B,CAKA,kBAAkB,CAChB,KAAK,SAAS,QAAQC,GAAW,CAC1BA,EAAQ,UAAU,GAAKA,EAAQ,UAAU,GAAKA,EAAQ,SAAS,GAClEA,EAAQ,QAAQvC,EAAe,KAAK,CAExC,CAAC,CACH,CAKA,iBAAiB,CACf,OAAO,KAAK,MAAQ,KAAK,KAAK,iBACvBmC,EAAc,WAAY,MAAO,kBACjCA,EAAc,KAAM,MAAO,YAC3BA,EAAc,QAAS,MAAO,kBAC1B,MAAO,SAEpB,CAKA,aAAa,CAAE,OAAO,KAAK,gBAAgB,IAAM,MAAO,CAOxD,OAAOI,EAAQ,CACb,KAAK,IAAIA,EAAQ,eAAe,EAChC,KAAK,SAAW,KAAK,SAAS,OAAOC,GAAKA,IAAMD,CAAO,CACzD,CAQA,IAAIE,EAAK,CACP,QAAQjB,KAAO,KAAK,qBAClB,KAAK,qBAAqBA,GAAO,KAAK,qBAAqBA,GAAK,OAAO,CAAC,CAAC3C,CAAG,IACnE4D,EAAK,QAAQ5D,CAAG,IAAM,EAC9B,CAEL,CASA,QAAQC,EAAO4D,EAAa,CAAC,EAAE,CAC7B,IAAIC,EAAO,IAAIC,GAAQ9D,EAAO4D,EAAY,IAAI,EAC9C,YAAK,SAAS,KAAKC,CAAI,EAChBA,CACT,CAKA,KAAK7C,EAAK,CACR,GAAG,KAAK,UAAU,EAAE,CAClB,GAAI,CAAC,MAAAhB,EAAO,MAAAC,EAAO,QAAAL,EAAS,IAAAG,EAAK,SAAAD,CAAQ,EAAIkB,EAC7C,KAAK,IAAI,OAAQ,GAAGhB,KAASC,MAAUH,MAAaC,KAAQH,CAAO,CACrE,CAEG,KAAK,YAAY,EAClB,KAAK,OAAOoB,EAAM+C,GAAU,KAAK,KAAK,KAAKA,CAAM,CAAC,EAElD,KAAK,WAAW,KAAK,IAAM,KAAK,OAAO/C,EAAM+C,GAAU,KAAK,KAAK,KAAKA,CAAM,CAAC,CAAC,CAElF,CAMA,SAAS,CACP,IAAIC,EAAS,KAAK,IAAM,EACxB,OAAGA,IAAW,KAAK,IAAM,KAAK,IAAM,EAAW,KAAK,IAAMA,EAEnD,KAAK,IAAI,SAAS,CAC3B,CAEA,eAAe,CACV,KAAK,qBAAuB,CAAC,KAAK,YAAY,IACjD,KAAK,oBAAsB,KAAK,QAAQ,EACxC,KAAK,KAAK,CAAC,MAAO,UAAW,MAAO,YAAa,QAAS,CAAC,EAAG,IAAK,KAAK,mBAAmB,CAAC,EAC5F,KAAK,sBAAwB,WAAW,IAAM,KAAK,iBAAiB,EAAG,KAAK,mBAAmB,EACjG,CAEA,iBAAiB,CACZ,KAAK,YAAY,GAAK,KAAK,WAAW,OAAS,IAChD,KAAK,WAAW,QAAQrE,GAAYA,EAAS,CAAC,EAC9C,KAAK,WAAa,CAAC,EAEvB,CAEA,cAAcsE,EAAW,CACvB,KAAK,OAAOA,EAAW,KAAMvE,GAAO,CAClC,GAAI,CAAC,MAAAM,EAAO,MAAAC,EAAO,QAAAL,EAAS,IAAAG,EAAK,SAAAD,CAAQ,EAAIJ,EAC1CK,GAAOA,IAAQ,KAAK,sBACrB,KAAK,gBAAgB,EACrB,KAAK,oBAAsB,KAC3B,KAAK,eAAiB,WAAW,IAAM,KAAK,cAAc,EAAG,KAAK,mBAAmB,GAGpF,KAAK,UAAU,GAAG,KAAK,IAAI,UAAW,GAAGH,EAAQ,QAAU,MAAMI,KAASC,KAASF,GAAO,IAAMA,EAAM,KAAO,KAAMH,CAAO,EAE7H,QAAQsE,EAAI,EAAGA,EAAI,KAAK,SAAS,OAAQA,IAAI,CAC3C,IAAMT,EAAU,KAAK,SAASS,GAC3B,CAACT,EAAQ,SAASzD,EAAOC,EAAOL,EAASE,CAAQ,GACpD2D,EAAQ,QAAQxD,EAAOL,EAASG,EAAKD,CAAQ,CAC/C,CAEA,QAAQoE,EAAI,EAAGA,EAAI,KAAK,qBAAqB,QAAQ,OAAQA,IAAI,CAC/D,GAAI,CAAC,CAAEvE,CAAQ,EAAI,KAAK,qBAAqB,QAAQuE,GACrDvE,EAASD,CAAG,CACd,CACF,CAAC,CACH,CAEA,eAAeM,EAAM,CACnB,IAAImE,EAAa,KAAK,SAAS,KAAKT,GAAKA,EAAE,QAAU1D,IAAU0D,EAAE,SAAS,GAAKA,EAAE,UAAU,EAAE,EAC1FS,IACE,KAAK,UAAU,GAAG,KAAK,IAAI,YAAa,4BAA4BnE,IAAQ,EAC/EmE,EAAW,MAAM,EAErB,CACF,ECtoBO,IAAMC,GAAsB,sBACtBC,GAAc,GACdC,GAAgB,CAAC,IAAM,GAAA,EACvBC,GAAkB,IAClBC,GAAoB,CAC/B,oBAAqB,qBAAsB,qBAC3C,sBAAuB,oBAAqB,mBAAoB,mBAAA,EAErDC,EAAgB,qBAChBC,GAAgB,gBAChBC,GAAmB,eACnBC,GAAiB,sBACjBC,EAAU,eACVC,GAAoB,gBACpBC,EAAiB,sBACjBC,GAAuB,4BACvBC,GAAgB,qBAChBC,GAAkB,cAClBC,GAAwB,uBACxBC,GAAwB,wBACxBC,GAAW,gBACXC,GAAa,kBACbC,GAAmB,eACnBC,GAAsB,gBACtBC,GAAyB,mBACzBC,GAAwB,kBACxBC,GAAkB,YAClBC,GAAgB,qBAChBC,GAAW,gBACXC,GAAc,mBACdC,GAAqB,iBACrBC,GAAmB,eACnBC,GAAkB,kBAClBC,GAAmB,CAAC,OAAQ,WAAY,SAAU,QAAS,WAAY,SAAU,MAAO,MAAO,OAAQ,MAAA,EACvGC,GAAmB,CAAC,WAAY,OAAA,EAChCC,GAAoB,oBACpBC,EAAc,mBACdC,EAAoB,IAAID,KACxBE,GAAa,kBACbC,GAAe,oBACfC,GAAe,oBACfC,GAAmB,eACnBC,GAA2B,gCAC3BC,GAAW,OACXC,GAAe,WACfC,GAAe,WACfC,GAAa,SACbC,GAAU,MACVC,EAAc,aACdC,GAAmB,eACnBC,GAAe,wBACfC,GAAiB,4BACjBC,GAAqB,8BACrBC,GAAe,WACfC,GAAiB,EACjBC,GAA+B,IAC/BC,GAAiB,OACjBC,GAAe,IAGfC,GAAmB,mBACnBC,GAAY,YACZC,GAAoB,oBACpBC,GAAW,CACtB,SAAU,IACV,SAAU,GAAA,EAICC,GAAW,IACXC,EAAS,IACTC,EAAa,IACbC,GAAS,IACTC,GAAQ,IACRC,GAAQ,ICvErBC,GAAA,KAAmC,CACjC,YAAYC,EAAOC,EAAWC,EAAW,CACvC,KAAK,WAAaA,EAClB,KAAK,MAAQF,EACb,KAAK,OAAS,EACd,KAAK,UAAYC,EACjB,KAAK,WAAa,KAClB,KAAK,cAAgBC,EAAW,QAAQ,OAAOF,EAAM,MAAO,CAAC,MAAOA,EAAM,SAAA,CAAA,CAAA,CAAA,CAG5E,MAAMG,EAAO,CACX,aAAa,KAAK,UAAA,EAClB,KAAK,cAAc,MAAA,EACnB,KAAK,MAAM,MAAMA,CAAA,CAAA,CAGnB,QAAQ,CACN,KAAK,cAAc,QAAQA,GAAU,KAAK,MAAMA,CAAA,CAAA,EAChD,KAAK,cAAc,KAAA,EAChB,QAAQ,KAAMC,GAAS,KAAK,cAAA,CAAA,EAC5B,QAAQ,QAASD,GAAU,KAAK,MAAMA,CAAA,CAAA,CAAA,CAG3C,QAAQ,CAAE,OAAO,KAAK,QAAU,KAAK,MAAM,KAAK,IAAA,CAEhD,eAAe,CACb,IAAIE,EAAS,IAAI,OAAO,WACpBC,EAAO,KAAK,MAAM,KAAK,MAAM,KAAK,OAAQ,KAAK,UAAY,KAAK,MAAA,EACpED,EAAO,OAAUE,GAAM,CACrB,GAAGA,EAAE,OAAO,QAAU,KACpB,KAAK,QAAUA,EAAE,OAAO,OAAO,WAC/B,KAAK,UAAUA,EAAE,OAAO,MAAA,MAExB,QAAOC,EAAS,eAAiBD,EAAE,OAAO,KAAA,CAAA,EAG9CF,EAAO,kBAAkBC,CAAA,CAAA,CAG3B,UAAUG,EAAM,CACX,CAAC,KAAK,cAAc,SAAA,GACvB,KAAK,cAAc,KAAK,QAASA,CAAA,EAC9B,QAAQ,KAAM,IAAM,CACnB,KAAK,MAAM,SAAU,KAAK,OAAS,KAAK,MAAM,KAAK,KAAQ,GAAA,EACvD,KAAK,OAAA,IACP,KAAK,WAAa,WAAW,IAAM,KAAK,cAAA,EAAiB,KAAK,WAAW,cAAA,GAAmB,CAAA,EAAA,CAAA,CAAA,CAAA,EC3C3FD,EAAW,CAACE,EAAKC,IAAQ,QAAQ,OAAS,QAAQ,MAAMD,EAAKC,CAAA,EAE7DC,GAASC,GAAQ,OAAOA,GAAS,SAErC,SAAAC,IAA6B,CAClC,IAAIC,EAAM,IAAI,IACVC,EAAQ,SAAS,iBAAiB,OAAA,EACtC,QAAQ,EAAI,EAAGC,EAAMD,EAAM,OAAQ,EAAIC,EAAK,IACvCF,EAAI,IAAIC,EAAM,GAAG,EAAA,EAClB,QAAQ,MAAM,0BAA0BA,EAAM,GAAG,gCAAA,EAEjDD,EAAI,IAAIC,EAAM,GAAG,EAAA,CAAA,CAKhB,IAAIE,GAAQ,CAACC,EAAMC,EAAMV,EAAKC,IAAQ,CACxCQ,EAAK,WAAW,eAAA,GACjB,QAAQ,IAAI,GAAGA,EAAK,MAAMC,MAASV,OAAUC,CAAA,CAAA,EAKtCU,GAAWC,GAAQ,OAAOA,GAAQ,WAAaA,EAAM,UAAW,CAAE,OAAOA,CAAA,EAEzEC,GAASZ,GAAiB,KAAK,MAAM,KAAK,UAAUA,CAAA,CAAA,EAEpDa,GAAoB,CAACC,EAAIC,EAASC,IAAa,CACxD,EAAG,CACD,GAAGF,EAAG,QAAQ,IAAIC,IAAA,EAAc,OAAOD,EACvCA,EAAKA,EAAG,eAAiBA,EAAG,UAAA,OACtBA,IAAO,MAAQA,EAAG,WAAa,GAAK,EAAGE,GAAYA,EAAS,WAAWF,CAAA,GAAQA,EAAG,QAAQzD,CAAA,IAClG,OAAO,IAAA,EAGE4D,GAAYjB,GACdA,IAAQ,MAAQ,OAAOA,GAAQ,UAAY,EAAEA,aAAe,OAG1DkB,GAAa,CAACC,EAAMC,IAAS,KAAK,UAAUD,CAAA,IAAU,KAAK,UAAUC,CAAA,EAErEC,GAAWrB,GAAQ,CAC5B,QAAQsB,KAAKtB,EAAM,MAAO,GAC1B,MAAO,EAAA,EAGEuB,EAAQ,CAACT,EAAIU,IAAaV,GAAMU,EAASV,CAAA,EAEzCW,GAAkB,SAAUC,EAASC,EAASC,EAAMrC,EAAW,CACxEmC,EAAQ,QAAQrC,GAAS,CACH,IAAID,GAAcC,EAAOuC,EAAK,OAAO,WAAYrC,CAAA,EACvD,OAAA,CAAA,CAAA,CAAA,ECzDdsC,GAAU,CACZ,cAAc,CAAE,OAAQ,OAAQ,QAAQ,WAAe,WAAA,EAEvD,UAAUC,EAAcC,EAAWC,EAAO,CACxC,OAAOF,EAAa,WAAW,KAAK,SAASC,EAAWC,CAAA,CAAA,CAAA,EAG1D,YAAYF,EAAcC,EAAWC,EAAQC,EAASC,EAAK,CACzD,IAAIC,EAAU,KAAK,SAASL,EAAcC,EAAWC,CAAA,EACjDI,EAAM,KAAK,SAASL,EAAWC,CAAA,EAC/BK,EAASF,IAAY,KAAOF,EAAUC,EAAKC,CAAA,EAC/C,OAAAL,EAAa,QAAQM,EAAK,KAAK,UAAUC,CAAA,CAAA,EAClCA,CAAA,EAGT,SAASP,EAAcC,EAAWC,EAAO,CACvC,OAAO,KAAK,MAAMF,EAAa,QAAQ,KAAK,SAASC,EAAWC,CAAA,CAAA,CAAA,CAAA,EAGlE,mBAAmBR,EAAS,CACvB,CAAC,KAAK,aAAA,GACT,QAAQ,aAAaA,EAAS,QAAQ,OAAS,CAAA,CAAA,EAAK,GAAI,OAAO,SAAS,IAAA,CAAA,EAG1E,UAAUf,EAAM6B,EAAMC,EAAG,CACvB,GAAG,KAAK,aAAA,GACN,GAAGA,IAAO,OAAO,SAAS,KAAK,CAC7B,GAAGD,EAAK,MAAQ,YAAcA,EAAK,OAAO,CAExC,IAAIE,EAAe,QAAQ,OAAS,CAAA,EACpCA,EAAa,OAASF,EAAK,OAC3B,QAAQ,aAAaE,EAAc,GAAI,OAAO,SAAS,IAAA,CAAA,CAGzD,OAAOF,EAAK,OACZ,QAAQ7B,EAAO,SAAS6B,EAAM,GAAIC,GAAM,IAAA,EACxC,IAAIE,EAAS,KAAK,gBAAgB,OAAO,SAAS,IAAA,EAE/CA,EACDA,EAAO,eAAA,EACCH,EAAK,OAAS,YACtB,OAAO,OAAO,EAAG,CAAA,CAAA,OAIrB,KAAK,SAASC,CAAA,CAAA,EAIlB,UAAUG,EAAMC,EAAM,CACpB,SAAS,OAAS,GAAGD,KAAQC,GAAA,EAG/B,UAAUD,EAAK,CACb,OAAO,SAAS,OAAO,QAAQ,IAAI,OAAO,iBAAkBA,wBAAA,EAAiC,IAAA,CAAA,EAG/F,SAASE,EAAOC,EAAM,CACjBA,GAAQhB,GAAQ,UAAU,oBAAqBgB,EAAQ,yBAAA,EAC1D,OAAO,SAAWD,CAAA,EAGpB,SAASb,EAAWC,EAAO,CAAE,MAAO,GAAGD,KAAaC,GAAA,EAEpD,gBAAgBc,EAAU,CACxB,IAAIC,EAAOD,EAAU,SAAA,EAAW,UAAU,CAAA,EAC1C,GAAGC,IAAS,GACZ,OAAO,SAAS,eAAeA,CAAA,GAAS,SAAS,cAAc,WAAWA,KAAA,CAAA,CAAA,EAIvEC,EAAQnB,GC7CXoB,EAAM,CACR,KAAKC,EAAG,CAAE,OAAO,SAAS,eAAeA,CAAA,GAAOrD,EAAS,mBAAmBqD,GAAA,CAAA,EAE5E,YAAYpC,EAAIqC,EAAU,CACxBrC,EAAG,UAAU,OAAOqC,CAAA,EACjBrC,EAAG,UAAU,SAAW,GAAIA,EAAG,gBAAgB,OAAA,CAAA,EAGpD,IAAIsC,EAAMC,EAAO7B,EAAS,CACxB,GAAG,CAAC4B,EAAO,MAAO,CAAA,EAClB,IAAIE,EAAQ,MAAM,KAAKF,EAAK,iBAAiBC,CAAA,CAAA,EAC7C,OAAO7B,EAAW8B,EAAM,QAAQ9B,CAAA,EAAY8B,CAAA,EAG9C,gBAAgBC,EAAK,CACnB,IAAIC,EAAW,SAAS,cAAc,UAAA,EACtC,OAAAA,EAAS,UAAYD,EACdC,EAAS,QAAQ,iBAAA,EAG1B,cAAc1C,EAAG,CAAE,OAAOA,EAAG,OAAS,QAAUA,EAAG,aAAahF,CAAA,IAAoB,IAAA,EAEpF,iBAAiBsH,EAAK,CAAE,OAAO,KAAK,IAAIA,EAAM,sBAAsBtH,IAAA,CAAA,EAEpE,sBAAsBsH,EAAMlD,EAAI,CAC9B,OAAO,KAAK,yBAAyB,KAAK,IAAIkD,EAAM,IAAI5H,MAAkB0E,KAAA,EAAUkD,CAAA,CAAA,EAGtF,eAAeA,EAAK,CAClB,MAAO,GAAAA,EAAK,IAAMH,EAAI,QAAQG,EAAM,WAAA,EAAsB,EAG5D,sBAAsBtC,EAAG,CACvBA,EAAG,aAAa1D,EAAa,EAAA,EAC7B,KAAK,WAAW0D,EAAI,YAAa,EAAA,CAAA,EAGnC,0BAA0ByC,EAAME,EAAS,CACvC,IAAID,EAAW,SAAS,cAAc,UAAA,EACtC,OAAAA,EAAS,UAAYD,EACd,KAAK,gBAAgBC,EAAS,QAASC,CAAA,CAAA,EAGhD,UAAU3C,EAAI4C,EAAU,CACtB,OAAQ5C,EAAG,aAAa4C,CAAA,GAAc5C,EAAG,aAAa,iBAAA,KAAwB,QAAA,EAGhF,YAAYA,EAAI4C,EAAWC,EAAY,CACrC,OAAO7C,EAAG,cAAgB6C,EAAY,QAAQ7C,EAAG,aAAa4C,CAAA,CAAA,GAAe,CAAA,EAG/E,gBAAgB5C,EAAI2C,EAAS,CAC3B,OAAO,KAAK,IAAI3C,EAAI,GAAGzD,KAAqBV,OAAkB8G,KAAA,CAAA,EAGhE,eAAeL,EAAMQ,EAAK,CACxB,IAAI3B,EAAU,IAAI,IAAI2B,CAAA,EACtB,OAAOA,EAAK,OAAO,CAACC,EAAK3D,IAAQ,CAC/B,IAAI4D,EAAW,IAAItI,MAAkB0E,QAAU1E,KAE/C,YAAK,yBAAyB,KAAK,IAAI4H,EAAMU,CAAA,EAAWV,CAAA,EACrD,IAAItC,GAAM,SAASA,EAAG,aAAatF,CAAA,CAAA,CAAA,EACnC,QAAQuI,GAAYF,EAAI,OAAOE,CAAA,CAAA,EAE3BF,CAAA,EACN5B,CAAA,CAAA,EAGL,yBAAyB+B,EAAOC,EAAO,CACrC,OAAGA,EAAO,cAAc5G,CAAA,EACf2G,EAAM,OAAOlD,GAAM,KAAK,mBAAmBA,EAAImD,CAAA,CAAA,EAE/CD,CAAA,EAIX,mBAAmBZ,EAAMa,EAAO,CAC9B,KAAMb,EAAOA,EAAK,YAAW,CAC3B,GAAGA,EAAK,WAAWa,CAAA,EAAU,MAAO,GACpC,GAAGb,EAAK,aAAahG,CAAA,IAAiB,KAAO,MAAO,EAAA,CAAA,EAIxD,QAAQ0D,EAAIsB,EAAI,CAAE,OAAOtB,EAAG9C,IAAgB8C,EAAG9C,GAAaoE,EAAA,EAE5D,cAActB,EAAIsB,EAAI,CAAEtB,EAAG9C,IAAgB,OAAQ8C,EAAG9C,GAAaoE,EAAA,EAEnE,WAAWtB,EAAIsB,EAAKO,EAAM,CACpB7B,EAAG9C,KAAe8C,EAAG9C,GAAe,CAAA,GACxC8C,EAAG9C,GAAaoE,GAAOO,CAAA,EAGzB,aAAauB,EAAQC,EAAO,CACvBA,EAAOnG,KACRkG,EAAOlG,GAAe4C,GAAMuD,EAAOnG,EAAA,EAAA,EAIvC,SAASoG,EAAI,CACX,IAAIC,EAAU,SAAS,cAAc,OAAA,EACjC,CAAC,OAAAC,EAAQ,OAAAC,CAAA,EAAUF,EAAQ,QAC/B,SAAS,MAAQ,GAAGC,GAAU,KAAKF,IAAMG,GAAU,IAAA,EAGrD,SAASzD,EAAI0D,EAAOC,EAAaC,EAAiBC,EAAaC,EAAiBpD,EAAS,CACvF,IAAIqD,EAAW/D,EAAG,aAAa2D,CAAA,EAC3BK,EAAWhE,EAAG,aAAa6D,CAAA,EAC5BE,IAAa,KAAKA,EAAWH,GAC7BI,IAAa,KAAKA,EAAWF,GAChC,IAAIjC,EAAQkC,GAAYC,EACxB,OAAOnC,QACA,KAAM,OAAOnB,EAAA,MAEb,OACA,KAAK,KAAKV,EAAI,eAAA,GACfA,EAAG,iBAAiB,OAAQ,IAAMU,EAAA,CAAA,EAEpC,eAGA,IAAIuD,EAAU,SAASpC,CAAA,EACnBqC,EAAU,IAAMF,EAAW,KAAK,cAAchE,EAAInC,EAAA,EAAa6C,EAAA,EAC/DyD,EAAe,KAAK,SAASnE,EAAIpC,GAAkBsG,CAAA,EACvD,GAAG,MAAMD,CAAA,EAAW,OAAOlF,EAAS,oCAAoC8C,GAAA,EACxE,GAAGmC,EAAS,CACV,IAAII,EAAa,GACjB,GAAGV,EAAM,OAAS,UAAU,CAC1B,IAAIW,EAAU,KAAK,QAAQrE,EAAIlC,EAAA,EAC/B,KAAK,WAAWkC,EAAIlC,GAAmB4F,EAAM,GAAA,EAC7CU,EAAaC,IAAYX,EAAM,GAAA,CAGjC,GAAG,CAACU,GAAc,KAAK,QAAQpE,EAAInC,EAAA,EACjC,MAAO,GAEP6C,EAAA,EACA,KAAK,WAAWV,EAAInC,GAAW,EAAA,EAC/B,WAAW,IAAM,KAAK,aAAamC,EAAIpC,EAAA,EAAmBqG,CAAA,CAAA,MAG5D,WAAW,IAAM,KAAK,aAAajE,EAAIpC,GAAkBuG,CAAA,EAAeF,CAAA,EAI1E,IAAIK,EAAOtE,EAAG,KACXsE,GAAQ,KAAK,KAAKA,EAAM,eAAA,GACzBA,EAAK,iBAAiB,SAAU,IAAM,CACpC,MAAM,KAAM,IAAI,SAASA,CAAA,EAAO,QAAA,EAAW,CAAC,CAAC1C,CAAA,IAAU,CACrD,IAAI2C,EAAQD,EAAK,cAAc,UAAU1C,KAAA,EACzC,KAAK,SAAS2C,EAAO3G,EAAA,EACrB,KAAK,cAAc2G,EAAO1G,EAAA,CAAA,CAAA,CAAA,CAAA,EAI7B,KAAK,KAAKmC,EAAI,eAAA,GACfA,EAAG,iBAAiB,OAAQ,IAAM,KAAK,aAAaA,EAAIpC,EAAA,CAAA,EAAA,EAKhE,aAAaoC,EAAIsB,EAAK6C,EAAa,CACjC,GAAI,CAACK,EAAON,CAAA,EAAW,KAAK,QAAQlE,EAAIsB,CAAA,EACpC6C,IAAeA,EAAeK,GAC/BL,IAAiBK,IAClB,KAAK,SAASxE,EAAIsB,CAAA,EAClB4C,EAAA,EAAA,EAIJ,KAAKlE,EAAIsB,EAAI,CACX,OAAG,KAAK,QAAQtB,EAAIsB,CAAA,IAAS,GAAc,IAC3C,KAAK,WAAWtB,EAAIsB,EAAK,EAAA,EAClB,GAAA,EAGT,SAAStB,EAAIsB,EAAK4C,EAAU,UAAW,CAAA,EAAI,CACzC,GAAI,CAACC,CAAA,EAAgB,KAAK,QAAQnE,EAAIsB,CAAA,GAAQ,CAAC,EAAG4C,CAAA,EAClD,OAAAC,IACA,KAAK,WAAWnE,EAAIsB,EAAK,CAAC6C,EAAcD,CAAA,CAAA,EACjCC,CAAA,EAGT,aAAaM,EAAWzE,EAAI0E,EAAe,CACzC,IAAIC,EAAQ3E,EAAG,cAAgBA,EAAG,aAAa0E,CAAA,EAE3CH,EAAQI,GAASF,EAAU,cAAc,QAAQE,eAAmBA,KAAA,EACrE,CAACJ,GAEC,KAAK,QAAQA,EAAOrI,EAAA,GAAoB,KAAK,QAAQqI,EAAM,KAAMlI,EAAA,GACpE2D,EAAG,UAAU,IAAIrE,EAAA,CAAA,EAIrB,UAAUiJ,EAASF,EAAe,EAC7BE,EAAQ,IAAMA,EAAQ,OACvB,KAAK,IAAIA,EAAQ,KAAM,IAAIF,MAAmBE,EAAQ,UAAUF,MAAmBE,EAAQ,SAAW5E,GAAO,CAC3G,KAAK,YAAYA,EAAIrE,EAAA,CAAA,CAAA,CAAA,EAK3B,WAAW2G,EAAK,CACd,OAAOA,EAAK,cAAgBA,EAAK,aAAazG,EAAA,CAAA,EAGhD,cAAcuH,EAAQyB,EAAaC,EAAS,CAAA,EAAG,CAC7C,IAAIpB,EAAQ,IAAI,YAAYmB,EAAa,CAAC,QAAS,GAAM,WAAY,GAAM,OAAAC,CAAA,CAAA,EAC3E1B,EAAO,cAAcM,CAAA,CAAA,EAGvB,UAAUpB,EAAMG,EAAK,CACnB,GAAG,OAAQA,GAAU,YACnB,OAAOH,EAAK,UAAU,EAAA,EACjB,CACL,IAAIyC,EAASzC,EAAK,UAAU,EAAA,EAC5B,OAAAyC,EAAO,UAAYtC,EACZsC,CAAA,CAAA,EAIX,WAAW3B,EAAQC,EAAQ2B,EAAO,CAAA,EAAG,CACnC,IAAIC,EAAUD,EAAK,SAAW,CAAA,EAC1BE,EAAYF,EAAK,UACjBG,EAAc9B,EAAO,WACzB,QAAQ+B,EAAID,EAAY,OAAS,EAAGC,GAAK,EAAGA,IAAI,CAC9C,IAAIxD,EAAOuD,EAAYC,GAAG,KACvBH,EAAQ,QAAQrD,CAAA,EAAQ,GAAIwB,EAAO,aAAaxB,EAAMyB,EAAO,aAAazB,CAAA,CAAA,CAAA,CAG/E,IAAIyD,EAAcjC,EAAO,WACzB,QAAQgC,EAAIC,EAAY,OAAS,EAAGD,GAAK,EAAGA,IAAI,CAC9C,IAAIxD,EAAOyD,EAAYD,GAAG,KACvBF,EACEtD,EAAK,WAAW,OAAA,GAAY,CAACyB,EAAO,aAAazB,CAAA,GAAQwB,EAAO,gBAAgBxB,CAAA,EAE/EyB,EAAO,aAAazB,CAAA,GAAQwB,EAAO,gBAAgBxB,CAAA,CAAA,CAAA,EAK7D,kBAAkBwB,EAAQC,EAAO,CAE1BD,aAAkB,mBAAqBjB,EAAI,WAAWiB,EAAQC,EAAQ,CAAC,OAAQ,CAAC,OAAA,CAAA,CAAA,EAClFA,EAAO,SACRD,EAAO,aAAa,WAAY,EAAA,EAEhCA,EAAO,gBAAgB,UAAA,CAAA,EAI3B,kBAAkBpD,EAAG,CACnB,OAAOA,EAAG,oBAAsBA,EAAG,OAAS,QAAUA,EAAG,OAAS,WAAA,EAGpE,aAAasF,EAASC,EAAgBC,EAAa,CACjD,GAAG,CAACrD,EAAI,eAAemD,CAAA,EAAW,OAClC,IAAIG,EAAaH,EAAQ,QAAQ,QAAA,EAC9BA,EAAQ,UAAWA,EAAQ,KAAA,EAC1BG,GAAaH,EAAQ,MAAA,EACtB,KAAK,kBAAkBA,CAAA,GACxBA,EAAQ,kBAAkBC,EAAgBC,CAAA,CAAA,EAI9C,YAAYxF,EAAG,CAAE,MAAO,+BAA+B,KAAKA,EAAG,OAAA,GAAYA,EAAG,OAAS,QAAA,EAEvF,iBAAiBA,EAAG,CACfA,aAAc,kBAAoB5D,GAAiB,QAAQ4D,EAAG,KAAK,kBAAA,CAAA,GAAwB,IAC5FA,EAAG,QAAUA,EAAG,aAAa,SAAA,IAAe,KAAA,EAIhD,iBAAiBA,EAAG,CAClB,GAAGA,aAAc,kBAAkB,CACjC,IAAI0F,EAAe1F,EAAG,QAAQ,KAAKA,EAAG,aAAA,EACnC0F,GAAgBA,EAAa,aAAa,UAAA,IAAgB,MAC3DA,EAAa,aAAa,WAAY,EAAA,CAAA,CAAA,EAK5C,eAAe1F,EAAG,CAAE,OAAO7D,GAAiB,QAAQ6D,EAAG,IAAA,GAAS,CAAA,EAEhE,yBAAyBA,EAAI2F,EAAmB,CAC9C,OAAO3F,EAAG,cAAgBA,EAAG,aAAa2F,CAAA,IAAwB,IAAA,EAGpE,eAAeC,EAAQC,EAAMC,EAAY,CACvC,IAAIC,EAAMH,EAAO,aAAa9K,CAAA,EAC9B,OAAGiL,IAAQ,KAAc,GAEtB5D,EAAI,YAAYyD,CAAA,GAAWA,EAAO,aAAaE,CAAA,IAAiB,MAC9D3D,EAAI,cAAcyD,CAAA,GAAUzD,EAAI,WAAWyD,EAAQC,EAAM,CAAC,UAAW,EAAA,CAAA,EACxE1D,EAAI,WAAWyD,EAAQ9K,EAAS+K,CAAA,EACzB,KAEPpL,GAAkB,QAAQ4H,GAAa,CACrCuD,EAAO,UAAU,SAASvD,CAAA,GAAcwD,EAAK,UAAU,IAAIxD,CAAA,CAAA,CAAA,EAE7DwD,EAAK,aAAa/K,EAASiL,CAAA,EACpB,GAAA,EAIX,gBAAgBtB,EAAW7B,EAAU,CACnC,GAAGT,EAAI,YAAYsC,EAAW7B,EAAW,CAAC,SAAU,SAAA,CAAA,EAAY,CAC9D,IAAIoD,EAAW,CAAA,EACfvB,EAAU,WAAW,QAAQwB,GAAa,CACpCA,EAAU,KAEUA,EAAU,WAAa,KAAK,WAAaA,EAAU,UAAU,KAAA,IAAW,IAE5FlH,EAAS;;2BACqBkH,EAAU,WAAaA,EAAU,WAAW,KAAA;;CAAA,EAE5ED,EAAS,KAAKC,CAAA,EAAA,CAAA,EAGlBD,EAAS,QAAQC,GAAaA,EAAU,OAAA,CAAA,CAAA,CAAA,EAI5C,qBAAqBxB,EAAWyB,EAASC,EAAM,CAC7C,IAAIC,EAAgB,IAAI,IAAI,CAAC,KAAM9J,EAAaE,GAAYV,EAAA,CAAA,EAC5D,GAAG2I,EAAU,QAAQ,YAAA,IAAkByB,EAAQ,YAAA,EAC7C,aAAM,KAAKzB,EAAU,UAAA,EAClB,OAAO4B,GAAQ,CAACD,EAAc,IAAIC,EAAK,KAAK,YAAA,CAAA,CAAA,EAC5C,QAAQA,GAAQ5B,EAAU,gBAAgB4B,EAAK,IAAA,CAAA,EAElD,OAAO,KAAKF,CAAA,EACT,OAAOvE,GAAQ,CAACwE,EAAc,IAAIxE,EAAK,YAAA,CAAA,CAAA,EACvC,QAAQyE,GAAQ5B,EAAU,aAAa4B,EAAMF,EAAME,EAAA,CAAA,EAE/C5B,EAEF,CACL,IAAI6B,EAAe,SAAS,cAAcJ,CAAA,EAC1C,cAAO,KAAKC,CAAA,EAAO,QAAQE,GAAQC,EAAa,aAAaD,EAAMF,EAAME,EAAA,CAAA,EACzED,EAAc,QAAQC,GAAQC,EAAa,aAAaD,EAAM5B,EAAU,aAAa4B,CAAA,CAAA,CAAA,EACrFC,EAAa,UAAY7B,EAAU,UACnCA,EAAU,YAAY6B,CAAA,EACfA,CAAA,CAAA,CAAA,EAKNC,EAAQpE,ECvWfqE,GAAA,KAAiC,CAAA,OACxB,SAASC,EAAQC,EAAK,CAC3B,IAAIC,EAAQD,EAAK,UAAY,OAEzBE,EADaH,EAAO,aAAarL,EAAA,EAAuB,MAAM,GAAA,EACxC,QAAQyL,EAAa,WAAWH,CAAA,CAAA,GAAU,EACpE,OAAOA,EAAK,KAAO,IAAMC,GAASC,EAAA,CAAA,OAG7B,cAAcH,EAAQC,EAAK,CAGhC,OAFsBD,EAAO,aAAaxL,EAAA,EAAsB,MAAM,GAAA,EAClC,QAAQ4L,EAAa,WAAWH,CAAA,CAAA,GAAU,GACtD,KAAK,SAASD,EAAQC,CAAA,CAAA,CAGhD,YAAYD,EAAQC,EAAMhH,EAAK,CAC7B,KAAK,IAAMmH,EAAa,WAAWH,CAAA,EACnC,KAAK,OAASD,EACd,KAAK,KAAOC,EACZ,KAAK,KAAOhH,EACZ,KAAK,KAAO,KACZ,KAAK,aAAe,GACpB,KAAK,QAAU,GACf,KAAK,UAAY,EACjB,KAAK,kBAAoB,GACzB,KAAK,QAAU,UAAW,CAAA,EAC1B,KAAK,aAAe,KAAK,YAAY,KAAK,IAAA,EAC1C,KAAK,OAAO,iBAAiBrE,GAAuB,KAAK,YAAA,CAAA,CAG3D,UAAU,CAAE,OAAO,KAAK,IAAA,CAExB,SAASyL,EAAS,CAChB,KAAK,UAAY,KAAK,MAAMA,CAAA,EACzB,KAAK,UAAY,KAAK,oBACpB,KAAK,WAAa,KACnB,KAAK,UAAY,IACjB,KAAK,kBAAoB,IACzB,KAAK,QAAU,GACf,KAAK,KAAK,iBAAiB,KAAK,OAAQ,KAAK,IAAK,IAAK,IAAM,CAC3DD,EAAa,YAAY,KAAK,OAAQ,KAAK,IAAA,EAC3C,KAAK,QAAA,CAAA,CAAA,IAGP,KAAK,kBAAoB,KAAK,UAC9B,KAAK,KAAK,iBAAiB,KAAK,OAAQ,KAAK,IAAK,KAAK,SAAA,GAAA,CAK7D,QAAQ,CACN,KAAK,aAAe,GACpB,KAAK,QAAU,GACf,KAAK,QAAA,CAAA,CAGP,QAAQ,CAAE,OAAO,KAAK,OAAA,CAEtB,MAAMnI,EAAS,SAAS,CACtB,KAAK,KAAK,iBAAiB,KAAK,OAAQ,KAAK,IAAK,CAAC,MAAOA,CAAA,CAAA,EAC1DmI,EAAa,WAAW,KAAK,MAAA,CAAA,CAK/B,OAAOnG,EAAS,CACd,KAAK,QAAU,IAAM,CACnB,KAAK,OAAO,oBAAoBrF,GAAuB,KAAK,YAAA,EAC5DqF,EAAA,CAAA,CAAA,CAIJ,aAAa,CACM,KAAK,OAAO,aAAatF,EAAA,EAAuB,MAAM,GAAA,EACzD,QAAQ,KAAK,GAAA,IAAS,IAAK,KAAK,OAAA,CAAA,CAGhD,oBAAoB,CAClB,MAAO,CACL,cAAe,KAAK,KAAK,aACzB,KAAM,KAAK,KAAK,KAChB,KAAM,KAAK,KAAK,KAChB,KAAM,KAAK,KAAK,KAChB,IAAK,KAAK,GAAA,CAAA,CAId,SAAS2L,EAAU,CACjB,GAAG,KAAK,KAAK,SAAS,CACpB,IAAIrG,EAAWqG,EAAU,KAAK,KAAK,WAAahI,EAAS,8BAA8B,KAAK,KAAK,UAAA,EACjG,MAAO,CAAC,KAAM,KAAK,KAAK,SAAU,SAAA2B,CAAA,CAAA,KAElC,OAAO,CAAC,KAAM,UAAW,SAAUC,EAAA,CAAA,CAIvC,cAAcG,EAAK,CACjB,KAAK,KAAOA,EAAK,QAAQ,KAAK,KAC1B,KAAK,MAAO/B,EAAS,kDAAkD,KAAK,MAAO,CAAC,MAAO,KAAK,OAAQ,SAAU+B,CAAA,CAAA,CAAA,CAAA,EClGtHkG,GAAsB,EAE1BH,EAAA,KAAkC,CAAA,OACzB,WAAWH,EAAK,CACrB,IAAIX,EAAMW,EAAK,QACf,OAAGX,IAAQ,OACFA,GAEPW,EAAK,SAAWM,MAAuB,SAAA,EAChCN,EAAK,QAAA,CAAA,OAIT,gBAAgB9B,EAASmB,EAAKrF,EAAS,CAC5C,IAAIgG,EAAO,KAAK,YAAY9B,CAAA,EAAS,KAAKqC,GAAQ,KAAK,WAAWA,CAAA,IAAUlB,CAAA,EAC5ErF,EAAS,IAAI,gBAAgBgG,CAAA,CAAA,CAAA,CAAA,OAGxB,qBAAqBQ,EAAO,CACjC,IAAIC,EAAS,EACb,OAAAZ,EAAI,iBAAiBW,CAAA,EAAQ,QAAQ3C,GAAS,CACzCA,EAAM,aAAatJ,EAAA,IAA0BsJ,EAAM,aAAarJ,EAAA,GACjEiM,GAAA,CAAA,EAGGA,EAAS,CAAA,CAAA,OAGX,iBAAiBvC,EAAQ,CAC9B,IAAIwC,EAAQ,KAAK,YAAYxC,CAAA,EACzByC,EAAW,CAAA,EACf,OAAAD,EAAM,QAAQV,GAAQ,CACpB,IAAInI,EAAQ,CAAC,KAAMqG,EAAQ,IAAA,EACvB0C,EAAY1C,EAAQ,aAAa5J,CAAA,EACrCqM,EAASC,GAAaD,EAASC,IAAc,CAAA,EAC7C/I,EAAM,IAAM,KAAK,WAAWmI,CAAA,EAC5BnI,EAAM,KAAOmI,EAAK,MAAQnI,EAAM,IAChCA,EAAM,KAAOmI,EAAK,KAClBnI,EAAM,KAAOmI,EAAK,KAClBW,EAASC,GAAW,KAAK/I,CAAA,CAAA,CAAA,EAEpB8I,CAAA,CAAA,OAGF,WAAWzC,EAAQ,CACxBA,EAAQ,MAAQ,KAChBA,EAAQ,gBAAgB5J,CAAA,EACxBuL,EAAI,WAAW3B,EAAS,QAAS,CAAA,CAAA,CAAA,CAAA,OAG5B,YAAYA,EAAS8B,EAAK,CAC/BH,EAAI,WAAW3B,EAAS,QAAS2B,EAAI,QAAQ3B,EAAS,OAAA,EAAS,OAAO2C,GAAK,CAAC,OAAO,GAAGA,EAAGb,CAAA,CAAA,CAAA,CAAA,CAAA,OAGpF,WAAW9B,EAASwC,EAAM,CAC/B,GAAGxC,EAAQ,aAAa,UAAA,IAAgB,KAAK,CAC3C,IAAI4C,EAAWJ,EAAM,OAAOV,GAAQ,CAAC,KAAK,YAAY9B,CAAA,EAAS,KAAK2C,GAAK,OAAO,GAAGA,EAAGb,CAAA,CAAA,CAAA,EACtFH,EAAI,WAAW3B,EAAS,QAAS,KAAK,YAAYA,CAAA,EAAS,OAAO4C,CAAA,CAAA,EAClE5C,EAAQ,MAAQ,IAAA,MAEhB2B,EAAI,WAAW3B,EAAS,QAASwC,CAAA,CAAA,CAAA,OAI9B,iBAAiBF,EAAO,CAC7B,IAAIO,EAAalB,EAAI,iBAAiBW,CAAA,EACtC,OAAO,MAAM,KAAKO,CAAA,EAAY,OAAOzH,GAAMA,EAAG,OAAS,KAAK,YAAYA,CAAA,EAAI,OAAS,CAAA,CAAA,CAAA,OAGhF,YAAYuE,EAAM,CACvB,OAAQgC,EAAI,QAAQhC,EAAO,OAAA,GAAY,CAAA,GAAI,OAAOgD,GAAKf,GAAY,SAASjC,EAAOgD,CAAA,CAAA,CAAA,CAAA,OAG9E,wBAAwBL,EAAO,CACpC,IAAIO,EAAalB,EAAI,iBAAiBW,CAAA,EACtC,OAAO,MAAM,KAAKO,CAAA,EAAY,OAAOlD,GAAS,KAAK,uBAAuBA,CAAA,EAAO,OAAS,CAAA,CAAA,CAAA,OAGrF,uBAAuBA,EAAM,CAClC,OAAO,KAAK,YAAYA,CAAA,EAAO,OAAOgD,GAAK,CAACf,GAAY,cAAcjC,EAAOgD,CAAA,CAAA,CAAA,CAG/E,YAAY3C,EAASlF,EAAMgI,EAAW,CACpC,KAAK,KAAOhI,EACZ,KAAK,WAAagI,EAClB,KAAK,SACH,MAAM,KAAKb,EAAa,uBAAuBjC,CAAA,GAAY,CAAA,CAAA,EACxD,IAAI8B,GAAQ,IAAIF,GAAY5B,EAAS8B,EAAMhH,CAAA,CAAA,EAEhD,KAAK,qBAAuB,KAAK,SAAS,MAAA,CAG5C,SAAS,CAAE,OAAO,KAAK,QAAA,CAEvB,kBAAkBoB,EAAMD,EAASpC,EAAW,CAC1C,KAAK,SACH,KAAK,SAAS,IAAIF,IAChBA,EAAM,cAAcuC,CAAA,EACpBvC,EAAM,OAAO,IAAM,CACjB,KAAK,uBACF,KAAK,uBAAyB,GAAI,KAAK,WAAA,CAAA,CAAA,EAErCA,EAAA,EAGX,IAAIoJ,EAAiB,KAAK,SAAS,OAAO,CAAC5E,EAAKxE,IAAU,CACxD,GAAI,CAAC,KAAAqD,EAAM,SAAAlB,CAAA,EAAYnC,EAAM,SAASE,EAAW,SAAA,EACjD,OAAAsE,EAAInB,GAAQmB,EAAInB,IAAS,CAAC,SAAAlB,EAAoB,QAAS,CAAA,CAAA,EACvDqC,EAAInB,GAAM,QAAQ,KAAKrD,CAAA,EAChBwE,CAAA,EACN,CAAA,CAAA,EAEH,QAAQnB,KAAQ+F,EAAe,CAC7B,GAAI,CAAC,SAAAjH,EAAU,QAAAE,CAAA,EAAW+G,EAAe/F,GACzClB,EAASE,EAASC,EAASC,EAAMrC,CAAA,CAAA,CAAA,CAAA,ECrHnCmJ,GAAQ,CACV,eAAgB,CACd,YAAY,CAAE,OAAO,KAAK,GAAG,aAAaxM,EAAA,CAAA,EAE1C,iBAAiB,CAAE,OAAO,KAAK,GAAG,aAAaH,EAAA,CAAA,EAE/C,SAAS,CAAE,KAAK,eAAiB,KAAK,gBAAA,CAAA,EAEtC,SAAS,CACP,IAAI4M,EAAgB,KAAK,gBAAA,EACtB,KAAK,iBAAmBA,IACzB,KAAK,eAAiBA,EACnBA,IAAkB,IACnB,KAAK,OAAO,aAAa,KAAK,GAAG,IAAA,GAIlC,KAAK,WAAA,IAAiB,KAAK,KAAK,GAAG,MAAQ,MAC9C,KAAK,GAAG,cAAc,IAAI,YAAYxM,EAAA,CAAA,CAAA,CAAA,EAI1C,eAAgB,CACd,SAAS,CACP,KAAK,IAAM,KAAK,GAAG,aAAa,oBAAA,EAChC,KAAK,QAAU,SAAS,eAAe,KAAK,GAAG,aAAaL,CAAA,CAAA,EAC5D6L,EAAa,gBAAgB,KAAK,QAAS,KAAK,IAAKiB,GAAO,CAC1D,KAAK,IAAMA,EACX,KAAK,GAAG,IAAMA,CAAA,CAAA,CAAA,EAGlB,WAAW,CACT,IAAI,gBAAgB,KAAK,GAAA,CAAA,CAAA,CAAA,EAKxBC,GAAQH,GCxCfI,GAAA,KAA0C,CACxC,YAAYC,EAAiBC,EAAgBC,EAAW,CACtD,IAAIC,EAAY,IAAI,IAChBC,EAAW,IAAI,IAAI,CAAC,GAAGH,EAAe,QAAA,EAAU,IAAII,GAASA,EAAM,EAAA,CAAA,EAEnEC,EAAmB,CAAA,EAEvB,MAAM,KAAKN,EAAgB,QAAA,EAAU,QAAQK,GAAS,CACpD,GAAGA,EAAM,KACPF,EAAU,IAAIE,EAAM,EAAA,EACjBD,EAAS,IAAIC,EAAM,EAAA,GAAI,CACxB,IAAIE,EAAoBF,EAAM,wBAA0BA,EAAM,uBAAuB,GACrFC,EAAiB,KAAK,CAAC,UAAWD,EAAM,GAAI,kBAAAE,CAAA,CAAA,CAAA,CAAA,CAAA,EAKlD,KAAK,YAAcN,EAAe,GAClC,KAAK,WAAaC,EAClB,KAAK,iBAAmBI,EACxB,KAAK,gBAAkB,CAAC,GAAGF,CAAA,EAAU,OAAOjG,GAAM,CAACgG,EAAU,IAAIhG,CAAA,CAAA,CAAA,CASnE,SAAS,CACP,IAAIqC,EAAY8B,EAAI,KAAK,KAAK,WAAA,EAC9B,KAAK,iBAAiB,QAAQkC,GAAmB,CAC5CA,EAAgB,kBACjBhI,EAAM,SAAS,eAAegI,EAAgB,iBAAA,EAAoBC,GAAgB,CAChFjI,EAAM,SAAS,eAAegI,EAAgB,SAAA,EAAYE,GAAQ,CAC3CA,EAAK,wBAA0BA,EAAK,uBAAuB,IAAMD,EAAa,IAEjGA,EAAa,sBAAsB,WAAYC,CAAA,CAAA,CAAA,CAAA,CAAA,EAMrDlI,EAAM,SAAS,eAAegI,EAAgB,SAAA,EAAYE,GAAQ,CAC3CA,EAAK,wBAA0B,MAElDlE,EAAU,sBAAsB,aAAckE,CAAA,CAAA,CAAA,CAAA,CAAA,EAMnD,KAAK,YAAc,WACpB,KAAK,gBAAgB,QAAA,EAAU,QAAQC,GAAU,CAC/CnI,EAAM,SAAS,eAAemI,CAAA,EAASD,GAAQlE,EAAU,sBAAsB,aAAckE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EC5DjGE,GAAyB,GAE7B,SAAAC,GAAoBC,EAAUC,EAAQ,CAClC,IAAIC,EAAcD,EAAO,WACrB3C,EACA6C,EACAC,EACAC,EACAC,EAGJ,GAAI,EAAAL,EAAO,WAAaH,IAA0BE,EAAS,WAAaF,IAKxE,SAASzD,EAAI6D,EAAY,OAAS,EAAG7D,GAAK,EAAGA,IACzCiB,EAAO4C,EAAY7D,GACnB8D,EAAW7C,EAAK,KAChB8C,EAAmB9C,EAAK,aACxB+C,EAAY/C,EAAK,MAEb8C,GACAD,EAAW7C,EAAK,WAAa6C,EAC7BG,EAAYN,EAAS,eAAeI,EAAkBD,CAAA,EAElDG,IAAcD,IACV/C,EAAK,SAAW,UAChB6C,EAAW7C,EAAK,MAEpB0C,EAAS,eAAeI,EAAkBD,EAAUE,CAAA,KAGxDC,EAAYN,EAAS,aAAaG,CAAA,EAE9BG,IAAcD,GACdL,EAAS,aAAaG,EAAUE,CAAA,GAS5C,QAFIE,EAAgBP,EAAS,WAEpBQ,EAAID,EAAc,OAAS,EAAGC,GAAK,EAAGA,IAC3ClD,EAAOiD,EAAcC,GACrBL,EAAW7C,EAAK,KAChB8C,EAAmB9C,EAAK,aAEpB8C,GACAD,EAAW7C,EAAK,WAAa6C,EAExBF,EAAO,eAAeG,EAAkBD,CAAA,GACzCH,EAAS,kBAAkBI,EAAkBD,CAAA,GAG5CF,EAAO,aAAaE,CAAA,GACrBH,EAAS,gBAAgBG,CAAA,EAAA,CAMzC,IAAIM,GACAC,GAAW,+BAEXC,EAAM,OAAO,UAAa,YAAc,OAAY,SACpDC,GAAuB,CAAC,CAACD,GAAO,YAAaA,EAAI,cAAc,UAAA,EAC/DE,GAAoB,CAAC,CAACF,GAAOA,EAAI,aAAe,6BAA8BA,EAAI,YAAA,EAEtF,SAAAG,GAAoCvG,EAAK,CACrC,IAAIZ,EAAWgH,EAAI,cAAc,UAAA,EACjC,OAAAhH,EAAS,UAAYY,EACdZ,EAAS,QAAQ,WAAW,EAAA,CAGvC,SAAAoH,GAAiCxG,EAAK,CAC7BkG,KACDA,GAAQE,EAAI,YAAA,EACZF,GAAM,WAAWE,EAAI,IAAA,GAGzB,IAAIK,EAAWP,GAAM,yBAAyBlG,CAAA,EAC9C,OAAOyG,EAAS,WAAW,EAAA,CAG/B,SAAAC,GAAgC1G,EAAK,CACjC,IAAIyG,EAAWL,EAAI,cAAc,MAAA,EACjC,OAAAK,EAAS,UAAYzG,EACdyG,EAAS,WAAW,EAAA,CAW/B,SAAAE,GAAmB3G,EAAK,CAEpB,OADAA,EAAMA,EAAI,KAAA,EACNqG,GAIKE,GAA2BvG,CAAA,EACzBsG,GACFE,GAAwBxG,CAAA,EAG1B0G,GAAuB1G,CAAA,CAAA,CAalC,SAAA4G,GAA0BtE,EAAQC,EAAM,CACpC,IAAIsE,EAAevE,EAAO,SACtBwE,EAAavE,EAAK,SAClBwE,EAAeC,EAEnB,OAAIH,IAAiBC,EACV,IAGXC,EAAgBF,EAAa,WAAW,CAAA,EACxCG,EAAcF,EAAW,WAAW,CAAA,EAMhCC,GAAiB,IAAMC,GAAe,GAC/BH,IAAiBC,EAAW,YAAA,EAC5BE,GAAe,IAAMD,GAAiB,GACtCD,IAAeD,EAAa,YAAA,EAE5B,GAAA,CAaf,SAAAI,GAAyB3I,EAAM4I,EAAc,CACzC,MAAO,CAACA,GAAgBA,IAAiBf,GACrCC,EAAI,cAAc9H,CAAA,EAClB8H,EAAI,gBAAgBc,EAAc5I,CAAA,CAAA,CAM1C,SAAA6I,GAAsB7E,EAAQC,EAAM,CAEhC,QADI6E,EAAW9E,EAAO,WACf8E,GAAU,CACb,IAAIC,EAAYD,EAAS,YACzB7E,EAAK,YAAY6E,CAAA,EACjBA,EAAWC,CAAA,CAEf,OAAO9E,CAAA,CAGX,SAAA+E,GAA6BhF,EAAQC,EAAMjE,EAAM,CACzCgE,EAAOhE,KAAUiE,EAAKjE,KACtBgE,EAAOhE,GAAQiE,EAAKjE,GAChBgE,EAAOhE,GACPgE,EAAO,aAAahE,EAAM,EAAA,EAE1BgE,EAAO,gBAAgBhE,CAAA,EAAA,CAKnC,IAAIiJ,GAAoB,CACpB,OAAQ,SAASjF,EAAQC,EAAM,CAC3B,IAAIiF,EAAalF,EAAO,WACxB,GAAIkF,EAAY,CACZ,IAAIC,EAAaD,EAAW,SAAS,YAAA,EACjCC,IAAe,aACfD,EAAaA,EAAW,WACxBC,EAAaD,GAAcA,EAAW,SAAS,YAAA,GAE/CC,IAAe,UAAY,CAACD,EAAW,aAAa,UAAA,IAChDlF,EAAO,aAAa,UAAA,GAAe,CAACC,EAAK,WAIzCD,EAAO,aAAa,WAAY,UAAA,EAChCA,EAAO,gBAAgB,UAAA,GAK3BkF,EAAW,cAAgB,GAAA,CAGnCF,GAAoBhF,EAAQC,EAAM,UAAA,CAAA,EAQtC,MAAO,SAASD,EAAQC,EAAM,CAC1B+E,GAAoBhF,EAAQC,EAAM,SAAA,EAClC+E,GAAoBhF,EAAQC,EAAM,UAAA,EAE9BD,EAAO,QAAUC,EAAK,QACtBD,EAAO,MAAQC,EAAK,OAGnBA,EAAK,aAAa,OAAA,GACnBD,EAAO,gBAAgB,OAAA,CAAA,EAI/B,SAAU,SAASA,EAAQC,EAAM,CAC7B,IAAImF,EAAWnF,EAAK,MAChBD,EAAO,QAAUoF,IACjBpF,EAAO,MAAQoF,GAGnB,IAAIC,EAAarF,EAAO,WACxB,GAAIqF,EAAY,CAGZ,IAAIC,EAAWD,EAAW,UAE1B,GAAIC,GAAYF,GAAa,CAACA,GAAYE,GAAYtF,EAAO,YACzD,OAGJqF,EAAW,UAAYD,CAAA,CAAA,EAG/B,OAAQ,SAASpF,EAAQC,EAAM,CAC3B,GAAI,CAACA,EAAK,aAAa,UAAA,EAAa,CAUhC,QATIsF,EAAgB,GAChB/F,EAAI,EAKJsF,EAAW9E,EAAO,WAClBwF,EACAC,EACEX,GAEF,GADAW,EAAWX,EAAS,UAAYA,EAAS,SAAS,YAAA,EAC9CW,IAAa,WACbD,EAAWV,EACXA,EAAWU,EAAS,eACjB,CACH,GAAIC,IAAa,SAAU,CACvB,GAAIX,EAAS,aAAa,UAAA,EAAa,CACnCS,EAAgB/F,EAChB,KAAA,CAEJA,GAAA,CAEJsF,EAAWA,EAAS,YAChB,CAACA,GAAYU,IACbV,EAAWU,EAAS,YACpBA,EAAW,KAAA,CAKvBxF,EAAO,cAAgBuF,CAAA,CAAA,CAAA,EAK/BG,GAAe,EACfC,GAA2B,GAC3BC,GAAY,EACZC,GAAe,EAEnB,SAAAC,GAAgB,CAAA,CAEhB,SAAAC,GAA2BrJ,EAAM,CAC/B,GAAIA,EACA,OAAQA,EAAK,cAAgBA,EAAK,aAAa,IAAA,GAAUA,EAAK,EAAA,CAIpE,SAAAsJ,GAAyBC,EAAY,CAEjC,OAAO,SAAkB9C,EAAUC,EAAQ8C,EAAS,CAKhD,GAJKA,IACDA,EAAU,CAAA,GAGV,OAAO9C,GAAW,SAClB,GAAID,EAAS,WAAa,aAAeA,EAAS,WAAa,QAAUA,EAAS,WAAa,OAAQ,CACnG,IAAIgD,EAAa/C,EACjBA,EAASU,EAAI,cAAc,MAAA,EAC3BV,EAAO,UAAY+C,CAAA,MAEnB/C,EAASiB,GAAUjB,CAAA,EAI3B,IAAIgD,EAAaF,EAAQ,YAAcH,GACnCM,EAAoBH,EAAQ,mBAAqBJ,EACjDQ,EAAcJ,EAAQ,aAAeJ,EACrCS,EAAoBL,EAAQ,mBAAqBJ,EACjDU,EAAcN,EAAQ,aAAeJ,EACrCW,EAAwBP,EAAQ,uBAAyBJ,EACzDY,EAAkBR,EAAQ,iBAAmBJ,EAC7Ca,EAA4BT,EAAQ,2BAA6BJ,EACjEc,EAAeV,EAAQ,eAAiB,GAGxCW,EAAkB,OAAO,OAAO,IAAA,EAChCC,EAAmB,CAAA,EAEvB,SAAAC,EAAyBrL,EAAK,CAC1BoL,EAAiB,KAAKpL,CAAA,CAAA,CAG1B,SAAAsL,EAAiCtK,EAAMuK,EAAgB,CACnD,GAAIvK,EAAK,WAAagJ,GAElB,QADIZ,EAAWpI,EAAK,WACboI,GAAU,CAEb,IAAIpJ,EAAM,OAENuL,IAAmBvL,EAAM0K,EAAWtB,CAAA,GAGpCiC,EAAgBrL,CAAA,GAKhBgL,EAAgB5B,CAAA,EACZA,EAAS,YACTkC,EAAwBlC,EAAUmC,CAAA,GAI1CnC,EAAWA,EAAS,WAAA,CAAA,CAahC,SAAAoC,EAAoBxK,EAAMwI,EAAY+B,EAAgB,CAC9CR,EAAsB/J,CAAA,IAAU,KAIhCwI,GACAA,EAAW,YAAYxI,CAAA,EAG3BgK,EAAgBhK,CAAA,EAChBsK,EAAwBtK,EAAMuK,CAAA,EAAA,CA+BlC,SAAAE,EAAmBzK,EAAM,CACrB,GAAIA,EAAK,WAAagJ,IAAgBhJ,EAAK,WAAaiJ,GAEpD,QADIb,EAAWpI,EAAK,WACboI,GAAU,CACb,IAAIpJ,EAAM0K,EAAWtB,CAAA,EACjBpJ,IACAmL,EAAgBnL,GAAOoJ,GAI3BqC,EAAUrC,CAAA,EAEVA,EAAWA,EAAS,WAAA,CAAA,CAKhCqC,EAAUhE,CAAA,EAEV,SAAAiE,GAAyBhN,EAAI,CACzBkM,EAAYlM,CAAA,EAGZ,QADI0K,EAAW1K,EAAG,WACX0K,GAAU,CACb,IAAIuC,EAAcvC,EAAS,YAEvBpJ,EAAM0K,EAAWtB,CAAA,EACrB,GAAIpJ,EAAK,CACL,IAAI4L,EAAkBT,EAAgBnL,GAGlC4L,GAAmBhD,GAAiBQ,EAAUwC,CAAA,GAC9CxC,EAAS,WAAW,aAAawC,EAAiBxC,CAAA,EAClDyC,GAAQD,EAAiBxC,CAAA,GAE3BsC,GAAgBtC,CAAA,CAAA,MAKpBsC,GAAgBtC,CAAA,EAGlBA,EAAWuC,CAAA,CAAA,CAInB,SAAAG,GAAuBxH,EAAQyH,EAAkBC,EAAgB,CAI7D,KAAOD,GAAkB,CACrB,IAAIE,EAAkBF,EAAiB,aAClCC,EAAiBtB,EAAWqB,CAAA,GAG7BV,EAAgBW,CAAA,EAIhBR,EAAWO,EAAkBzH,EAAQ,EAAA,EAEzCyH,EAAmBE,CAAA,CAAA,CAI3B,SAAAJ,GAAiBvH,EAAQC,EAAM2H,EAAc,CACzC,IAAIC,EAAUzB,EAAWnG,CAAA,EAErB4H,GAGA,OAAOhB,EAAgBgB,GAGvB,GAACD,IAEGrB,EAAkBvG,EAAQC,CAAA,IAAU,KAKxCgG,EAAWjG,EAAQC,CAAA,EAEnBuG,EAAYxG,CAAA,EAER2G,EAA0B3G,EAAQC,CAAA,IAAU,QAKhDD,EAAO,WAAa,WACtB8H,GAAc9H,EAAQC,CAAA,EAEtBgF,GAAkB,SAASjF,EAAQC,CAAA,EAAA,CAIzC,SAAA6H,GAAuB9H,EAAQC,EAAM,CACjC,IAAI8H,EAAiB9H,EAAK,WACtBwH,EAAmBzH,EAAO,WAC1BgI,EACAN,EAEAC,EACAM,GACAC,EAGJC,EAAO,KAAOJ,GAAgB,CAK1B,IAJAE,GAAgBF,EAAe,YAC/BC,EAAe5B,EAAW2B,CAAA,EAGnBN,GAAkB,CAGrB,GAFAE,EAAkBF,EAAiB,YAE/BM,EAAe,YAAcA,EAAe,WAAWN,CAAA,EAAmB,CAC1EM,EAAiBE,GACjBR,EAAmBE,EACnB,SAAAQ,CAAA,CAGJT,EAAiBtB,EAAWqB,CAAA,EAE5B,IAAIW,GAAkBX,EAAiB,SAGnCY,EAAe,OA6EnB,GA3EID,KAAoBL,EAAe,WAC/BK,KAAoB1C,IAGhBsC,EAGIA,IAAiBN,KAIZQ,EAAiBrB,EAAgBmB,IAC9BL,IAAoBO,EAMpBG,EAAe,IASfrI,EAAO,aAAakI,EAAgBT,CAAA,EAIhCC,EAGAX,EAAgBW,CAAA,EAIhBR,EAAWO,EAAkBzH,EAAQ,EAAA,EAGzCyH,EAAmBS,GAKvBG,EAAe,IAGhBX,IAEPW,EAAe,IAGnBA,EAAeA,IAAiB,IAAS/D,GAAiBmD,EAAkBM,CAAA,EACxEM,GAKAd,GAAQE,EAAkBM,CAAA,IAGvBK,KAAoBxC,IAAawC,IAAmBvC,MAE3DwC,EAAe,GAGXZ,EAAiB,YAAcM,EAAe,YAC9CN,EAAiB,UAAYM,EAAe,aAMpDM,EAAc,CAGdN,EAAiBE,GACjBR,EAAmBE,EACnB,SAAAQ,CAAA,CASAT,EAGAX,EAAgBW,CAAA,EAIhBR,EAAWO,EAAkBzH,EAAQ,EAAA,EAGzCyH,EAAmBE,CAAA,CAOvB,GAAIK,IAAiBE,EAAiBrB,EAAgBmB,KAAkB1D,GAAiB4D,EAAgBH,CAAA,EACrG/H,EAAO,YAAYkI,CAAA,EAEnBX,GAAQW,EAAgBH,CAAA,MACrB,CACH,IAAIO,GAA0BjC,EAAkB0B,CAAA,EAC5CO,KAA4B,KACxBA,KACAP,EAAiBO,IAGjBP,EAAe,YACfA,EAAiBA,EAAe,UAAU/H,EAAO,eAAiB8D,CAAA,GAEtE9D,EAAO,YAAY+H,CAAA,EACnBX,GAAgBW,CAAA,EAAA,CAIxBA,EAAiBE,GACjBR,EAAmBE,CAAA,CAGvBH,GAAcxH,EAAQyH,EAAkBC,CAAA,EAExC,IAAIa,GAAmBtD,GAAkBjF,EAAO,UAC5CuI,IACAA,GAAiBvI,EAAQC,CAAA,CAAA,CAIjC,IAAIuI,EAAcrF,EACdsF,GAAkBD,EAAY,SAC9BE,GAAatF,EAAO,SAExB,GAAI,CAACwD,GAGD,GAAI6B,KAAoB/C,GAChBgD,KAAehD,GACVpB,GAAiBnB,EAAUC,CAAA,IAC5BsD,EAAgBvD,CAAA,EAChBqF,EAAc3D,GAAa1B,EAAUwB,GAAgBvB,EAAO,SAAUA,EAAO,YAAA,CAAA,GAIjFoF,EAAcpF,UAEXqF,KAAoB7C,IAAa6C,KAAoB5C,GAAc,CAC1E,GAAI6C,KAAeD,GACf,OAAID,EAAY,YAAcpF,EAAO,YACjCoF,EAAY,UAAYpF,EAAO,WAG5BoF,EAGPA,EAAcpF,CAAA,EAK1B,GAAIoF,IAAgBpF,EAGhBsD,EAAgBvD,CAAA,MACb,CACH,GAAIC,EAAO,YAAcA,EAAO,WAAWoF,CAAA,EACvC,OAUJ,GAPAjB,GAAQiB,EAAapF,EAAQwD,CAAA,EAOzBE,EACA,QAAStH,GAAE,EAAG5F,GAAIkN,EAAiB,OAAQtH,GAAE5F,GAAK4F,KAAK,CACnD,IAAImJ,GAAa9B,EAAgBC,EAAiBtH,KAC9CmJ,IACAzB,EAAWyB,GAAYA,GAAW,WAAY,EAAA,CAAA,CAAA,CAM9D,MAAI,CAAC/B,GAAgB4B,IAAgBrF,GAAYA,EAAS,aAClDqF,EAAY,YACZA,EAAcA,EAAY,UAAUrF,EAAS,eAAiBW,CAAA,GAOlEX,EAAS,WAAW,aAAaqF,EAAarF,CAAA,GAG3CqF,CAAA,CAAA,CAIf,IAAII,GAAW5C,GAAgB9C,EAAA,EAExB2F,GAAQD,GC5tBfE,GAAA,KAA8B,CAAA,OACrB,QAAQ9I,EAAQC,EAAM8I,EAAc,CACzCF,GAAS7I,EAAQC,EAAM,CACrB,aAAc,GACd,kBAAmB,CAAC+I,EAAQC,IAAS,CACnC,GAAGF,GAAiBA,EAAc,WAAWC,CAAA,GAAWrI,EAAI,YAAYqI,CAAA,EACtE,OAAArI,EAAI,kBAAkBqI,EAAQC,CAAA,EACvB,EAAA,CAAA,CAAA,CAAA,CAMf,YAAYnP,EAAM+E,EAAWrC,EAAIK,EAAMqM,EAAU,CAC/C,KAAK,KAAOpP,EACZ,KAAK,WAAaA,EAAK,WACvB,KAAK,UAAY+E,EACjB,KAAK,GAAKrC,EACV,KAAK,OAAS1C,EAAK,KAAK,GACxB,KAAK,KAAO+C,EACZ,KAAK,UAAYqM,EACjB,KAAK,SAAW3P,GAAM,KAAK,SAAA,EAC3B,KAAK,UAAY,CACf,YAAa,CAAA,EAAI,cAAe,CAAA,EAAI,oBAAqB,CAAA,EACzD,WAAY,CAAA,EAAI,aAAc,CAAA,EAAI,eAAgB,CAAA,EAAI,mBAAoB,CAAA,CAAA,CAAA,CAI9E,OAAOQ,EAAMe,EAAS,CAAE,KAAK,UAAU,SAASf,KAAQ,KAAKe,CAAA,CAAA,CAC7D,MAAMf,EAAMe,EAAS,CAAE,KAAK,UAAU,QAAQf,KAAQ,KAAKe,CAAA,CAAA,CAE3D,YAAYf,KAASoP,EAAK,CACxB,KAAK,UAAU,SAASpP,KAAQ,QAAQe,GAAYA,EAAS,GAAGqO,CAAA,CAAA,CAAA,CAGlE,WAAWpP,KAASoP,EAAK,CACvB,KAAK,UAAU,QAAQpP,KAAQ,QAAQe,GAAYA,EAAS,GAAGqO,CAAA,CAAA,CAAA,CAGjE,+BAA+B,CAC7BxI,EAAI,IAAI,KAAK,UAAW,oDAAqDvG,GAAM,CACjFA,EAAG,aAAazE,GAAY,EAAA,CAAA,CAAA,CAAA,CAIhC,SAAS,CACP,GAAI,CAAC,KAAAmE,EAAM,WAAAjB,EAAY,UAAAgG,EAAW,KAAAhC,CAAA,EAAQ,KACtCuM,EAAkB,KAAK,WAAA,EAAe,KAAK,mBAAmBvM,CAAA,EAAQgC,EAC1E,GAAG,KAAK,WAAA,GAAgB,CAACuK,EAAkB,OAE3C,IAAI1J,EAAU7G,EAAW,iBAAA,EACrB,CAAC,eAAA8G,EAAgB,aAAAC,CAAA,EAAgBF,GAAWiB,EAAI,kBAAkBjB,CAAA,EAAWA,EAAU,CAAA,EACvF1C,EAAYnE,EAAW,QAAQzB,EAAA,EAC/B0H,EAAiBjG,EAAW,QAAQxC,EAAA,EACpC6J,EAAcrH,EAAW,QAAQ9B,EAAA,EACjCgJ,EAAqBlH,EAAW,QAAQzC,EAAA,EACxCiT,EAAQ,CAAA,EACRC,EAAU,CAAA,EACVC,EAAuB,CAAA,EACvBC,EAAwB,KAExBC,EAAW5Q,EAAW,KAAK,0BAA2B,IACjD,KAAK,cAAcgG,EAAWhC,EAAMG,EAAWoM,CAAA,CAAA,EAGxD,YAAK,YAAY,QAASvK,CAAA,EAC1B,KAAK,YAAY,UAAWA,EAAWA,CAAA,EAEvChG,EAAW,KAAK,WAAY,IAAM,CAChCgQ,GAASO,EAAiBK,EAAU,CAClC,aAAcL,EAAgB,aAAatU,CAAA,IAAmB,KAC9D,WAAa4H,GACJiE,EAAI,eAAejE,CAAA,EAAQ,KAAOA,EAAK,GAEhD,kBAAoBtC,IAClB,KAAK,YAAY,QAASA,CAAA,EACnBA,GAET,YAAcA,GAAO,CAChBuG,EAAI,yBAAyBvG,EAAI2F,CAAA,IAClCyJ,EAAwBpP,GAG1BuG,EAAI,aAAayI,EAAiBhP,EAAI0E,CAAA,EAEnC6B,EAAI,WAAWvG,CAAA,GAAON,EAAK,YAAYM,CAAA,GACxC,KAAK,WAAW,gBAAiBA,CAAA,EAEnCiP,EAAM,KAAKjP,CAAA,CAAA,EAEb,gBAAkBA,GAAO,CAEpBuG,EAAI,WAAWvG,CAAA,GAAMvB,EAAW,gBAAgBuB,CAAA,EACnD,KAAK,WAAW,YAAaA,CAAA,CAAA,EAE/B,sBAAwBA,GACnBA,EAAG,cAAgBA,EAAG,aAAazE,EAAA,IAAgB,KAAc,GACjE,EAAAyE,EAAG,aAAe,MAAQuG,EAAI,YAAYvG,EAAG,WAAY4C,EAAW,CAAC,SAAU,SAAA,CAAA,GAAe5C,EAAG,IACjG,KAAK,eAAeA,CAAA,GAGzB,YAAcA,GAAO,CAChBuG,EAAI,yBAAyBvG,EAAI2F,CAAA,IAClCyJ,EAAwBpP,GAE1BkP,EAAQ,KAAKlP,CAAA,CAAA,EAEf,kBAAmB,CAAC4F,EAAQC,IAAS,CAEnC,GADAU,EAAI,gBAAgBV,EAAMjD,CAAA,EACvB,KAAK,eAAeiD,CAAA,EAAQ,MAAO,GACtC,GAAGU,EAAI,UAAUX,EAAQhD,CAAA,EACvB,YAAK,YAAY,UAAWgD,EAAQC,CAAA,EACpCU,EAAI,WAAWX,EAAQC,EAAM,CAAC,UAAW,EAAA,CAAA,EACzCqJ,EAAQ,KAAKtJ,CAAA,EACN,GAET,GAAGA,EAAO,OAAS,UAAaA,EAAO,UAAYA,EAAO,SAAS,SAAY,MAAO,GACtF,GAAG,CAACW,EAAI,eAAeX,EAAQC,EAAMC,CAAA,EACnC,OAAGS,EAAI,cAAcX,CAAA,IACnB,KAAK,YAAY,UAAWA,EAAQC,CAAA,EACpCqJ,EAAQ,KAAKtJ,CAAA,GAER,GAIT,GAAGW,EAAI,WAAWV,CAAA,EAAM,CACtB,IAAIyJ,EAAc1J,EAAO,aAAatJ,CAAA,EACtC,OAAAiK,EAAI,WAAWX,EAAQC,EAAM,CAAC,QAAS,CAACrJ,EAAA,CAAA,CAAA,EACrC8S,IAAgB,IAAK1J,EAAO,aAAatJ,EAAagT,CAAA,EACzD1J,EAAO,aAAa7J,GAAa,KAAK,MAAA,EAC/B,EAAA,CAST,OALAwK,EAAI,aAAaV,EAAMD,CAAA,EACvBW,EAAI,aAAayI,EAAiBnJ,EAAMnB,CAAA,EACxC6B,EAAI,iBAAiBV,CAAA,EAECP,GAAWM,EAAO,WAAWN,CAAA,GAAYiB,EAAI,YAAYX,CAAA,GACzD,CAAC,KAAK,yBAAyBA,EAAQC,CAAA,GAC3D,KAAK,YAAY,UAAWD,EAAQC,CAAA,EACpCU,EAAI,kBAAkBX,EAAQC,CAAA,EAC9BU,EAAI,iBAAiBX,CAAA,EACrBsJ,EAAQ,KAAKtJ,CAAA,EACN,KAEJW,EAAI,YAAYV,EAAMjD,EAAW,CAAC,SAAU,SAAA,CAAA,GAC7CuM,EAAqB,KAAK,IAAInH,GAAqBpC,EAAQC,EAAMA,EAAK,aAAajD,CAAA,CAAA,CAAA,EAErF2D,EAAI,iBAAiBV,CAAA,EACrB,KAAK,YAAY,UAAWD,EAAQC,CAAA,EAC7B,GAAA,CAAA,CAAA,CAAA,CAAA,EAMZpH,EAAW,eAAA,GAAmBY,GAAA,EAE9B8P,EAAqB,OAAS,GAC/B1Q,EAAW,KAAK,wCAAyC,IAAM,CAC7D0Q,EAAqB,QAAQI,GAAUA,EAAO,QAAA,CAAA,CAAA,CAAA,EAIlD9Q,EAAW,cAAc,IAAM8H,EAAI,aAAajB,EAASC,EAAgBC,CAAA,CAAA,EACzEe,EAAI,cAAc,SAAU,YAAA,EAC5B0I,EAAM,QAAQjP,GAAM,KAAK,WAAW,QAASA,CAAA,CAAA,EAC7CkP,EAAQ,QAAQlP,GAAM,KAAK,WAAW,UAAWA,CAAA,CAAA,EAE9CoP,IACD3Q,EAAW,WAAA,EACX2Q,EAAsB,OAAA,GAEjB,EAAA,CAGT,yBAAyBxJ,EAAQC,EAAK,CACpC,IAAI2J,EAAW,CAAC,SAAU,aAAc,iBAAA,EAAmB,KAAMC,GAAMA,IAAM7J,EAAO,IAAA,EACpF,OAAOA,EAAO,WAAa,IAAS4J,GAAY5J,EAAO,WAAaC,EAAK,SAAA,CAG3E,YAAY,CAAE,OAAO,KAAK,QAAA,CAE1B,eAAe7F,EAAG,CAChB,OAAOA,EAAG,WAAa,KAAK,cAAgBA,EAAG,aAAa1E,EAAA,IAAc,IAAA,CAG5E,mBAAmBmH,EAAK,CACtB,GAAG,CAAC,KAAK,WAAA,EAAe,OACxB,GAAI,CAACiN,KAAUC,CAAA,EAAQpJ,EAAI,sBAAsB,KAAK,UAAW,KAAK,SAAA,EACtE,OAAGoJ,EAAK,SAAW,GAAKpJ,EAAI,gBAAgB9D,CAAA,IAAU,EAC7CiN,EAEAA,GAASA,EAAM,UAAA,CAU1B,cAAcjL,EAAWhC,EAAMG,EAAWoM,EAAgB,CACxD,IAAIY,EAAa,KAAK,WAAA,EAClBC,EAAsBD,GAAcZ,EAAgB,aAAatU,CAAA,IAAmB,KAAK,UAAU,SAAA,EACvG,GAAG,CAACkV,GAAcC,EAChB,OAAOpN,EACF,CAEL,IAAIqN,EAAgB,KAChBpN,EAAW,SAAS,cAAc,UAAA,EACtCoN,EAAgBvJ,EAAI,UAAUyI,CAAA,EAC9B,GAAI,CAACe,KAAmBJ,CAAA,EAAQpJ,EAAI,sBAAsBuJ,EAAe,KAAK,SAAA,EAC9E,OAAApN,EAAS,UAAYD,EACrBkN,EAAK,QAAQ3P,GAAMA,EAAG,OAAA,CAAA,EACtB,MAAM,KAAK8P,EAAc,UAAA,EAAY,QAAQxH,GAAS,CAEjDA,EAAM,IAAMA,EAAM,WAAa,KAAK,cAAgBA,EAAM,aAAa5N,CAAA,IAAmB,KAAK,UAAU,SAAA,IAC1G4N,EAAM,aAAahN,GAAU,EAAA,EAC7BgN,EAAM,UAAY,GAAA,CAAA,EAGtB,MAAM,KAAK5F,EAAS,QAAQ,UAAA,EAAY,QAAQ1C,GAAM8P,EAAc,aAAa9P,EAAI+P,CAAA,CAAA,EACrFA,EAAe,OAAA,EACRD,EAAc,SAAA,CAAA,CAAA,ECxO3BE,GAAA,KAA8B,CAAA,OACrB,QAAQC,EAAK,CAClB,GAAI,EAAE7R,IAAQ8R,GAAQ/R,IAASgS,GAAS9R,IAAQ+R,CAAA,EAASH,EACzD,cAAOA,EAAK7R,IACZ,OAAO6R,EAAK9R,IACZ,OAAO8R,EAAK5R,IACL,CAAC,KAAA4R,EAAM,MAAAG,EAAO,MAAOF,GAAS,KAAM,OAAQC,GAAU,CAAA,CAAA,CAAA,CAG/D,YAAYE,EAAQC,EAAS,CAC3B,KAAK,OAASD,EACd,KAAK,SAAW,CAAA,EAChB,KAAK,UAAUC,CAAA,CAAA,CAGjB,cAAc,CAAE,OAAO,KAAK,MAAA,CAE5B,SAASC,EAAS,CAChB,OAAO,KAAK,kBAAkB,KAAK,SAAU,KAAK,SAASrS,GAAaqS,CAAA,CAAA,CAG1E,kBAAkBD,EAAUE,EAAaF,EAASpS,GAAaqS,EAAS,CACtEA,EAAWA,EAAW,IAAI,IAAIA,CAAA,EAAY,KAC1C,IAAIE,EAAS,CAAC,OAAQ,GAAI,WAAAD,EAAwB,SAAAD,CAAA,EAClD,YAAK,eAAeD,EAAUG,CAAA,EACvBA,EAAO,MAAA,CAGhB,cAAcR,EAAK,CAAE,OAAO,OAAO,KAAKA,EAAK/R,IAAe,CAAA,CAAA,EAAI,IAAIkH,GAAK,SAASA,CAAA,CAAA,CAAA,CAElF,oBAAoB6K,EAAK,CACvB,OAAIA,EAAK/R,GACF,OAAO,KAAK+R,CAAA,EAAM,SAAW,EADN,EACM,CAGtC,aAAaA,EAAM7Q,EAAI,CAAE,OAAO6Q,EAAK/R,GAAYkB,EAAA,CAEjD,UAAU6Q,EAAK,CACb,IAAIS,EAAOT,EAAK/R,GACZyS,EAAQ,CAAA,EAKZ,GAJA,OAAOV,EAAK/R,GACZ,KAAK,SAAW,KAAK,aAAa,KAAK,SAAU+R,CAAA,EACjD,KAAK,SAAS/R,GAAc,KAAK,SAASA,IAAe,CAAA,EAEtDwS,EAAK,CACN,IAAIE,EAAO,KAAK,SAAS1S,GAEzB,QAAQkB,KAAOsR,EACbA,EAAKtR,GAAO,KAAK,oBAAoBA,EAAKsR,EAAKtR,GAAMwR,EAAMF,EAAMC,CAAA,EAGnE,QAAQrP,KAAOoP,EAAOE,EAAKtP,GAAOoP,EAAKpP,GACvC2O,EAAK/R,GAAcwS,CAAA,CAAA,CAIvB,oBAAoBtR,EAAKyR,EAAOD,EAAMF,EAAMC,EAAM,CAChD,GAAGA,EAAMvR,GACP,OAAOuR,EAAMvR,GACR,CACL,IAAI0R,EAAOC,EAAMC,EAAOH,EAAM5S,GAE9B,GAAGkB,GAAM6R,CAAA,EAAM,CACb,IAAIC,EAEDD,EAAO,EACRC,EAAQ,KAAK,oBAAoBD,EAAMN,EAAKM,GAAOJ,EAAMF,EAAMC,CAAA,EAE/DM,EAAQL,EAAK,CAACI,GAGhBD,EAAOE,EAAMhT,GACb6S,EAAQ,KAAK,WAAWG,EAAOJ,CAAA,EAC/BC,EAAM7S,GAAU8S,CAAA,MAEhBD,EAAQD,EAAM5S,KAAY,OAAY4S,EAAQ,KAAK,WAAWD,EAAKxR,IAAQ,CAAA,EAAIyR,CAAA,EAGjF,OAAAF,EAAMvR,GAAO0R,EACNA,CAAA,CAAA,CAIX,aAAa1N,EAAQC,EAAO,CAC1B,OAAGA,EAAOpF,KAAY,OACboF,GAEP,KAAK,eAAeD,EAAQC,CAAA,EACrBD,EAAA,CAIX,eAAeA,EAAQC,EAAO,CAC5B,QAAQ/B,KAAO+B,EAAO,CACpB,IAAIxD,EAAMwD,EAAO/B,GACb4P,EAAY9N,EAAO9B,GACpBnB,GAASN,CAAA,GAAQA,EAAI5B,KAAY,QAAakC,GAAS+Q,CAAA,EACxD,KAAK,eAAeA,EAAWrR,CAAA,EAE/BuD,EAAO9B,GAAOzB,CAAA,CAAA,CAKpB,WAAWuD,EAAQC,EAAO,CACxB,IAAI8N,EAASC,MAAA,GAAIhO,GAAWC,GAC5B,QAAQ/B,KAAO6P,EAAO,CACpB,IAAItR,EAAMwD,EAAO/B,GACb4P,EAAY9N,EAAO9B,GACpBnB,GAASN,CAAA,GAAQA,EAAI5B,KAAY,QAAakC,GAAS+Q,CAAA,IACxDC,EAAO7P,GAAO,KAAK,WAAW4P,EAAWrR,CAAA,EAAA,CAG7C,OAAOsR,CAAA,CAGT,kBAAkB/R,EAAI,CAAE,OAAO,KAAK,qBAAqB,KAAK,SAASlB,GAAakB,CAAA,CAAA,CAEpF,UAAU0D,EAAK,CACbA,EAAK,QAAQ1D,GAAO,OAAO,KAAK,SAASlB,GAAYkB,EAAA,CAAA,CAKvD,KAAK,CAAE,OAAO,KAAK,QAAA,CAEnB,iBAAiB6Q,EAAO,CAAA,EAAG,CAAE,MAAO,CAAC,CAACA,EAAKhS,EAAA,CAE3C,eAAeqS,EAAUG,EAAO,CAC9B,GAAGH,EAAStS,IAAY,OAAO,KAAK,sBAAsBsS,EAAUG,CAAA,EACpE,GAAI,EAAExS,GAASoT,CAAA,EAAWf,EAE1BG,EAAO,QAAUY,EAAQ,GACzB,QAAQjM,EAAI,EAAGA,EAAIiM,EAAQ,OAAQjM,IACjC,KAAK,gBAAgBkL,EAASlL,EAAI,GAAIqL,CAAA,EACtCA,EAAO,QAAUY,EAAQjM,EAAA,CAI7B,sBAAsBkL,EAAUG,EAAO,CACrC,GAAI,EAAEzS,IAAWsT,GAAWrT,GAASoT,CAAA,EAAWf,EAEhD,QAAQ/G,EAAI,EAAGA,EAAI+H,EAAS,OAAQ/H,IAAI,CACtC,IAAIgI,EAAUD,EAAS/H,GACvBkH,EAAO,QAAUY,EAAQ,GACzB,QAAQjM,EAAI,EAAGA,EAAIiM,EAAQ,OAAQjM,IACjC,KAAK,gBAAgBmM,EAAQnM,EAAI,GAAIqL,CAAA,EACrCA,EAAO,QAAUY,EAAQjM,EAAA,CAAA,CAK/B,gBAAgBkL,EAAUG,EAAO,CAC5B,OAAQH,GAAc,SACvBG,EAAO,QAAU,KAAK,qBAAqBA,EAAO,WAAYH,EAAUG,EAAO,QAAA,EACvEtQ,GAASmQ,CAAA,EACjB,KAAK,eAAeA,EAAUG,CAAA,EAE9BA,EAAO,QAAUH,CAAA,CAIrB,qBAAqBE,EAAYpR,EAAKmR,EAAS,CAC7C,IAAIiB,EAAYhB,EAAWpR,IAAQL,EAAS,wBAAwBK,IAAOoR,CAAA,EACvE9N,EAAW,SAAS,cAAc,UAAA,EACtCA,EAAS,UAAY,KAAK,kBAAkB8O,EAAWhB,EAAYD,CAAA,EACnE,IAAI9L,EAAY/B,EAAS,QACrB+O,EAAOlB,GAAY,CAACA,EAAS,IAAInR,CAAA,EAEjC,CAACsS,EAAeC,CAAA,EAClB,MAAM,KAAKlN,EAAU,UAAA,EAAY,OAAO,CAAC,CAACmN,EAAUC,CAAA,EAAgBvJ,EAAOlD,IACtEkD,EAAM,WAAa,KAAK,aACtBA,EAAM,aAAa5N,CAAA,EACb,CAACkX,EAAU,EAAA,GAEpBtJ,EAAM,aAAa5N,EAAe0E,CAAA,EAC9BkJ,EAAM,KAAKA,EAAM,GAAK,GAAG,KAAK,aAAA,KAAkBlJ,KAAOgG,KACxDqM,IACDnJ,EAAM,aAAahN,GAAU,EAAA,EAC7BgN,EAAM,UAAY,IAEb,CAAC,GAAMuJ,CAAA,GAEXvJ,EAAM,UAAU,KAAA,IAAW,IAC5BvJ,EAAS;;QACEuJ,EAAM,UAAU,KAAA;;;EACZ5F,EAAS,UAAU,KAAA,CAAA,EAClC4F,EAAM,YAAY,KAAK,WAAWA,EAAM,UAAWlJ,CAAA,CAAA,EAC5C,CAAC,GAAMyS,CAAA,IAEdvJ,EAAM,OAAA,EACC,CAACsJ,EAAUC,CAAA,GAGrB,CAAC,GAAO,EAAA,CAAA,EAEb,MAAG,CAACH,GAAiB,CAACC,GACpB5S,EAAS;EACP2D,EAAS,UAAU,KAAA,CAAA,EACd,KAAK,WAAW,GAAItD,CAAA,EAAK,YACxB,CAACsS,GAAiBC,GAC1B5S,EAAS,+KACP2D,EAAS,UAAU,KAAA,CAAA,EACdA,EAAS,UAEA,CAIpB,WAAWoP,EAAM1S,EAAI,CACnB,IAAI2S,EAAO,SAAS,cAAc,MAAA,EAClC,OAAAA,EAAK,UAAYD,EACjBC,EAAK,aAAarX,EAAe0E,CAAA,EAC1B2S,CAAA,CAAA,ECtOPC,GAAa,EACjBC,GAAA,KAA8B,CAAA,OACrB,QAAQ,CAAE,OAAOD,IAAA,CAAA,OACjB,UAAUhS,EAAG,CAAE,OAAOA,EAAG,SAAA,CAEhC,YAAYN,EAAMM,EAAIkS,EAAU,CAC9B,KAAK,OAASxS,EACd,KAAK,aAAeA,EAAK,WACzB,KAAK,YAAcwS,EACnB,KAAK,YAAc,IAAI,IACvB,KAAK,iBAAmB,GACxB,KAAK,GAAKlS,EACV,KAAK,GAAG,UAAY,KAAK,YAAY,OAAA,EACrC,QAAQsB,KAAO,KAAK,YAAc,KAAKA,GAAO,KAAK,YAAYA,EAAA,CAGjE,WAAW,CAAE,KAAK,SAAW,KAAK,QAAA,CAAA,CAClC,WAAW,CAAE,KAAK,SAAW,KAAK,QAAA,CAAA,CAClC,gBAAgB,CAAE,KAAK,cAAgB,KAAK,aAAA,CAAA,CAC5C,aAAa,CAAE,KAAK,WAAa,KAAK,UAAA,CAAA,CACtC,eAAe,CACV,KAAK,mBACN,KAAK,iBAAmB,GACxB,KAAK,aAAe,KAAK,YAAA,EAAA,CAG7B,gBAAgB,CACd,KAAK,iBAAmB,GACxB,KAAK,cAAgB,KAAK,aAAA,CAAA,CAG5B,UAAUoC,EAAOyO,EAAU,CAAA,EAAIC,EAAU,UAAW,CAAA,EAAI,CACtD,OAAO,KAAK,OAAO,cAAc,KAAM1O,EAAOyO,EAASC,CAAA,CAAA,CAGzD,YAAYC,EAAW3O,EAAOyO,EAAU,CAAA,EAAIC,EAAU,UAAW,CAAA,EAAI,CACnE,OAAO,KAAK,OAAO,cAAcC,EAAW,CAAC3S,EAAM4S,IAC1C5S,EAAK,cAAc4S,EAAW5O,EAAOyO,EAASC,CAAA,CAAA,CAAA,CAIzD,YAAY1O,EAAOhD,EAAS,CAC1B,IAAI6R,EAAc,CAACC,EAAaC,IAAWA,EAAS/O,EAAQhD,EAAS8R,EAAY,MAAA,EACjF,cAAO,iBAAiB,YAAY9O,IAAS6O,CAAA,EAC7C,KAAK,YAAY,IAAIA,CAAA,EACdA,CAAA,CAGT,kBAAkBA,EAAY,CAC5B,IAAI7O,EAAQ6O,EAAY,KAAM,EAAA,EAC9B,OAAO,oBAAoB,YAAY7O,IAAS6O,CAAA,EAChD,KAAK,YAAY,OAAOA,CAAA,CAAA,CAG1B,OAAO3Q,EAAMwF,EAAM,CACjB,OAAO,KAAK,OAAO,gBAAgBxF,EAAMwF,CAAA,CAAA,CAG3C,SAASiL,EAAWzQ,EAAMwF,EAAM,CAC9B,OAAO,KAAK,OAAO,cAAciL,EAAW3S,GAAQA,EAAK,gBAAgBkC,EAAMwF,CAAA,CAAA,CAAA,CAGjF,aAAa,CACX,KAAK,YAAY,QAAQmL,GAAe,KAAK,kBAAkBA,CAAA,CAAA,CAAA,CAAA,ECd/DG,GAAgB,CAACpO,EAAM9C,EAAO,CAAA,IAAO,CACvC,IAAImR,EAAW,IAAI,SAASrO,CAAA,EACxB0B,EAAW,CAAA,EAEf2M,EAAS,QAAQ,CAAC9S,EAAKyB,EAAKsR,IAAW,CAClC/S,aAAe,MAAOmG,EAAS,KAAK1E,CAAA,CAAA,CAAA,EAIzC0E,EAAS,QAAQ1E,GAAOqR,EAAS,OAAOrR,CAAA,CAAA,EAExC,IAAIuR,EAAS,IAAI,gBACjB,OAAQ,CAACvR,EAAKzB,CAAA,IAAQ8S,EAAS,QAAA,EAAYE,EAAO,OAAOvR,EAAKzB,CAAA,EAC9D,QAAQiT,KAAWtR,EAAOqR,EAAO,OAAOC,EAAStR,EAAKsR,EAAA,EAEtD,OAAOD,EAAO,SAAA,CAAA,EAGhBE,GAAA,KAA0B,CACxB,YAAY/S,EAAIvB,EAAYuU,EAAYjR,EAAM,CAC5C,KAAK,WAAatD,EAClB,KAAK,MAAQsD,EACb,KAAK,OAASiR,EACd,KAAK,KAAOA,EAAaA,EAAW,KAAO,KAC3C,KAAK,GAAKhT,EACV,KAAK,GAAK,KAAK,GAAG,GAClB,KAAK,IAAM,EACX,KAAK,WAAa,EAClB,KAAK,YAAc,KACnB,KAAK,aAAe,CAAA,EACpB,KAAK,YAAc,CAAA,EACnB,KAAK,SAAW,GAChB,KAAK,KAAO,KACZ,KAAK,UAAY,KAAK,OAAS,KAAK,OAAO,UAAY,EAAI,EAC3D,KAAK,YAAc,GACnB,KAAK,UAAY,GACjB,KAAK,aAAe,UAAW,CAAA,EAC/B,KAAK,aAAe,UAAW,CAAA,EAC/B,KAAK,eAAiB,KAAK,OAAS,KAAO,CAAA,EAC3C,KAAK,UAAY,CAAA,EACjB,KAAK,UAAY,CAAA,EACjB,KAAK,YAAc,CAAA,EACnB,KAAK,SAAW,KAAK,OAAS,KAAO,CAAA,EACrC,KAAK,KAAK,SAAS,KAAK,IAAM,CAAA,EAC9B,KAAK,QAAU,KAAK,WAAW,QAAQ,MAAM,KAAK,KAAM,KAC/C,CACL,SAAU,KAAK,SAAW,KAAK,KAAO,OACtC,IAAK,KAAK,SAAW,OAAY,KAAK,MAAQ,OAC9C,OAAQ,KAAK,cAAA,EACb,QAAS,KAAK,WAAA,EACd,OAAQ,KAAK,UAAA,EACb,MAAO,KAAK,KAAA,EAAA,EAGhB,KAAK,WAAW,KAAK,WAAW,aAAA,EAChC,KAAK,YAAA,CAAA,CAGP,QAAQiT,EAAK,CAAE,KAAK,KAAOA,CAAA,CAE3B,YAAYA,EAAK,CACf,KAAK,SAAW,GAChB,KAAK,KAAOA,CAAA,CAGd,QAAQ,CAAE,OAAO,KAAK,WAAW,OAAS,IAAA,CAE1C,eAAe,CACb,IAAIJ,EAAS,KAAK,WAAW,OAAO,KAAK,EAAA,EACrCK,EACF3M,EAAI,IAAI,SAAU,IAAI,KAAK,QAAQ3L,EAAA,IAAA,EAChC,IAAI0H,GAAQA,EAAK,KAAOA,EAAK,IAAA,EAAM,OAAOwF,GAAO,OAAQA,GAAS,QAAA,EAEvE,OAAGoL,EAAS,OAAS,IAAIL,EAAO,cAAmBK,GACnDL,EAAO,QAAa,KAAK,UAElBA,CAAA,CAGT,aAAa,CAAE,OAAO,KAAK,QAAQ,QAAA,CAAA,CAEnC,YAAY,CAAE,OAAO,KAAK,GAAG,aAAavW,CAAA,CAAA,CAE1C,WAAW,CACT,IAAIuD,EAAM,KAAK,GAAG,aAAarD,EAAA,EAC/B,OAAOqD,IAAQ,GAAK,KAAOA,CAAA,CAG7B,QAAQa,EAAW,UAAW,CAAA,EAAI,CAChC,KAAK,mBAAA,EACL,KAAK,UAAY,GACjB,OAAO,KAAK,KAAK,SAAS,KAAK,IAC5B,KAAK,QAAS,OAAO,KAAK,KAAK,SAAS,KAAK,OAAO,IAAI,KAAK,IAChE,aAAa,KAAK,WAAA,EAClB,IAAIyS,EAAa,IAAM,CACrBzS,EAAA,EACA,QAAQ0B,KAAM,KAAK,UACjB,KAAK,YAAY,KAAK,UAAUA,EAAA,CAAA,EAIpCmE,EAAI,sBAAsB,KAAK,EAAA,EAE/B,KAAK,IAAI,YAAa,IAAM,CAAC,4CAAA,CAAA,EAC7B,KAAK,QAAQ,MAAA,EACV,QAAQ,KAAM4M,CAAA,EACd,QAAQ,QAASA,CAAA,EACjB,QAAQ,UAAWA,CAAA,CAAA,CAGxB,uBAAuBC,EAAQ,CAC7B,KAAK,GAAG,UAAU,OAChB3X,GACAC,GACAE,EAAA,EAEF,KAAK,GAAG,UAAU,IAAI,GAAGwX,CAAA,CAAA,CAG3B,WAAW,CAAE,OAAO,KAAK,GAAG,UAAU,SAAS1X,EAAA,CAAA,CAE/C,WAAWuI,EAAQ,CAEjB,GADA,aAAa,KAAK,WAAA,EACfA,EACD,KAAK,YAAc,WAAW,IAAM,KAAK,WAAA,EAAcA,CAAA,MAClD,CACL,QAAQ7B,KAAM,KAAK,UAAY,KAAK,UAAUA,GAAI,eAAA,EAClD,KAAK,oBAAoB1G,EAAA,CAAA,CAAA,CAI7B,YAAY,CACV,aAAa,KAAK,WAAA,EAClB,KAAK,oBAAoBD,EAAA,CAAA,CAG3B,oBAAoB,CAClB,QAAQ2G,KAAM,KAAK,UAAY,KAAK,UAAUA,GAAI,cAAA,CAAA,CAGpD,IAAIzC,EAAM0T,EAAY,CACpB,KAAK,WAAW,IAAI,KAAM1T,EAAM0T,CAAA,CAAA,CAGlC,cAAchB,EAAW3R,EAAS,CAChC,GAAG2R,aAAqB,YACtB,OAAO,KAAK,WAAW,MAAMA,EAAW3S,GAAQgB,EAAShB,EAAM2S,CAAA,CAAA,EAGjE,GAAG,iBAAiB,KAAKA,CAAA,EAAW,CAClC,IAAIiB,EAAU/M,EAAI,sBAAsB,KAAK,GAAI8L,CAAA,EAC9CiB,EAAQ,SAAW,EACpBvU,EAAS,6CAA6CsT,GAAA,EAEtD3R,EAAS,KAAM4S,EAAQ,EAAA,CAAA,KAEpB,CACL,IAAIA,EAAU,MAAM,KAAK,SAAS,iBAAiBjB,CAAA,CAAA,EAChDiB,EAAQ,SAAW,GAAIvU,EAAS,mDAAmDsT,IAAA,EACtFiB,EAAQ,QAAQlQ,GAAU,KAAK,WAAW,MAAMA,EAAQ1D,GAAQgB,EAAShB,EAAM0D,CAAA,CAAA,CAAA,CAAA,CAAA,CAInF,UAAUmQ,EAAMC,EAAS9S,EAAS,CAChC,KAAK,IAAI6S,EAAM,IAAM,CAAC,GAAIzT,GAAM0T,CAAA,CAAA,CAAA,EAChC,GAAI,CAAC,KAAAvD,EAAM,MAAAC,EAAO,OAAAC,EAAQ,MAAAC,CAAA,EAASJ,GAAS,QAAQwD,CAAA,EACpD,OAAGpD,GAAQ7J,EAAI,SAAS6J,CAAA,EAExB1P,EAAS,CAAC,KAAAuP,EAAM,MAAAC,EAAO,OAAAC,CAAA,CAAA,EAChBD,CAAA,CAGT,OAAOpP,EAAK,CACV,GAAI,CAAC,SAAAwP,EAAU,UAAA7L,CAAA,EAAa3D,EAC5B,GAAG2D,EAAU,CACX,GAAI,CAACgP,EAAKtN,CAAA,EAAS1B,EACnB,KAAK,GAAK8B,EAAI,qBAAqB,KAAK,GAAIkN,EAAKtN,CAAA,CAAA,CAEnD,KAAK,WAAa,EAClB,KAAK,YAAc,GACnB,KAAK,MAAQ,KAEbjE,EAAQ,UAAU,KAAK,WAAW,aAAc,OAAO,SAAS,SAAU7H,EAAA,EAC1E,KAAK,UAAU,QAASiW,EAAU,CAAC,CAAC,KAAAL,EAAM,OAAAE,CAAA,IAAY,CACpD,KAAK,SAAW,IAAIH,GAAS,KAAK,GAAIC,CAAA,EACtC,IAAIxN,EAAO,KAAK,gBAAgB,KAAM,MAAA,EACtC,KAAK,gBAAA,EACL,IAAIiR,EAAQ,KAAK,iBAAiBjR,CAAA,EAClC,KAAK,YAEFiR,EAAM,OAAS,EAChBA,EAAM,QAAQ,CAAC,CAACpP,EAAMqP,EAASC,CAAA,EAASxO,IAAM,CAC5C,KAAK,iBAAiBd,EAAMsP,EAAQC,GAAQ,CACvCzO,IAAMsO,EAAM,OAAS,GACtB,KAAK,eAAeG,EAAMpR,EAAM0N,CAAA,CAAA,CAAA,CAAA,CAAA,EAKtC,KAAK,eAAerP,EAAM2B,EAAM0N,CAAA,CAAA,CAAA,CAAA,CAKtC,iBAAiB,CAAE5J,EAAI,IAAI,KAAK,GAAI,IAAIzL,KAAYkF,GAAMA,EAAG,gBAAgBlF,CAAA,CAAA,CAAA,CAE7E,eAAe,CAAC,WAAAgZ,CAAA,EAAarR,EAAM0N,EAAO,CAGxC,GAAG,KAAK,UAAY,GAAM,KAAK,QAAU,CAAC,KAAK,OAAO,cAAA,EACpD,OAAO,KAAK,eAAe2D,EAAYrR,EAAM0N,CAAA,EAO7B5J,EAAI,0BAA0B9D,EAAM,KAAK,EAAA,EAAI,OAAOoD,GAAQ,CAC5E,IAAID,EAASC,EAAK,IAAM,KAAK,GAAG,cAAc,QAAQA,EAAK,MAAA,EACvDkO,EAAYnO,GAAUA,EAAO,aAAapJ,EAAA,EAC9C,OAAGuX,GAAYlO,EAAK,aAAarJ,GAAYuX,CAAA,EACtC,KAAK,UAAUlO,CAAA,CAAA,CAAA,EAGT,SAAW,EACrB,KAAK,QACN,KAAK,KAAK,eAAe,KAAK,CAAC,KAAM,IAAM,KAAK,eAAeiO,EAAYrR,EAAM0N,CAAA,CAAA,CAAA,EACjF,KAAK,OAAO,QAAQ,IAAA,IAEpB,KAAK,wBAAA,EACL,KAAK,eAAe2D,EAAYrR,EAAM0N,CAAA,GAGxC,KAAK,KAAK,eAAe,KAAK,CAAC,KAAM,IAAM,KAAK,eAAe2D,EAAYrR,EAAM0N,CAAA,CAAA,CAAA,CAAA,CAIrF,iBAAiB,CACf,KAAK,GAAK5J,EAAI,KAAK,KAAK,EAAA,EACxB,KAAK,GAAG,aAAaxK,GAAa,KAAK,KAAK,EAAA,CAAA,CAG9C,eAAeoU,EAAO,CACpBA,EAAO,QAAQ,CAAC,CAACzM,EAAOyO,CAAA,IAAa,CACnC,OAAO,cAAc,IAAI,YAAY,YAAYzO,IAAS,CAAC,OAAQyO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAIvE,eAAe2B,EAAYrR,EAAM0N,EAAO,CACtC,KAAK,gBAAA,EACL,IAAI6D,EAAQ,IAAItF,GAAS,KAAM,KAAK,GAAI,KAAK,GAAIjM,EAAM,IAAA,EAavD,GAZAuR,EAAM,8BAAA,EACN,KAAK,aAAaA,EAAO,EAAA,EACzB,KAAK,gBAAA,EACLzN,EAAI,IAAI,KAAK,GAAI,IAAI,KAAK,QAAQ1J,EAAA,iBAAyBA,MAAaoX,GAAU,CAChF,IAAIC,EAAO,KAAK,QAAQD,CAAA,EACrBC,GAAOA,EAAK,UAAA,CAAA,CAAA,EAGjB,KAAK,YAAc,GACnB,KAAK,eAAe/D,CAAA,EACpB,KAAK,oBAAA,EAEF2D,EAAW,CACZ,GAAI,CAAC,KAAAnU,EAAM,GAAA8B,CAAA,EAAMqS,EACjB,KAAK,WAAW,aAAarS,EAAI9B,CAAA,CAAA,CAEnC,KAAK,WAAA,EACF,KAAK,UAAY,GAAI,KAAK,mBAAA,EAC7B,KAAK,aAAA,CAAA,CAGP,wBAAwBiG,EAAQC,EAAK,CACnC,KAAK,WAAW,WAAW,oBAAqB,CAACD,EAAQC,CAAA,CAAA,EACzD,IAAIqO,EAAO,KAAK,QAAQtO,CAAA,EACpBV,EAAYgP,GAAQ3N,EAAI,UAAUX,EAAQ,KAAK,QAAQ5I,EAAA,CAAA,EAC3D,GAAGkX,GAAQ,CAACtO,EAAO,YAAYC,CAAA,GAAS,EAAEX,GAAa9E,GAAWwF,EAAO,QAASC,EAAK,OAAA,GACrF,OAAAqO,EAAK,eAAA,EACEA,CAAA,CAIX,aAAaF,EAAOG,EAAU,CAC5B,IAAIC,EAAgB,CAAA,EAChBC,EAAmB,GACnBC,EAAiB,IAAI,IAEzB,OAAAN,EAAM,MAAM,QAAShU,GAAM,CACzB,KAAK,WAAW,WAAW,cAAe,CAACA,CAAA,CAAA,EAE3C,IAAIuU,EAAU,KAAK,QAAQvU,CAAA,EACxBuU,GAAUA,EAAQ,UAAA,CAAA,CAAA,EAGvBP,EAAM,MAAM,gBAAiBQ,GAAOH,EAAmB,EAAA,EAEvDL,EAAM,OAAO,UAAW,CAACpO,EAAQC,IAAS,CAC7B,KAAK,wBAAwBD,EAAQC,CAAA,GACtCyO,EAAe,IAAI1O,EAAO,EAAA,CAAA,CAAA,EAGtCoO,EAAM,MAAM,UAAWhU,GAAM,CACxBsU,EAAe,IAAItU,EAAG,EAAA,GAAM,KAAK,QAAQA,CAAA,EAAI,UAAA,CAAA,CAAA,EAGlDgU,EAAM,MAAM,YAAchU,GAAO,CAC/B,IAAIZ,EAAM,KAAK,YAAYY,CAAA,EACxBb,GAAMC,CAAA,GAAQgV,EAAc,QAAQhV,CAAA,IAAS,IAAKgV,EAAc,KAAKhV,CAAA,EACxE,IAAI8U,EAAO,KAAK,QAAQlU,CAAA,EACxBkU,GAAQ,KAAK,YAAYA,CAAA,CAAA,CAAA,EAG3BF,EAAM,QAAA,EAKHG,GACD,KAAK,6BAA6BC,CAAA,EAG7BC,CAAA,CAGT,iBAAiB,CACf9N,EAAI,gBAAgB,KAAK,GAAI,KAAK,EAAA,EAAI,QAAQvG,GAAM,KAAK,UAAUA,CAAA,CAAA,CAAA,CAGrE,aAAaoC,EAAG,CAAE,OAAO,KAAK,KAAK,SAAS,KAAK,IAAIA,EAAA,CAErD,kBAAkBpC,EAAG,CACnB,OAAGA,EAAG,KAAO,KAAK,GACT,KAEA,KAAK,SAASA,EAAG,aAAanE,EAAA,GAAgBmE,EAAG,GAAA,CAI5D,kBAAkBoC,EAAG,CACnB,QAAQO,KAAY,KAAK,KAAK,SAC5B,QAAQ8R,KAAW,KAAK,KAAK,SAAS9R,GACpC,GAAG8R,IAAYrS,EAAK,OAAO,KAAK,KAAK,SAASO,GAAU8R,GAAS,QAAA,CAAA,CAKvE,UAAUzU,EAAG,CAEX,GAAG,CADS,KAAK,aAAaA,EAAG,EAAA,EACvB,CACR,IAAIN,EAAO,IAAIqT,GAAK/S,EAAI,KAAK,WAAY,IAAA,EACzC,YAAK,KAAK,SAAS,KAAK,IAAIN,EAAK,IAAMA,EACvCA,EAAK,KAAA,EACL,KAAK,aACE,EAAA,CAAA,CAIX,eAAe,CAAE,OAAO,KAAK,WAAA,CAE7B,QAAQgV,EAAO,CACb,KAAK,aAEF,KAAK,aAAe,IAClB,KAAK,OACN,KAAK,OAAO,QAAQ,IAAA,EAEpB,KAAK,wBAAA,EAAA,CAKX,yBAAyB,CACvB,KAAK,aAAA,EACL,KAAK,eAAe,QAAQ,CAAC,CAAChV,EAAMiV,CAAA,IAAQ,CACtCjV,EAAK,YAAA,GAAgBiV,EAAA,CAAA,CAAA,EAE3B,KAAK,eAAiB,CAAA,CAAA,CAGxB,OAAO1E,EAAME,EAAO,CAClB,GAAG,KAAK,cAAA,GAAmB,KAAK,WAAW,eAAA,EACzC,OAAO,KAAK,aAAa,KAAK,CAAC,KAAAF,EAAM,OAAAE,CAAA,CAAA,EAGvC,KAAK,SAAS,UAAUF,CAAA,EACxB,IAAIoE,EAAmB,GAKpB,KAAK,SAAS,oBAAoBpE,CAAA,EACnC,KAAK,WAAW,KAAK,2BAA4B,IAAM,CACpC1J,EAAI,eAAe,KAAK,GAAI,KAAK,SAAS,cAAc0J,CAAA,CAAA,EAC9D,QAAQ2E,GAAa,CAC3B,KAAK,eAAe,KAAK,SAAS,aAAa3E,EAAM2E,CAAA,EAAYA,CAAA,IAAaP,EAAmB,GAAA,CAAA,CAAA,CAAA,EAG/F9T,GAAQ0P,CAAA,GACjB,KAAK,WAAW,KAAK,sBAAuB,IAAM,CAChD,IAAIxN,EAAO,KAAK,gBAAgBwN,EAAM,QAAA,EAClC+D,EAAQ,IAAItF,GAAS,KAAM,KAAK,GAAI,KAAK,GAAIjM,EAAM,IAAA,EACvD4R,EAAmB,KAAK,aAAaL,EAAO,EAAA,CAAA,CAAA,EAIhD,KAAK,eAAe7D,CAAA,EACjBkE,GAAmB,KAAK,gBAAA,CAAA,CAG7B,gBAAgBpE,EAAMtQ,EAAK,CACzB,OAAO,KAAK,WAAW,KAAK,kBAAkBA,KAAS,IAAM,CAC3D,IAAI8T,EAAM,KAAK,GAAG,QAGd3Q,EAAOmN,EAAO,KAAK,SAAS,cAAcA,CAAA,EAAM,OAAO,KAAK,WAAA,EAAe,KAC3ExN,EAAO,KAAK,SAAS,SAASK,CAAA,EAClC,MAAO,IAAI2Q,KAAOhR,MAASgR,IAAA,CAAA,CAAA,CAI/B,eAAexD,EAAM7Q,EAAI,CACvB,GAAGmB,GAAQ0P,CAAA,EAAO,MAAO,GACzB,IAAIxN,EAAO,KAAK,SAAS,kBAAkBrD,CAAA,EACvC4U,EAAQ,IAAItF,GAAS,KAAM,KAAK,GAAI,KAAK,GAAIjM,EAAMrD,CAAA,EAEvD,OADoB,KAAK,aAAa4U,EAAO,EAAA,CACtC,CAGT,QAAQhU,EAAG,CAAE,OAAO,KAAK,UAAUiS,GAAS,UAAUjS,CAAA,EAAA,CAEtD,QAAQA,EAAG,CACT,GAAGiS,GAAS,UAAUjS,CAAA,GAAO,CAACA,EAAG,aAAe,OAChD,IAAI6U,EAAW7U,EAAG,aAAa,YAAYnD,IAAA,GAAemD,EAAG,aAAa,KAAK,QAAQnD,EAAA,CAAA,EACvF,GAAGgY,GAAY,CAAC,KAAK,YAAY7U,CAAA,EAAM,OACvC,IAAIkS,EAAY,KAAK,WAAW,iBAAiB2C,CAAA,EAEjD,GAAG3C,EAAU,CACPlS,EAAG,IAAKjB,EAAS,uBAAuB8V,iDAAyD7U,CAAA,EACrG,IAAIkU,EAAO,IAAIjC,GAAS,KAAMjS,EAAIkS,CAAA,EAClC,YAAK,UAAUD,GAAS,UAAUiC,EAAK,EAAA,GAAOA,EACvCA,CAAA,MACCW,IAAa,MACrB9V,EAAS,2BAA2B8V,KAAa7U,CAAA,CAAA,CAIrD,YAAYkU,EAAK,CACfA,EAAK,YAAA,EACLA,EAAK,YAAA,EACL,OAAO,KAAK,UAAUjC,GAAS,UAAUiC,EAAK,EAAA,EAAA,CAGhD,qBAAqB,CACnB,KAAK,aAAa,QAAQ,CAAC,CAAC,KAAAjE,EAAM,OAAAE,CAAA,IAAY,KAAK,OAAOF,EAAME,CAAA,CAAA,EAChE,KAAK,aAAe,CAAA,CAAA,CAGtB,UAAUzM,EAAOoR,EAAG,CAClB,KAAK,WAAW,UAAU,KAAK,QAASpR,EAAO5C,GAAQ,CAClD,KAAK,cAAA,EACN,KAAK,KAAK,eAAe,KAAK,CAAC,KAAM,IAAMgU,EAAGhU,CAAA,CAAA,CAAA,EAE9CgU,EAAGhU,CAAA,CAAA,CAAA,CAAA,CAKT,aAAa,CAGX,KAAK,WAAW,UAAU,KAAK,QAAS,OAAS0S,GAAY,CAC3D,KAAK,UAAU,SAAUA,EAAS,CAAC,CAAC,KAAAvD,EAAM,OAAAE,CAAA,IAAY,KAAK,OAAOF,EAAME,CAAA,CAAA,CAAA,CAAA,EAE1E,KAAK,UAAU,WAAY,CAAC,CAAC,GAAA1O,EAAI,MAAAM,CAAA,IAAW,KAAK,WAAW,CAAC,GAAAN,EAAI,MAAAM,CAAA,CAAA,CAAA,EACjE,KAAK,UAAU,aAAegT,GAAU,KAAK,YAAYA,CAAA,CAAA,EACzD,KAAK,UAAU,gBAAkBA,GAAU,KAAK,eAAeA,CAAA,CAAA,EAC/D,KAAK,QAAQ,QAAQrW,GAAU,KAAK,QAAQA,CAAA,CAAA,EAC5C,KAAK,QAAQ,QAAQA,GAAU,KAAK,QAAQA,CAAA,CAAA,CAAA,CAG9C,oBAAoB,CAClB,QAAQ0D,KAAM,KAAK,KAAK,SAAS,KAAK,IACpC,KAAK,aAAaA,CAAA,EAAI,QAAA,CAAA,CAI1B,eAAe2S,EAAM,CACnB,GAAI,CAAC,GAAAtT,EAAI,KAAA9B,EAAM,MAAAoC,CAAA,EAASgT,EACpBjN,EAAM,KAAK,UAAUrG,CAAA,EACzB,KAAK,WAAW,gBAAgBqG,EAAKnI,EAAMoC,CAAA,CAAA,CAG7C,YAAYgT,EAAM,CAChB,GAAI,CAAC,GAAAtT,EAAI,KAAA9B,CAAA,EAAQoV,EACjB,KAAK,KAAO,KAAK,UAAUtT,CAAA,EAC3B,KAAK,WAAW,aAAaA,EAAI9B,CAAA,CAAA,CAGnC,UAAU8B,EAAG,CACX,OAAOA,EAAG,WAAW,GAAA,EAAO,GAAG,OAAO,SAAS,aAAa,OAAO,SAAS,OAAOA,IAAOA,CAAA,CAG5F,WAAW,CAAC,GAAAA,EAAI,MAAAM,CAAA,EAAO,CAAE,KAAK,WAAW,SAASN,EAAIM,CAAA,CAAA,CAEtD,aAAa,CAAE,OAAO,KAAK,SAAA,CAE3B,KAAKrB,EAAS,CACR,KAAK,SACP,KAAK,aAAe,KAAK,WAAW,gBAAgB,CAAC,GAAI,KAAK,KAAM,KAAM,SAAA,CAAA,GAE5E,KAAK,aAAe,IAAMA,GAAYA,EAAS,KAAK,SAAA,EACpD,KAAK,WAAW,SAAS,KAAM,CAAC,QAAS,EAAA,EAAQ,IACxC,KAAK,QAAQ,KAAA,EACjB,QAAQ,KAAMsU,GAAQ,CAAC,KAAK,YAAA,GAAiB,KAAK,OAAOA,CAAA,CAAA,EACzD,QAAQ,QAASlU,GAAQ,CAAC,KAAK,YAAA,GAAiB,KAAK,YAAYA,CAAA,CAAA,EACjE,QAAQ,UAAW,IAAM,CAAC,KAAK,YAAA,GAAiB,KAAK,YAAY,CAAC,OAAQ,SAAA,CAAA,CAAA,CAAA,CAAA,CAIjF,YAAYA,EAAK,CACf,OAAGA,EAAK,SAAW,gBAAkBA,EAAK,SAAW,SACnD,KAAK,IAAI,QAAS,IAAM,CAAC,2DAA4DA,CAAA,CAAA,EAC9E,KAAK,WAAW,CAAC,GAAI,KAAK,IAAA,CAAA,KAEhCA,EAAK,UAAYA,EAAK,iBACvB,KAAK,YAAc,GACnB,KAAK,QAAQ,MAAA,GAEZA,EAAK,SAAkB,KAAK,WAAWA,EAAK,QAAA,EAC5CA,EAAK,cAAuB,KAAK,eAAeA,EAAK,aAAA,GACxD,KAAK,IAAI,QAAS,IAAM,CAAC,iBAAkBA,CAAA,CAAA,EACpC,KAAK,WAAW,iBAAiB,IAAA,GAAA,CAG1C,QAAQpC,EAAO,CACb,GAAG,MAAK,YAAA,EACR,IAAI,KAAK,cAAA,GAAmB,SAAS,kBAAoB,UACtD,KAAK,WAAW,eAAA,GAAoBA,IAAW,QAEhD,OAAO,KAAK,WAAW,iBAAiB,IAAA,EAE1C,KAAK,mBAAA,EACL,KAAK,WAAW,kBAAkB,IAAA,EAE/B,SAAS,eAAgB,SAAS,cAAc,KAAA,EAChD,KAAK,WAAW,WAAA,GACjB,KAAK,WAAWjB,EAAA,EAAA,CAIpB,QAAQiB,EAAO,CACb,KAAK,QAAQA,CAAA,EACb,KAAK,IAAI,QAAS,IAAM,CAAC,eAAgBA,CAAA,CAAA,EACrC,KAAK,WAAW,WAAA,GAAe,KAAK,aAAA,CAAA,CAG1C,cAAc,CACT,KAAK,OAAA,GAAW6H,EAAI,cAAc,OAAQ,yBAA0B,CAAC,GAAI,KAAK,KAAM,KAAM,OAAA,CAAA,EAC7F,KAAK,WAAA,EACL,KAAK,oBAAoB7K,GAAwBE,EAAA,CAAA,CAGnD,cAAcqZ,EAAcvR,EAAOyO,EAASC,EAAU,UAAW,CAAA,EAAI,CACnE,GAAG,CAAC,KAAK,YAAA,EAAgB,OAEzB,GAAI,CAACrM,EAAK,CAAC/F,CAAA,CAAA,EAAOiV,EAAeA,EAAA,EAAiB,CAAC,KAAM,CAAA,CAAA,EACrDC,EAAgB,UAAW,CAAA,EAC/B,OAAGlV,GAAOA,EAAG,aAAa,KAAK,QAAQxE,EAAA,CAAA,IAAuB,OAC5D0Z,EAAgB,KAAK,WAAW,gBAAgB,CAAC,KAAM,UAAW,OAAQlV,CAAA,CAAA,GAGzE,OAAQmS,EAAQ,KAAS,UAAW,OAAOA,EAAQ,IAEpD,KAAK,WAAW,SAAS,KAAM,CAAC,QAAS,EAAA,EAAO,IACvC,KAAK,QAAQ,KAAKzO,EAAOyO,EAASxU,EAAA,EAAc,QAAQ,KAAMmD,GAAQ,CAC3E,IAAIqU,EAAY,KACbpP,IAAQ,MAAO,KAAK,SAASA,CAAA,EAC7BjF,EAAK,OACNqU,EAAY,KAAK,UAAU,SAAUrU,EAAK,KAAM,CAAC,CAAC,KAAAmP,EAAM,OAAAE,CAAA,IAAY,CAClE,KAAK,OAAOF,EAAME,CAAA,CAAA,CAAA,GAGnBrP,EAAK,UAAW,KAAK,WAAWA,EAAK,QAAA,EACrCA,EAAK,YAAa,KAAK,YAAYA,EAAK,UAAA,EACxCA,EAAK,eAAgB,KAAK,eAAeA,EAAK,aAAA,EACjDoU,EAAA,EACA9C,EAAQtR,EAAMqU,CAAA,CAAA,CAAA,CAAA,CAAA,CAMtB,SAASpP,EAAI,CACXQ,EAAI,IAAI,KAAK,GAAI,IAAIzL,MAAYiL,MAAS/F,GAAM,CAC9C,IAAIoV,EAAcpV,EAAG,aAAatD,EAAA,EAElCsD,EAAG,gBAAgBlF,CAAA,EAEhBkF,EAAG,aAAavD,EAAA,IAAkB,OACnCuD,EAAG,SAAW,GACdA,EAAG,gBAAgBvD,EAAA,GAElB2Y,IAAgB,OACjBpV,EAAG,SAAWoV,IAAgB,OAC9BpV,EAAG,gBAAgBtD,EAAA,GAGrBjC,GAAkB,QAAQ4H,GAAakE,EAAI,YAAYvG,EAAIqC,CAAA,CAAA,EAE3D,IAAIgT,EAAiBrV,EAAG,aAAapD,EAAA,EAClCyY,IAAmB,OACpBrV,EAAG,UAAYqV,EACfrV,EAAG,gBAAgBpD,EAAA,GAErB,IAAIiJ,EAAOU,EAAI,QAAQvG,EAAIlF,CAAA,EAC3B,GAAG+K,EAAK,CACN,IAAIqO,EAAO,KAAK,wBAAwBlU,EAAI6F,CAAA,EAC5C6I,GAAS,QAAQ1O,EAAI6F,EAAM,KAAK,WAAW,iBAAA,CAAA,EACxCqO,GAAOA,EAAK,UAAA,EACf3N,EAAI,cAAcvG,EAAIlF,CAAA,CAAA,CAAA,CAAA,CAAA,CAK5B,OAAOwa,EAAU5R,EAAM,CACrB,IAAI6R,EAAS,KAAK,MACdzP,EAAc,KAAK,QAAQnJ,EAAA,EAE/B,OAAA2Y,EAAS,QAAQtV,GAAM,CACrBA,EAAG,UAAU,IAAI,OAAO0D,WAAA,EACxB1D,EAAG,aAAalF,EAASya,CAAA,EACzB,IAAIC,EAAcxV,EAAG,aAAa8F,CAAA,EAC/B0P,IAAgB,OACbxV,EAAG,aAAapD,EAAA,GAClBoD,EAAG,aAAapD,GAA0BoD,EAAG,SAAA,EAE/CA,EAAG,UAAYwV,EAAA,CAAA,EAGZ,CAACD,EAAQD,CAAA,CAAA,CAGlB,YAAYtV,EAAG,CACb,IAAIZ,EAAMY,EAAG,cAAgBA,EAAG,aAAatF,CAAA,EAC7C,OAAO0E,EAAM,SAASA,CAAA,EAAO,IAAA,CAG/B,kBAAkBgE,EAAQkP,EAAU,CAClC,OAAGlP,EAAO,aAAa,KAAK,QAAQ,QAAA,CAAA,EAC3B,KAAK,mBAAmBkP,CAAA,EAExB,IAAA,CAIX,mBAAmBA,EAAU,CAC3B,OAAGA,EACM7R,EAAM6R,EAAU,QAAQ,IAAI5X,IAAA,EAAmBsF,GAAM,KAAK,YAAYA,CAAA,GAAO,KAAK,YAAYA,CAAA,CAAA,EAE9F,IAAA,CAIX,cAAcsS,EAAW5O,EAAOyO,EAASC,EAAQ,CAC/C,GAAG,CAAC,KAAK,YAAA,EACP,YAAK,IAAI,OAAQ,IAAM,CAAC,oDAAqD1O,EAAOyO,CAAA,CAAA,EAC7E,GAET,GAAI,CAACpM,EAAK0P,CAAA,EAAO,KAAK,OAAO,CAAA,EAAI,MAAA,EACjC,YAAK,cAAc,IAAM,CAAC1P,EAAK0P,CAAA,EAAM,QAAS,CAC5C,KAAM,OACN,MAAA/R,EACA,MAAOyO,EACP,IAAK,KAAK,mBAAmBG,CAAA,CAAA,EAC5B,CAACxR,EAAMoP,IAAUkC,EAAQlC,EAAOnK,CAAA,CAAA,EAE5BA,CAAA,CAGT,YAAY/F,EAAIwB,EAAK,CACnB,IAAIgC,EAAS,KAAK,QAAQ,QAAA,EAC1B,QAAQ4B,EAAI,EAAGA,EAAIpF,EAAG,WAAW,OAAQoF,IAAI,CAC3C,IAAIxD,EAAO5B,EAAG,WAAWoF,GAAG,KACzBxD,EAAK,WAAW4B,CAAA,IAAUhC,EAAKI,EAAK,QAAQ4B,EAAQ,EAAA,GAAOxD,EAAG,aAAa4B,CAAA,EAAA,CAEhF,OAAG5B,EAAG,QAAU,SACdwB,EAAK,MAAQxB,EAAG,MAEbA,EAAG,UAAY,SAAW5D,GAAiB,QAAQ4D,EAAG,IAAA,GAAS,GAAK,CAACA,EAAG,SACzE,OAAOwB,EAAK,OAGTA,CAAA,CAGT,UAAU+R,EAAMvT,EAAIsS,EAAWoD,EAAUlU,EAAK,CAC5C,KAAK,cAAc,IAAM,KAAK,OAAO,CAACxB,CAAA,EAAKuT,CAAA,EAAO,QAAS,CACzD,KAAAA,EACA,MAAOmC,EACP,MAAO,KAAK,YAAY1V,EAAIwB,CAAA,EAC5B,IAAK,KAAK,kBAAkBxB,EAAIsS,CAAA,CAAA,CAAA,CAAA,CAIpC,QAAQqD,EAAYrD,EAAW3S,EAAM+V,EAAUlU,EAAK,CAClD,KAAK,cAAc,IAAM,KAAK,OAAO,CAACmU,CAAA,EAAahW,CAAA,EAAO,QAAS,CACjE,KAAMA,EACN,MAAO+V,EACP,MAAO,KAAK,YAAYC,EAAYnU,CAAA,EACpC,IAAK,KAAK,kBAAkBmU,EAAYrD,CAAA,CAAA,CAAA,CAAA,CAI5C,iBAAiB7L,EAAQmP,EAAU9O,EAAUsL,EAAU,UAAW,CAAA,EAAI,CACpE,KAAK,WAAW,aAAa3L,EAAO,KAAM,CAAC/G,EAAM4S,IAAc,CAC7D5S,EAAK,cAAc,KAAM,WAAY,CACnC,MAAO+G,EAAO,aAAa/G,EAAK,QAAQnC,EAAA,CAAA,EACxC,IAAKkJ,EAAO,aAAazL,CAAA,EACzB,UAAW4a,EACX,SAAA9O,EACA,IAAKpH,EAAK,kBAAkB+G,EAAO,KAAM6L,CAAA,CAAA,EACxCF,CAAA,CAAA,CAAA,CAAA,CAIP,UAAUxN,EAAS0N,EAAWuD,EAAUH,EAAUI,EAAapV,EAAS,CACtE,IAAIqV,EACA3W,EAAMD,GAAM0W,CAAA,EAAYA,EAAW,KAAK,kBAAkBjR,EAAQ,KAAM0N,CAAA,EACxE2C,EAAe,IAAM,KAAK,OAAO,CAACrQ,EAASA,EAAQ,IAAA,EAAO,QAAA,EAC1D+N,EAAWD,GAAc9N,EAAQ,KAAM,CAAC,QAASkR,EAAY,IAAA,CAAA,EAC9DlR,EAAQ,OAASA,EAAQ,MAAM,OAAS,GACzCiC,EAAa,WAAWjC,EAAS,MAAM,KAAKA,EAAQ,KAAA,CAAA,EAEtDmR,EAAUlP,EAAa,iBAAiBjC,CAAA,EACxC,IAAIlB,EAAQ,CACV,KAAM,OACN,MAAOgS,EACP,MAAO/C,EACP,QAAAoD,EACA,IAAA3W,CAAA,EAEF,KAAK,cAAc6V,EAAc,QAASvR,EAAO5C,GAAQ,CAEvD,GADAyF,EAAI,UAAU3B,EAAS,KAAK,WAAW,QAAQ3I,EAAA,CAAA,EAC5CsK,EAAI,cAAc3B,CAAA,GAAYA,EAAQ,aAAa,sBAAA,IAA4B,MAChF,GAAGiC,EAAa,uBAAuBjC,CAAA,EAAS,OAAS,EAAE,CACzD,GAAI,CAACmB,EAAKiQ,CAAA,EAAQf,EAAA,EAClB,KAAK,YAAYrQ,EAAQ,KAAM0N,EAAWvM,EAAK3G,EAAM6W,GAAa,CAChEvV,GAAYA,EAASI,CAAA,EACrB,KAAK,sBAAsB8D,EAAQ,IAAA,CAAA,CAAA,CAAA,OAIvClE,GAAYA,EAASI,CAAA,CAAA,CAAA,CAAA,CAK3B,sBAAsBoG,EAAO,CAC3B,IAAIgP,EAAiB,KAAK,mBAAmBhP,CAAA,EAC7C,GAAGgP,EAAe,CAChB,GAAI,CAAC1B,EAAK2B,EAAMzV,CAAA,EAAYwV,EAC5B,KAAK,aAAahP,CAAA,EAClBxG,EAAA,CAAA,CAAA,CAIJ,mBAAmBwG,EAAO,CACxB,OAAO,KAAK,YAAY,KAAK,CAAC,CAAClH,EAAIoW,CAAA,IAAepW,EAAG,WAAWkH,CAAA,CAAA,CAAA,CAGlE,eAAeA,EAAQnB,EAAKrF,EAAS,CACnC,GAAG,KAAK,mBAAmBwG,CAAA,EAAU,MAAO,GAC5C,KAAK,YAAY,KAAK,CAACA,EAAQnB,EAAKrF,CAAA,CAAA,CAAA,CAGtC,aAAawG,EAAO,CAClB,KAAK,YAAc,KAAK,YAAY,OAAO,CAAC,CAAClH,EAAI+F,EAAKqQ,CAAA,IACjDpW,EAAG,WAAWkH,CAAA,GACf,KAAK,SAASnB,CAAA,EACP,IAEA,EAAA,CAAA,CAKb,eAAemB,EAAQoL,EAAWoD,EAAUtD,EAAQ,CAClD,IAAIiE,EAAgBrW,GAEX,EADWD,GAAkBC,EAAI,GAAG,KAAK,QAAQhD,EAAA,WAAsBgD,EAAG,IAAA,GACzDD,GAAkBC,EAAI,yBAA0BA,EAAG,IAAA,GAEzEsW,EAAiBtW,GACZA,EAAG,aAAa,KAAK,QAAQrD,EAAA,CAAA,EAElC4Z,EAAevW,GAAMA,EAAG,SAAW,SAEnCwW,EAAcxW,GAAM,CAAC,QAAS,WAAY,QAAA,EAAU,SAASA,EAAG,OAAA,EAEhEiV,EAAe,IAAM,CACvB,IAAIwB,EAAe,MAAM,KAAKvP,EAAO,QAAA,EACjCwP,EAAWD,EAAa,OAAOH,CAAA,EAC/BK,EAAUF,EAAa,OAAOF,CAAA,EAAc,OAAOF,CAAA,EACnDO,EAASH,EAAa,OAAOD,CAAA,EAAa,OAAOH,CAAA,EAErD,OAAAM,EAAQ,QAAQE,GAAU,CACxBA,EAAO,aAAana,GAAcma,EAAO,QAAA,EACzCA,EAAO,SAAW,EAAA,CAAA,EAEpBD,EAAO,QAAQrS,GAAS,CACtBA,EAAM,aAAa9H,GAAc8H,EAAM,QAAA,EACvCA,EAAM,SAAW,GACdA,EAAM,QACPA,EAAM,aAAa7H,GAAc6H,EAAM,QAAA,EACvCA,EAAM,SAAW,GAAA,CAAA,EAGrB2C,EAAO,aAAa,KAAK,QAAQ1L,EAAA,EAAmB,EAAA,EAC7C,KAAK,OAAO,CAAC0L,CAAA,EAAQ,OAAOwP,CAAA,EAAU,OAAOC,CAAA,EAAS,OAAOC,CAAA,EAAS,QAAA,CAAA,EAG3ExX,EAAM,KAAK,kBAAkB8H,EAAQoL,CAAA,EACzC,GAAGzL,EAAa,qBAAqBK,CAAA,EAAQ,CAC3C,GAAI,CAACnB,EAAKiQ,CAAA,EAAQf,EAAA,EAClB,OAAO,KAAK,eAAe/N,EAAQnB,EAAK,IAAM,KAAK,eAAemB,EAAQoL,EAAWoD,EAAUtD,CAAA,CAAA,CAAA,SACvFvL,EAAa,wBAAwBK,CAAA,EAAQ,OAAS,EAAE,CAChE,GAAI,CAACnB,EAAK0P,CAAA,EAAOR,EAAA,EACb6B,EAAc,IAAM,CAAC/Q,EAAK0P,CAAA,EAC9B,KAAK,YAAYvO,EAAQoL,EAAWvM,EAAK3G,EAAM6W,GAAa,CAC1D,IAAItD,EAAWD,GAAcxL,EAAQ,CAAA,CAAA,EACrC,KAAK,cAAc4P,EAAa,QAAS,CACvC,KAAM,OACN,MAAOpB,EACP,MAAO/C,EACP,IAAAvT,CAAA,EACCgT,CAAA,CAAA,CAAA,CAAA,KAEA,CACL,IAAIO,EAAWD,GAAcxL,CAAA,EAC7B,KAAK,cAAc+N,EAAc,QAAS,CACxC,KAAM,OACN,MAAOS,EACP,MAAO/C,EACP,IAAAvT,CAAA,EACCgT,CAAA,CAAA,CAAA,CAIP,YAAYlL,EAAQoL,EAAWvM,EAAK3G,EAAKsI,EAAW,CAClD,IAAIqP,EAAoB,KAAK,UACzBC,EAAWnQ,EAAa,iBAAiBK,CAAA,EACzC+P,EAA0BD,EAAS,OAGvCA,EAAS,QAAQpS,GAAW,CAC1B,IAAIsS,EAAW,IAAIrQ,EAAajC,EAAS,KAAM,IAAM,CACnDqS,IACGA,IAA4B,GAAIvP,EAAA,CAAA,CAAA,EAGrC,KAAK,UAAU9C,GAAWsS,EAC1B,IAAItW,EAAUsW,EAAS,QAAA,EAAU,IAAI3Y,GAASA,EAAM,mBAAA,CAAA,EAEhD4T,EAAU,CACZ,IAAKvN,EAAQ,aAAa5J,CAAA,EAC1B,QAAA4F,EACA,IAAK,KAAK,kBAAkBgE,EAAQ,KAAM0N,CAAA,CAAA,EAG5C,KAAK,IAAI,SAAU,IAAM,CAAC,4BAA6BH,CAAA,CAAA,EAEvD,KAAK,cAAc,KAAM,eAAgBA,EAASrR,GAAQ,CAExD,GADA,KAAK,IAAI,SAAU,IAAM,CAAC,yBAA0BA,CAAA,CAAA,EACjDA,EAAK,MAAM,CACZ,KAAK,SAASiF,CAAA,EACd,GAAI,CAACoR,EAAWzY,CAAA,EAAUoC,EAAK,MAC/B,KAAK,IAAI,SAAU,IAAM,CAAC,mBAAmBqW,IAAazY,CAAA,CAAA,CAAA,KACrD,CACL,IAAImC,EAAWH,GAAa,CAC1B,KAAK,QAAQ,QAAQ,IAAM,CACtB,KAAK,YAAcqW,GAAoBrW,EAAA,CAAA,CAAA,CAAA,EAG9CwW,EAAS,kBAAkBpW,EAAMD,EAAS,KAAK,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAMvD,gBAAgBe,EAAMwV,EAAa,CACjC,IAAIR,EAASrQ,EAAI,iBAAiB,KAAK,EAAA,EAAI,OAAOvG,GAAMA,EAAG,OAAS4B,CAAA,EACjEgV,EAAO,SAAW,EAAI7X,EAAS,gDAAgD6C,IAAA,EAC1EgV,EAAO,OAAS,EAAI7X,EAAS,uDAAuD6C,IAAA,EACrF2E,EAAI,cAAcqQ,EAAO,GAAI7b,GAAmB,CAAC,MAAOqc,CAAA,CAAA,CAAA,CAGjE,iBAAiB9S,EAAMsP,EAAQlT,EAAS,CACtC,KAAK,WAAW,aAAa4D,EAAM,CAAC5E,EAAM4S,IAAc,CACtD,IAAI/N,EAAQD,EAAK,SAAS,GACtBoR,EAAWpR,EAAK,aAAa,KAAK,QAAQnH,EAAA,CAAA,GAAsBmH,EAAK,aAAa,KAAK,QAAQ,QAAA,CAAA,EACnG5E,EAAK,UAAU6E,EAAO+N,EAAWsB,EAAQ8B,EAAUnR,EAAO7D,CAAA,CAAA,CAAA,CAAA,CAI9D,cAAcuS,EAAMoE,EAAU3W,EAAS,CACrC,IAAI4W,EAAU,KAAK,WAAW,eAAerE,CAAA,EACzCsE,EAASF,EAAW,IAAM,KAAK,OAAO,CAACA,CAAA,EAAW,OAAA,EAAW,KAEjE,KAAK,cAAcE,EAAQ,aAAc,CAAC,IAAKtE,CAAA,EAAOnS,GAAQ,CACzDA,EAAK,cACN,KAAK,WAAW,YAAYmS,EAAM,KAAMvS,EAAU4W,CAAA,GAE/C,KAAK,WAAW,kBAAkBA,CAAA,IACnC,KAAK,KAAOrE,GAEd,KAAK,oBAAA,EACLvS,GAAYA,EAAS4W,CAAA,EAAA,CAAA,EAEtB,QAAQ,UAAW,IAAM,KAAK,WAAW,SAAS,OAAO,SAAS,IAAA,CAAA,CAAA,CAGvE,iBAAiB7U,EAAK,CACpB,GAAG,KAAK,YAAc,EAAI,MAAO,CAAA,EAEjC,IAAI+U,EAAY,KAAK,QAAQ,QAAA,EACzB9U,EAAW,SAAS,cAAc,UAAA,EACtC,OAAAA,EAAS,UAAYD,EAGnB8D,EAAI,IAAI,KAAK,GAAI,QAAQiR,IAAA,EACtB,OAAOlT,GAAQA,EAAK,IAAM,KAAK,YAAYA,CAAA,CAAA,EAC3C,OAAOA,GAAQA,EAAK,SAAS,OAAS,CAAA,EACtC,OAAOA,GAAQA,EAAK,aAAa,KAAK,QAAQnH,EAAA,CAAA,IAAuB,QAAA,EACrE,IAAImH,GAAQ,CACX,IAAIqP,EAAUjR,EAAS,QAAQ,cAAc,YAAY4B,EAAK,QAAQkT,MAAclT,EAAK,aAAakT,CAAA,KAAA,EACtG,OAAG7D,EACM,CAACrP,EAAMqP,EAAS,KAAK,YAAYA,CAAA,CAAA,EAEjC,CAACrP,EAAM,KAAM,IAAA,CAAA,CAAA,EAGvB,OAAO,CAAC,CAACA,EAAMqP,EAASC,CAAA,IAAYD,CAAA,CAAA,CAI3C,6BAA6BS,EAAc,CACzC,IAAIqD,EAAkBrD,EAAc,OAAOhV,GAClCmH,EAAI,sBAAsB,KAAK,GAAInH,CAAA,EAAK,SAAW,CAAA,EAEzDqY,EAAgB,OAAS,IAC1B,KAAK,YAAY,KAAK,GAAGA,CAAA,EAEzB,KAAK,cAAc,KAAM,oBAAqB,CAAC,KAAMA,CAAA,EAAkB,IAAM,CAG3E,KAAK,YAAc,KAAK,YAAY,OAAOrY,GAAOqY,EAAgB,QAAQrY,CAAA,IAAS,EAAA,EAInF,IAAIsY,EAAwBD,EAAgB,OAAOrY,GAC1CmH,EAAI,sBAAsB,KAAK,GAAInH,CAAA,EAAK,SAAW,CAAA,EAGzDsY,EAAsB,OAAS,GAChC,KAAK,cAAc,KAAM,iBAAkB,CAAC,KAAMA,CAAA,EAAyB5W,GAAS,CAClF,KAAK,SAAS,UAAUA,EAAK,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAOvC,YAAYd,EAAG,CACb,OAAOA,EAAG,aAAanE,EAAA,IAAmB,KAAK,IAC7C4E,EAAMT,EAAG,QAAQzD,CAAA,EAAoB+F,GAAQA,EAAK,EAAA,IAAQ,KAAK,EAAA,CAGnE,WAAWgC,EAAMgO,EAAWoD,EAAS,CACnCnP,EAAI,WAAWjC,EAAMjI,GAAmB,EAAA,EACxC,KAAK,WAAW,kBAAkB,IAAA,EAClC,KAAK,eAAeiI,EAAMgO,EAAWoD,EAAU,IAAM,CACnD,KAAK,WAAW,6BAAA,CAAA,CAAA,CAAA,CAIpB,QAAQ/V,EAAK,CAAE,OAAO,KAAK,WAAW,QAAQA,CAAA,CAAA,CAAA,EC15BhDgY,GAAA,KAAgC,CAC9B,YAAY7P,EAAK8P,EAAW5S,EAAO,CAAA,EAAG,CAEpC,GADA,KAAK,SAAW,GACb,CAAC4S,GAAaA,EAAU,YAAY,OAAS,SAC9C,MAAM,IAAI,MAAM;;;;;;OAAA,EAQlB,KAAK,OAAS,IAAIA,EAAU9P,EAAK9C,CAAA,EACjC,KAAK,cAAgBA,EAAK,eAAiBtH,GAC3C,KAAK,KAAOsH,EACZ,KAAK,OAASpF,GAAQoF,EAAK,QAAU,CAAA,CAAA,EACrC,KAAK,WAAaA,EAAK,WACvB,KAAK,kBAAoBA,EAAK,UAAY,CAAA,EAC1C,KAAK,SAAW,OAAO,OAAOlF,GAAM/B,EAAA,EAAWiH,EAAK,UAAY,CAAA,CAAA,EAChE,KAAK,cAAgB,KACrB,KAAK,WAAa,KAClB,KAAK,SAAW,GAChB,KAAK,KAAO,KACZ,KAAK,QAAU,EACf,KAAK,MAAQ,CAAA,EACb,KAAK,KAAO,OAAO,SAAS,KAC5B,KAAK,YAAc,KACnB,KAAK,gBAAkBlF,GAAM,OAAO,QAAA,EACpC,KAAK,MAAQkF,EAAK,OAAS,CAAA,EAC3B,KAAK,UAAYA,EAAK,WAAa,CAAA,EACnC,KAAK,cAAgBA,EAAK,eAAiBxH,GAC3C,KAAK,aAAewH,EAAK,cAAgB,OAAO,aAChD,KAAK,eAAiBA,EAAK,gBAAkB,OAAO,eACpD,KAAK,oBAAsB,GAC3B,KAAK,aAAe,OAAO,OAAO,CAAC,YAAapF,GAAA,EAAW,kBAAmBA,GAAA,CAAA,EAAYoF,EAAK,KAAO,CAAA,CAAA,EACtG,OAAO,iBAAiB,WAAY6S,GAAM,CACxC,KAAK,SAAW,EAAA,CAAA,EAElB,KAAK,OAAO,OAAO,IAAM,CACpB,KAAK,WAAA,GAEN,OAAO,SAAS,OAAA,CAAA,CAAA,CAAA,CAOtB,kBAAkB,CAAE,OAAO,KAAK,eAAe,QAAQxa,EAAA,IAAoB,MAAA,CAE3E,gBAAgB,CAAE,OAAO,KAAK,eAAe,QAAQD,EAAA,IAAkB,MAAA,CAEvE,aAAa,CAAE,KAAK,eAAe,QAAQA,GAAc,MAAA,CAAA,CAEzD,iBAAiB,CAAE,KAAK,eAAe,QAAQC,GAAgB,MAAA,CAAA,CAE/D,cAAc,CAAE,KAAK,eAAe,WAAWD,EAAA,CAAA,CAE/C,kBAAkB,CAAE,KAAK,eAAe,WAAWC,EAAA,CAAA,CAEnD,iBAAiBya,EAAa,CAC5B,KAAK,YAAA,EACL,QAAQ,IAAI,yGAAA,EACZ,KAAK,eAAe,QAAQxa,GAAoBwa,CAAA,CAAA,CAGlD,mBAAmB,CAAE,KAAK,eAAe,WAAWxa,EAAA,CAAA,CAEpD,eAAe,CACb,IAAIgG,EAAM,KAAK,eAAe,QAAQhG,EAAA,EACtC,OAAOgG,EAAM,SAASA,CAAA,EAAO,IAAA,CAG/B,WAAW,CAAE,OAAO,KAAK,MAAA,CAEzB,SAAS,CACP,IAAIyU,EAAY,IAAM,CACjB,KAAK,cAAA,IACN,KAAK,mBAAA,EACL,KAAK,OAAO,QAAA,EAAA,EAGb,CAAC,WAAY,SAAU,aAAA,EAAe,QAAQ,SAAS,UAAA,GAAe,EACvEA,EAAA,EAEA,SAAS,iBAAiB,mBAAoB,IAAMA,EAAA,CAAA,CAAA,CAIxD,WAAWrX,EAAS,CAAE,KAAK,OAAO,WAAWA,CAAA,CAAA,CAI7C,WAAWf,EAAMoP,EAAK,CAAE,KAAK,aAAapP,GAAM,GAAGoP,CAAA,CAAA,CAEnD,KAAKnN,EAAMR,EAAK,CACd,GAAG,CAAC,KAAK,iBAAA,GAAsB,CAAC,QAAQ,KAAO,OAAOA,EAAA,EACtD,QAAQ,KAAKQ,CAAA,EACb,IAAIoW,EAAS5W,EAAA,EACb,eAAQ,QAAQQ,CAAA,EACToW,CAAA,CAGT,IAAItY,EAAMC,EAAM0T,EAAY,CAC1B,GAAG,KAAK,WAAW,CACjB,GAAI,CAACpU,EAAKC,CAAA,EAAOmU,EAAA,EACjB,KAAK,WAAW3T,EAAMC,EAAMV,EAAKC,CAAA,CAAA,SACzB,KAAK,eAAA,EAAiB,CAC9B,GAAI,CAACD,EAAKC,CAAA,EAAOmU,EAAA,EACjB5T,GAAMC,EAAMC,EAAMV,EAAKC,CAAA,CAAA,CAAA,CAI3B,UAAU+Y,EAASvU,EAAOoR,EAAG,CAC3BmD,EAAQ,GAAGvU,EAAOsR,GAAQ,CACxB,IAAIkD,EAAU,KAAK,cAAA,EACfA,GAGF,QAAQ,IAAI,cAAcA,sCAAA,EAC1B,WAAW,IAAMpD,EAAGE,CAAA,EAAOkD,CAAA,GAH3BpD,EAAGE,CAAA,CAGwB,CAAA,CAAA,CAKjC,SAAStV,EAAMsF,EAAMmT,EAAK,CACxB,IAAID,EAAU,KAAK,cAAA,EACfE,EAAe1Y,EAAK,UACxB,GAAG,CAACwY,EACF,OAAGlT,EAAK,QACCmT,EAAA,EAAO,QAAQ,UAAW,IAAM,CAClCzY,EAAK,YAAc0Y,GAAgB,CAAC1Y,EAAK,YAAA,GAC1C,KAAK,iBAAiBA,EAAM,IAAM,CAChC,KAAK,IAAIA,EAAM,UAAW,IAAM,CAAC,6FAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAKhCyY,EAAA,EAIX,QAAQ,IAAI,cAAcD,sCAAA,EAC1B,IAAIG,EAAW,CACb,SAAU,CAAA,EACV,QAAQ1Y,EAAMmV,EAAG,CAAE,KAAK,SAAS,KAAK,CAACnV,EAAMmV,CAAA,CAAA,CAAA,CAAA,EAE/C,kBAAW,IAAM,CACZpV,EAAK,YAAA,GACR2Y,EAAS,SAAS,OAAO,CAACtV,EAAK,CAACpD,EAAMmV,CAAA,IAAQ/R,EAAI,QAAQpD,EAAMmV,CAAA,EAAKqD,EAAA,CAAA,CAAA,EACpED,CAAA,EACIG,CAAA,CAGT,iBAAiB3Y,EAAM4Y,EAAI,CACzB5Y,EAAK,QAAA,EACL,KAAK,WAAA,EACL,GAAI,CAAC6Y,EAAOC,CAAA,EAASje,GACjBke,EAAU,KAAK,MAAM,KAAK,OAAA,GAAYD,EAAQD,EAAQ,EAAA,EAAMA,EAC5DG,EAAQxW,EAAQ,YAAY,KAAK,aAAc,OAAO,SAAS,SAAU7H,GAAqB,EAAGse,GAASA,EAAQ,CAAA,EACtHL,EAAMA,EAAA,EAAQ,KAAK,IAAI5Y,EAAM,OAAQ,IAAM,CAAC,eAAegZ,uBAAA,CAAA,EACxDA,EAAQpe,KACT,KAAK,IAAIoF,EAAM,OAAQ,IAAM,CAAC,YAAYpF,gDAAA,CAAA,EAC1Cme,EAAUje,IAEZ,WAAW,IAAM,CACZ,KAAK,eAAA,EACN,OAAO,SAAW,KAAK,YAEvB,OAAO,SAAS,OAAA,CAAA,EAEjBie,CAAA,CAAA,CAGL,iBAAiB7W,EAAK,CACpB,OAAOA,GAAQA,EAAK,WAAW,UAAA,EAAcmG,GAAMnG,EAAK,MAAM,GAAA,EAAK,IAAM,KAAK,MAAMA,EAAA,CAGtF,YAAY,CAAE,OAAO,KAAK,QAAA,CAE1B,aAAa,CAAE,OAAO,KAAK,OAAO,YAAA,CAAA,CAElC,kBAAkB,CAAE,OAAO,KAAK,aAAA,CAEhC,QAAQjC,EAAK,CAAE,MAAO,GAAG,KAAK,iBAAA,IAAqBA,GAAA,CAEnD,QAAQiZ,EAAO/F,EAAO,CAAE,OAAO,KAAK,OAAO,QAAQ+F,EAAO/F,CAAA,CAAA,CAE1D,eAAe,CACb,IAAIgG,EAAa,GACjB,OAAAtS,EAAI,IAAI,SAAU,GAAGhK,UAA0BV,OAAmBid,GAAU,CAC1E,GAAG,CAAC,KAAK,YAAYA,EAAO,EAAA,EAAI,CAC9B,IAAIpZ,EAAO,KAAK,YAAYoZ,CAAA,EAC5BpZ,EAAK,QAAQ,KAAK,QAAA,CAAA,EAClBA,EAAK,KAAA,EACFoZ,EAAO,aAAahd,EAAA,IAAY,KAAK,KAAO4D,EAAA,CAEjDmZ,EAAa,EAAA,CAAA,EAERA,CAAA,CAGT,SAASpX,EAAIM,EAAM,CACjB,KAAK,WAAA,EACLG,EAAQ,SAAST,EAAIM,CAAA,CAAA,CAGvB,YAAYkR,EAAMlR,EAAOrB,EAAW,KAAM4W,EAAU,KAAK,eAAerE,CAAA,EAAM,CAC5E,IAAI8F,EAAY,KAAK,KAAK,GACtBC,EAAYzS,EAAI,UAAUwS,EAAW,EAAA,EACzC,KAAK,KAAK,WAAW,KAAK,aAAA,EAC1B,KAAK,KAAK,QAAA,EAEV,KAAK,KAAO,KAAK,YAAYC,EAAWjX,CAAA,EACxC,KAAK,KAAK,YAAYkR,CAAA,EACtB,KAAK,KAAK,KAAKgG,GAAa,CACvBA,IAAc,GAAK,KAAK,kBAAkB3B,CAAA,IAC3CyB,EAAU,YAAYC,CAAA,EACtBtY,GAAYA,EAAA,EAAA,CAAA,CAAA,CAKlB,UAAUV,EAAG,CAAE,OAAOA,EAAG,cAAgBA,EAAG,aAAa1D,CAAA,IAAiB,IAAA,CAE1E,YAAY0D,EAAI+B,EAAM,CACpB,IAAIrC,EAAO,IAAIqT,GAAK/S,EAAI,KAAM,KAAM+B,CAAA,EACpC,YAAK,MAAMrC,EAAK,IAAMA,EACfA,CAAA,CAGT,MAAMwZ,EAASxY,EAAS,CACtB,IAAIhB,EAAOe,EAAMyY,EAAQ,QAAQ3c,CAAA,EAAoByD,GAAM,KAAK,YAAYA,CAAA,CAAA,EACzEN,GAAOgB,EAAShB,CAAA,CAAA,CAGrB,aAAawZ,EAASxY,EAAS,CAC7B,KAAK,MAAMwY,EAASxZ,GAAQ,CAC1B,IAAI2S,EAAY6G,EAAQ,aAAa,KAAK,QAAQ,QAAA,CAAA,EAC/C7G,IAAc,KACf3R,EAAShB,EAAMwZ,CAAA,EAEfxZ,EAAK,cAAc2S,EAAW3R,CAAA,CAAA,CAAA,CAAA,CAKpC,YAAYV,EAAG,CACb,IAAImZ,EAASnZ,EAAG,aAAajE,EAAA,EAC7B,OAAO0E,EAAM,KAAK,YAAY0Y,CAAA,EAASC,GAAQA,EAAK,kBAAkBpZ,CAAA,CAAA,CAAA,CAGxE,YAAYoC,EAAG,CAAE,OAAO,KAAK,MAAMA,EAAA,CAEnC,iBAAiB,CACf,QAAQA,KAAM,KAAK,MACjB,KAAK,MAAMA,GAAI,QAAA,EACf,OAAO,KAAK,MAAMA,EAAA,CAItB,gBAAgBpC,EAAG,CACjB,IAAIoZ,EAAO,KAAK,YAAYpZ,EAAG,aAAajE,EAAA,CAAA,EACzCqd,GAAOA,EAAK,kBAAkBpZ,EAAG,EAAA,CAAA,CAGtC,iBAAiBoD,EAAO,CACtB,GAAG,KAAK,gBAAkBA,EAAS,OACnC,KAAK,cAAgBA,EACrB,IAAIiW,EAAS,IAAM,CACdjW,IAAW,KAAK,gBAAgB,KAAK,cAAgB,MACxDA,EAAO,oBAAoB,UAAW,IAAA,EACtCA,EAAO,oBAAoB,WAAY,IAAA,CAAA,EAEzCA,EAAO,iBAAiB,UAAWiW,CAAA,EACnCjW,EAAO,iBAAiB,WAAYiW,CAAA,CAAA,CAGtC,kBAAkB,CAChB,OAAG,SAAS,gBAAkB,SAAS,KAC9B,KAAK,eAAiB,SAAS,cAG/B,SAAS,eAAiB,SAAS,IAAA,CAI9C,kBAAkB3Z,EAAK,CAClB,KAAK,YAAcA,EAAK,YAAY,KAAK,UAAA,IAC1C,KAAK,WAAa,KAAA,CAItB,8BAA8B,CACzB,KAAK,YAAc,KAAK,aAAe,SAAS,MACjD,KAAK,WAAW,MAAA,CAAA,CAIpB,mBAAmB,CACjB,KAAK,WAAa,KAAK,iBAAA,EACpB,KAAK,aAAe,SAAS,MAAO,KAAK,WAAW,KAAA,CAAA,CAGzD,oBAAoB,CACf,KAAK,sBAER,KAAK,oBAAsB,GAC3B,SAAS,KAAK,iBAAiB,QAAS,UAAW,CAAA,CAAA,EACnD,OAAO,iBAAiB,WAAY,GAAK,CACpC,EAAE,YACH,KAAK,UAAA,EAAY,WAAA,EACjB,KAAK,gBAAgB,CAAC,GAAI,OAAO,SAAS,KAAM,KAAM,UAAA,CAAA,EACtD,OAAO,SAAS,OAAA,EAAA,EAEjB,EAAA,EACH,KAAK,QAAA,EACL,KAAK,WAAA,EACL,KAAK,UAAA,EACL,KAAK,KAAK,CAAC,MAAO,QAAS,QAAS,SAAA,EAAY,CAAC,EAAG6T,EAAM7T,EAAM0D,EAAQkP,EAAWoD,EAAU4D,IAAe,CAC1G,IAAIC,EAAWnW,EAAO,aAAa,KAAK,QAAQnG,EAAA,CAAA,EAC5Cuc,EAAa,EAAE,KAAO,EAAE,IAAI,YAAA,EAC7BD,GAAYA,EAAS,YAAA,IAAkBC,GAE1C9Z,EAAK,QAAQ0D,EAAQkP,EAAWiB,EAAMmC,EAAUtE,GAAA,CAAC,IAAK,EAAE,KAAQ,KAAK,UAAUmC,EAAM,EAAGnQ,CAAA,EAAA,CAAA,CAAA,EAE1F,KAAK,KAAK,CAAC,KAAM,WAAY,MAAO,SAAA,EAAY,CAAC,EAAGmQ,EAAM7T,EAAM2X,EAAU/E,EAAWoD,EAAUrD,IAAc,CACvGA,GACF3S,EAAK,UAAU6T,EAAM8D,EAAU/E,EAAWoD,EAAU,KAAK,UAAUnC,EAAM,EAAG8D,CAAA,CAAA,CAAA,CAAA,EAGhF,KAAK,KAAK,CAAC,KAAM,OAAQ,MAAO,OAAA,EAAU,CAAC,EAAG9D,EAAM7T,EAAM2X,EAAU/E,EAAWoD,EAAUrD,IAAc,CAElGA,GAAa,CAACA,IAAc,UAC7B3S,EAAK,UAAU6T,EAAM8D,EAAU/E,EAAWoD,EAAU,KAAK,UAAUnC,EAAM,EAAG8D,CAAA,CAAA,CAAA,CAAA,EAGhF,OAAO,iBAAiB,WAAY,GAAK,EAAE,eAAA,CAAA,EAC3C,OAAO,iBAAiB,OAAQ,GAAK,CACnC,EAAE,eAAA,EACF,IAAIoC,EAAehZ,EAAMV,GAAkB,EAAE,OAAQ,KAAK,QAAQ5E,EAAA,CAAA,EAAmBue,GAC5EA,EAAW,aAAa,KAAK,QAAQve,EAAA,CAAA,CAAA,EAE1Cwe,EAAaF,GAAgB,SAAS,eAAeA,CAAA,EACrDrS,EAAQ,MAAM,KAAK,EAAE,aAAa,OAAS,CAAA,CAAA,EAC5C,CAACuS,GAAcA,EAAW,UAAYvS,EAAM,SAAW,GAAK,EAAEuS,EAAW,iBAAiB,YAE7F9S,EAAa,WAAW8S,EAAYvS,CAAA,EACpCuS,EAAW,cAAc,IAAI,MAAM,QAAS,CAAC,QAAS,EAAA,CAAA,CAAA,EAAA,CAAA,EAExD,KAAK,GAAG5e,GAAmB,GAAK,CAC9B,IAAI6e,EAAe,EAAE,OACrB,GAAG,CAACrT,EAAI,cAAcqT,CAAA,EAAgB,OACtC,IAAIxS,EAAQ,MAAM,KAAK,EAAE,OAAO,OAAS,CAAA,CAAA,EAAI,OAAOG,GAAKA,aAAa,MAAQA,aAAa,IAAA,EAC3FV,EAAa,WAAW+S,EAAcxS,CAAA,EACtCwS,EAAa,cAAc,IAAI,MAAM,QAAS,CAAC,QAAS,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAI5D,UAAUC,EAAW/a,EAAGuY,EAAS,CAC/B,IAAI3W,EAAW,KAAK,kBAAkBmZ,GACtC,OAAOnZ,EAAWA,EAAS5B,EAAGuY,CAAA,EAAY,CAAA,CAAA,CAG5C,eAAepE,EAAK,CAClB,YAAK,UACL,KAAK,YAAcA,EACZ,KAAK,OAAA,CAGd,kBAAkBqE,EAAQ,CACxB,OAAG,KAAK,UAAYA,EACX,IAEP,KAAK,KAAO,KAAK,YACjB,KAAK,YAAc,KACZ,GAAA,CAIX,SAAS,CAAE,OAAO,KAAK,IAAA,CAEvB,gBAAgB,CAAE,MAAO,CAAC,CAAC,KAAK,WAAA,CAEhC,KAAKnH,EAAQzP,EAAS,CACpB,QAAQgD,KAASyM,EAAO,CACtB,IAAI2J,EAAmB3J,EAAOzM,GAE9B,KAAK,GAAGoW,EAAkBhb,GAAK,CAC7B,IAAImB,EAAU,KAAK,QAAQyD,CAAA,EACvBqW,EAAgB,KAAK,QAAQ,UAAUrW,GAAA,EACvCsW,EAAiBlb,EAAE,OAAO,cAAgBA,EAAE,OAAO,aAAamB,CAAA,EACjE+Z,EACD,KAAK,SAASlb,EAAE,OAAQA,EAAG,IAAM,CAC/B,KAAK,aAAaA,EAAE,OAAQ,CAACY,EAAM4S,IAAc,CAC/C5R,EAAS5B,EAAG4E,EAAOhE,EAAMZ,EAAE,OAAQwT,EAAW0H,EAAgB,IAAA,CAAA,CAAA,CAAA,CAAA,EAIlEzT,EAAI,IAAI,SAAU,IAAIwT,KAAkB/Z,GAAM,CAC5C,IAAI0V,EAAW1V,EAAG,aAAa+Z,CAAA,EAC/B,KAAK,SAAS/Z,EAAIlB,EAAG,IAAM,CACzB,KAAK,aAAakB,EAAI,CAACN,EAAM4S,IAAc,CACzC5R,EAAS5B,EAAG4E,EAAOhE,EAAMM,EAAIsS,EAAWoD,EAAU,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAShE,YAAY,CACV,KAAK,UAAU,QAAS,QAAS,EAAA,EACjC,KAAK,UAAU,YAAa,gBAAiB,EAAA,CAAA,CAG/C,UAAUmE,EAAWI,EAAaC,EAAQ,CACxC,IAAIC,EAAQ,KAAK,QAAQF,CAAA,EACzB,OAAO,iBAAiBJ,EAAW/a,GAAK,CACtC,GAAG,CAAC,KAAK,YAAA,EAAgB,OACzB,IAAIsE,EAAS,KACV8W,EACD9W,EAAStE,EAAE,OAAO,QAAQ,IAAIqb,IAAA,EAAYrb,EAAE,OAASA,EAAE,OAAO,cAAc,IAAIqb,IAAA,EAEhF/W,EAASrD,GAAkBjB,EAAE,OAAQqb,CAAA,EAEvC,IAAIzE,EAAWtS,GAAUA,EAAO,aAAa+W,CAAA,EAC1C,CAACzE,IACDtS,EAAO,aAAa,MAAA,IAAY,KAAMtE,EAAE,eAAA,EAE3C,KAAK,SAASsE,EAAQtE,EAAG,IAAM,CAC7B,KAAK,aAAasE,EAAQ,CAAC1D,EAAM4S,IAAc,CAC7C5S,EAAK,UAAU,QAAS0D,EAAQkP,EAAWoD,EAAU,KAAK,UAAU,QAAS5W,EAAGsE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAGnF8W,CAAA,CAAA,CAGL,SAAS,CACP,GAAG,CAAChY,EAAQ,aAAA,EAAiB,OAC1B,QAAQ,oBAAoB,QAAQ,kBAAoB,UAC3D,IAAIkY,EAAc,KAClB,OAAO,iBAAiB,SAAUvC,GAAM,CACtC,aAAauC,CAAA,EACbA,EAAc,WAAW,IAAM,CAC7BlY,EAAQ,mBAAmBmY,GAAS,OAAO,OAAOA,EAAO,CAAC,OAAQ,OAAO,OAAA,CAAA,CAAA,CAAA,EACxE,GAAA,CAAA,CAAA,EAEL,OAAO,iBAAiB,WAAY3W,GAAS,CAC3C,GAAG,CAAC,KAAK,oBAAoB,OAAO,QAAA,EAAY,OAChD,GAAI,CAAC,KAAA6P,EAAM,GAAAnR,EAAI,KAAAgX,EAAM,OAAAkB,CAAA,EAAU5W,EAAM,OAAS,CAAA,EAC1CuP,EAAO,OAAO,SAAS,KAExB,KAAK,KAAK,YAAA,GAAkBM,IAAS,SAAWnR,IAAO,KAAK,KAAK,GAClE,KAAK,KAAK,cAAc6Q,EAAM,IAAA,EAE9B,KAAK,YAAYA,EAAM,KAAM,IAAM,CAC9BmG,GAAO,KAAK,mBAAA,EACZ,OAAOkB,GAAY,UACpB,WAAW,IAAM,CACf,OAAO,SAAS,EAAGA,CAAA,CAAA,EAClB,CAAA,CAAA,CAAA,CAAA,EAIR,EAAA,EACH,OAAO,iBAAiB,QAASxb,GAAK,CACpC,IAAIsE,EAASrD,GAAkBjB,EAAE,OAAQnE,EAAA,EACrC4Y,EAAOnQ,GAAUA,EAAO,aAAazI,EAAA,EACrC4f,EAAczb,EAAE,SAAWA,EAAE,SAAWA,EAAE,SAAW,EACzD,GAAG,CAACyU,GAAQ,CAAC,KAAK,YAAA,GAAiB,CAAC,KAAK,MAAQgH,EAAc,OAC/D,IAAItH,EAAO7P,EAAO,KACdoX,EAAYpX,EAAO,aAAavI,EAAA,EAEpC,GADAiE,EAAE,eAAA,EACC,KAAK,cAAgBmU,EAExB,GAAGM,IAAS,QACV,KAAK,iBAAiBN,EAAMuH,EAAWpX,CAAA,UAC/BmQ,IAAS,WACjB,KAAK,gBAAgBN,EAAMuH,CAAA,MAE3B,OAAM,IAAI,MAAM,YAAY7f,wCAAmD4Y,GAAA,CAAA,EAEhF,EAAA,CAAA,CAGL,gBAAgBkH,EAAM/Z,EAAS,CAC7B6F,EAAI,cAAc,OAAQ,yBAA0BkU,CAAA,EACpD,IAAIC,EAAO,IAAMnU,EAAI,cAAc,OAAQ,wBAAyBkU,CAAA,EACpE,OAAO/Z,EAAWA,EAASga,CAAA,EAAQA,CAAA,CAGrC,iBAAiBzH,EAAMuH,EAAWnD,EAAS,CACzC,KAAK,gBAAgB,CAAC,GAAIpE,EAAM,KAAM,OAAA,EAAUyH,GAAQ,CACtD,KAAK,KAAK,cAAczH,EAAMoE,EAAUC,GAAW,CACjD,KAAK,aAAarE,EAAMuH,EAAWlD,CAAA,EACnCoD,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAKN,aAAazH,EAAMuH,EAAWlD,EAAU,KAAK,eAAerE,CAAA,EAAM,CAC7D,CAAC,KAAK,kBAAkBqE,CAAA,IAE3BpV,EAAQ,UAAUsY,EAAW,CAAC,KAAM,QAAS,GAAI,KAAK,KAAK,EAAA,EAAKvH,CAAA,EAChE,KAAK,oBAAoB,OAAO,QAAA,EAAA,CAGlC,gBAAgBA,EAAMuH,EAAWzY,EAAM,CACrC,IAAIuY,EAAS,OAAO,QACpB,KAAK,gBAAgB,CAAC,GAAIrH,EAAM,KAAM,UAAA,EAAayH,GAAQ,CACzD,KAAK,YAAYzH,EAAMlR,EAAO,IAAM,CAClCG,EAAQ,UAAUsY,EAAW,CAAC,KAAM,WAAY,GAAI,KAAK,KAAK,GAAI,OAAAF,CAAA,EAAiBrH,CAAA,EACnF,KAAK,oBAAoB,OAAO,QAAA,EAChCyH,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAKN,oBAAoB,CAClBxY,EAAQ,UAAU,UAAW,CAAC,KAAM,GAAM,KAAM,QAAS,GAAI,KAAK,KAAK,EAAA,CAAA,CAAA,CAGzE,oBAAoByY,EAAY,CAC9B,GAAI,CAAC,SAAAC,EAAU,OAAAC,CAAA,EAAU,KAAK,gBAC9B,OAAGD,EAAWC,IAAWF,EAAY,SAAWA,EAAY,OACnD,IAEP,KAAK,gBAAkB7a,GAAM6a,CAAA,EACtB,GAAA,CAIX,WAAW,CACT,IAAIG,EAAa,EACjB,KAAK,GAAG,SAAUhc,GAAK,CACrB,IAAI4W,EAAW5W,EAAE,OAAO,aAAa,KAAK,QAAQ,QAAA,CAAA,EAC/C,CAAC4W,IACJ5W,EAAE,eAAA,EACFA,EAAE,OAAO,SAAW,GACpB,KAAK,aAAaA,EAAE,OAAQ,CAACY,EAAM4S,IAAc5S,EAAK,WAAWZ,EAAE,OAAQwT,EAAWoD,CAAA,CAAA,EAAA,EACrF,EAAA,EAEH,QAAQnC,IAAQ,CAAC,SAAU,OAAA,EACzB,KAAK,GAAGA,EAAMzU,GAAK,CACjB,IAAIyF,EAAQzF,EAAE,OACV4W,EAAWnR,EAAM,MAAQA,EAAM,KAAK,aAAa,KAAK,QAAQ,QAAA,CAAA,EAElE,GADG,CAACmR,GACDnR,EAAM,OAAS,UAAYA,EAAM,UAAYA,EAAM,SAAS,SAAW,OAC1E,IAAIwW,EAAoBD,EACxBA,IACA,GAAI,CAAC,GAAAE,EAAQ,KAAMC,CAAA,EAAY1U,EAAI,QAAQhC,EAAO,gBAAA,GAAqB,CAAA,EAEpEyW,IAAOD,EAAoB,GAAKxH,IAAS0H,IAE5C1U,EAAI,WAAWhC,EAAO,iBAAkB,CAAC,GAAIwW,EAAmB,KAAAxH,CAAA,CAAA,EAEhE,KAAK,SAAShP,EAAOzF,EAAG,IAAM,CAC5B,KAAK,aAAayF,EAAM,KAAM,CAAC7E,EAAM4S,IAAc,CACjD/L,EAAI,WAAWhC,EAAOrI,GAAiB,EAAA,EACnCqK,EAAI,eAAehC,CAAA,GACrB,KAAK,iBAAiBA,CAAA,EAExB7E,EAAK,UAAU6E,EAAO+N,EAAW,KAAMoD,EAAU5W,EAAE,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAGtD,EAAA,CAAA,CAIP,SAASkB,EAAI0D,EAAOhD,EAAS,CAC3B,IAAIiD,EAAc,KAAK,QAAQ7G,EAAA,EAC3B+G,EAAc,KAAK,QAAQ9G,EAAA,EAC3B6G,EAAkB,KAAK,SAAS,SAAS,SAAA,EACzCE,EAAkB,KAAK,SAAS,SAAS,SAAA,EAC7CyC,EAAI,SAASvG,EAAI0D,EAAOC,EAAaC,EAAiBC,EAAaC,EAAiBpD,CAAA,CAAA,CAGtF,cAAcA,EAAS,CACrB,KAAK,SAAW,GAChBA,EAAA,EACA,KAAK,SAAW,EAAA,CAGlB,GAAGgD,EAAOhD,EAAS,CACjB,OAAO,iBAAiBgD,EAAO5E,GAAK,CAC9B,KAAK,UAAW4B,EAAS5B,CAAA,CAAA,CAAA,CAAA,CAAA,ECpqBnC,IAAAoc,GAAmB,SAEfC,GAAY,SAAS,cAAc,yBAAyB,EAAE,aAAa,SAAS,EACpFC,GAAa,IAAIC,GAAW,QAASC,GAAQ,CAC/C,mBAAoB,KACpB,OAAQ,CAAC,YAAaH,EAAS,CACjC,CAAC,EAGD,GAAAI,QAAO,OAAO,CAAC,UAAW,CAAC,EAAG,MAAM,EAAG,YAAa,mBAAmB,CAAC,EACxE,OAAO,iBAAiB,yBAA0BC,GAAS,GAAAD,QAAO,KAAK,GAAG,CAAC,EAC3E,OAAO,iBAAiB,wBAAyBC,GAAS,GAAAD,QAAO,KAAK,CAAC,EAGvEH,GAAW,QAAQ,EAMnB,OAAO,WAAaA",
  "names": ["require_topbar", "__commonJSMin", "exports", "module", "window", "document", "lastTime", "vendors", "x", "callback", "element", "currTime", "timeToCall", "id", "canvas", "currentProgress", "showing", "progressTimerId", "fadeTimerId", "delayTimerId", "addEvent", "elem", "type", "handler", "options", "repaint", "ctx", "lineGradient", "stop", "createCanvas", "style", "topbar", "opts", "key", "delay", "loop", "to", "PolyfillEvent", "eventConstructor", "CustomEvent", "event", "params", "evt", "buildHiddenInput", "name", "value", "input", "handleClick", "element", "targetModifierKey", "to", "method", "csrf", "form", "submit", "target", "e", "phoenixLinkEvent", "message", "closure", "value", "globalSelf", "phxWindow", "global", "DEFAULT_VSN", "SOCKET_STATES", "DEFAULT_TIMEOUT", "WS_CLOSE_NORMAL", "CHANNEL_STATES", "CHANNEL_EVENTS", "TRANSPORTS", "XHR_STATES", "Push", "channel", "event", "payload", "timeout", "status", "callback", "response", "_ref", "h", "Timer", "timerCalc", "Channel", "topic", "params", "socket", "pushEvent", "reason", "ref", "bind", "onClose", "leavePush", "_event", "joinRef", "handledPayload", "eventBindings", "i", "Ajax", "method", "endPoint", "accept", "body", "ontimeout", "req", "resp", "e", "obj", "parentKey", "queryStr", "key", "paramKey", "paramVal", "url", "prefix", "arrayBufferToBase64", "buffer", "binary", "bytes", "len", "LongPoll", "code", "wasClean", "token", "messages", "msg", "opts", "contentType", "onCallerTimeout", "serializer_default", "msg", "callback", "payload", "rawPayload", "join_ref", "ref", "topic", "event", "message", "metaLength", "header", "view", "offset", "char", "combined", "buffer", "kind", "decoder", "joinRefSize", "topicSize", "eventSize", "joinRef", "data", "refSize", "CHANNEL_EVENTS", "Socket", "endPoint", "opts", "DEFAULT_TIMEOUT", "global", "LongPoll", "awaitingConnectionOnPageShow", "phxWindow", "_e", "tries", "closure", "TRANSPORTS", "DEFAULT_VSN", "Timer", "newTransport", "uri", "Ajax", "code", "reason", "params", "startTime", "onMsgRef", "error", "key", "val", "fallbackTransport", "fallbackThreshold", "established", "primaryTransport", "openRef", "errorRef", "fallback", "rtt", "WS_CLOSE_NORMAL", "SOCKET_STATES", "closeCode", "transportBefore", "establishedBefore", "channel", "c", "refs", "chanParams", "chan", "Channel", "result", "newRef", "rawMessage", "i", "dupChannel", "CONSECUTIVE_RELOADS", "MAX_RELOADS", "RELOAD_JITTER", "FAILSAFE_JITTER", "PHX_EVENT_CLASSES", "PHX_COMPONENT", "PHX_LIVE_LINK", "PHX_TRACK_STATIC", "PHX_LINK_STATE", "PHX_REF", "PHX_TRACK_UPLOADS", "PHX_UPLOAD_REF", "PHX_PREFLIGHTED_REFS", "PHX_DONE_REFS", "PHX_DROP_TARGET", "PHX_ACTIVE_ENTRY_REFS", "PHX_LIVE_FILE_UPDATED", "PHX_SKIP", "PHX_REMOVE", "PHX_PAGE_LOADING", "PHX_CONNECTED_CLASS", "PHX_DISCONNECTED_CLASS", "PHX_NO_FEEDBACK_CLASS", "PHX_ERROR_CLASS", "PHX_PARENT_ID", "PHX_MAIN", "PHX_ROOT_ID", "PHX_TRIGGER_ACTION", "PHX_FEEDBACK_FOR", "PHX_HAS_FOCUSED", "FOCUSABLE_INPUTS", "CHECKABLE_INPUTS", "PHX_HAS_SUBMITTED", "PHX_SESSION", "PHX_VIEW_SELECTOR", "PHX_STATIC", "PHX_READONLY", "PHX_DISABLED", "PHX_DISABLE_WITH", "PHX_DISABLE_WITH_RESTORE", "PHX_HOOK", "PHX_DEBOUNCE", "PHX_THROTTLE", "PHX_UPDATE", "PHX_KEY", "PHX_PRIVATE", "PHX_AUTO_RECOVER", "PHX_LV_DEBUG", "PHX_LV_PROFILE", "PHX_LV_LATENCY_SIM", "PHX_PROGRESS", "LOADER_TIMEOUT", "BEFORE_UNLOAD_LOADER_TIMEOUT", "BINDING_PREFIX", "PUSH_TIMEOUT", "DEBOUNCE_TRIGGER", "THROTTLED", "DEBOUNCE_PREV_KEY", "DEFAULTS", "DYNAMICS", "STATIC", "COMPONENTS", "EVENTS", "REPLY", "TITLE", "EntryUploader", "entry", "chunkSize", "liveSocket", "reason", "_data", "reader", "blob", "e", "logError", "chunk", "msg", "obj", "isCid", "cid", "detectDuplicateIds", "ids", "elems", "len", "debug", "view", "kind", "closure", "val", "clone", "closestPhxBinding", "el", "binding", "borderEl", "isObject", "isEqualObj", "obj1", "obj2", "isEmpty", "x", "maybe", "callback", "channelUploader", "entries", "onError", "resp", "Browser", "localStorage", "namespace", "subkey", "initial", "func", "current", "key", "newVal", "meta", "to", "currentState", "hashEl", "name", "value", "toURL", "flash", "maybeHash", "hash", "browser_default", "DOM", "id", "className", "node", "query", "array", "html", "template", "parentId", "phxUpdate", "updateTypes", "cids", "acc", "selector", "childCID", "nodes", "parent", "target", "source", "str", "titleEl", "prefix", "suffix", "event", "phxDebounce", "defaultDebounce", "phxThrottle", "defaultThrottle", "debounce", "throttle", "timeout", "trigger", "currentCycle", "newKeyDown", "prevKey", "form", "input", "cycle", "container", "phxFeedbackFor", "field", "inputEl", "eventString", "detail", "cloned", "opts", "exclude", "isIgnored", "sourceAttrs", "i", "targetAttrs", "focused", "selectionStart", "selectionEnd", "wasFocused", "selectedItem", "phxTriggerExternal", "fromEl", "toEl", "disableWith", "ref", "toRemove", "childNode", "tagName", "attrs", "retainedAttrs", "attr", "newContainer", "dom_default", "UploadEntry", "fileEl", "file", "isNew", "isActive", "LiveUploader", "progress", "uploaders", "liveUploaderFileRef", "file2", "formEl", "active", "files", "fileData", "uploadRef", "f", "newFiles", "fileInputs", "onComplete", "groupedEntries", "Hooks", "newPreflights", "url", "hooks_default", "DOMPostMorphRestorer", "containerBefore", "containerAfter", "updateType", "idsBefore", "idsAfter", "child", "elementsToModify", "previousElementId", "elementToModify", "previousElem", "elem", "elemId", "DOCUMENT_FRAGMENT_NODE", "morphAttrs", "fromNode", "toNode", "toNodeAttrs", "attrName", "attrNamespaceURI", "attrValue", "fromValue", "fromNodeAttrs", "d", "range", "NS_XHTML", "doc", "HAS_TEMPLATE_SUPPORT", "HAS_RANGE_SUPPORT", "createFragmentFromTemplate", "createFragmentFromRange", "fragment", "createFragmentFromWrap", "toElement", "compareNodeNames", "fromNodeName", "toNodeName", "fromCodeStart", "toCodeStart", "createElementNS", "namespaceURI", "moveChildren", "curChild", "nextChild", "syncBooleanAttrProp", "specialElHandlers", "parentNode", "parentName", "newValue", "firstChild", "oldValue", "selectedIndex", "optgroup", "nodeName", "ELEMENT_NODE", "DOCUMENT_FRAGMENT_NODE$1", "TEXT_NODE", "COMMENT_NODE", "noop", "defaultGetNodeKey", "morphdomFactory", "morphAttrs2", "options", "toNodeHtml", "getNodeKey", "onBeforeNodeAdded", "onNodeAdded", "onBeforeElUpdated", "onElUpdated", "onBeforeNodeDiscarded", "onNodeDiscarded", "onBeforeElChildrenUpdated", "childrenOnly", "fromNodesLookup", "keyedRemovalList", "addKeyedRemoval", "walkDiscardedChildNodes", "skipKeyedNodes", "removeNode", "indexTree", "handleNodeAdded", "nextSibling", "unmatchedFromEl", "morphEl", "cleanupFromEl", "curFromNodeChild", "curFromNodeKey", "fromNextSibling", "childrenOnly2", "toElKey", "morphChildren", "curToNodeChild", "curToNodeKey", "toNextSibling", "matchingFromEl", "outer", "curFromNodeType", "isCompatible", "onBeforeNodeAddedResult", "specialElHandler", "morphedNode", "morphedNodeType", "toNodeType", "elToRemove", "morphdom", "morphdom_esm_default", "DOMPatch", "activeElement", "fromEl2", "toEl2", "targetCID", "args", "targetContainer", "added", "updates", "appendPrependUpdates", "externalFormTriggered", "diffHTML", "prevSession", "update", "isSelect", "t", "first", "rest", "isCIDPatch", "isCIDWithSingleRoot", "diffContainer", "firstComponent", "Rendered", "diff", "reply", "events", "title", "viewId", "rendered", "onlyCids", "components", "output", "newc", "cache", "oldc", "cdiff", "ndiff", "stat", "scid", "tdiff", "targetVal", "merged", "__spreadValues", "statics", "dynamics", "dynamic", "component", "skip", "hasChildNodes", "hasChildComponents", "hasNodes", "hasComponents", "text", "span", "viewHookID", "ViewHook", "callbacks", "payload", "onReply", "phxTarget", "targetCtx", "callbackRef", "customEvent", "bypass", "serializeForm", "formData", "_index", "params", "metaKey", "View", "parentView", "href", "manifest", "onFinished", "classes", "msgCallback", "targets", "type", "rawDiff", "tag", "forms", "newForm", "newCid", "resp2", "live_patch", "phxStatic", "patch", "hookEl", "hook", "pruneCids", "destroyedCIDs", "phxChildrenAdded", "updatedHookIds", "newHook", "_el", "childId", "_child", "op", "parentCID", "hookName", "cb", "redir", "data", "refGenerator", "onLoadingDone", "hookReply", "disabledVal", "disableRestore", "elements", "newRef", "disableText", "els", "phxEvent", "keyElement", "entryRef", "forceCid", "eventTarget", "uploads", "_els", "_uploads", "awaitingSubmit", "_ref", "_callback", "filterIgnored", "filterDisables", "filterButton", "filterInput", "formElements", "disables", "buttons", "inputs", "button", "proxyRefGen", "joinCountAtUpload", "inputEls", "numFileInputsInProgress", "uploader", "entry_ref", "filesOrBlobs", "targetEl", "linkRef", "refGen", "phxChange", "willDestroyCIDs", "completelyDestroyCIDs", "LiveSocket", "phxSocket", "_e", "upperBoundMs", "doConnect", "result", "channel", "latency", "push", "oldJoinCount", "fakePush", "log", "minMs", "maxMs", "afterMs", "tries", "count", "topic", "rootsFound", "rootEl", "oldMainEl", "newMainEl", "joinCount", "childEl", "rootId", "root", "cancel", "_phxTarget", "matchKey", "pressedKey", "dropTargetId", "trueTarget", "dropTarget", "uploadTarget", "eventName", "browserEventName", "windowBinding", "targetPhxEvent", "bindingName", "capture", "click", "scrollTimer", "state", "scroll", "wantsNewTab", "linkState", "info", "done", "newLocation", "pathname", "search", "iterations", "currentIterations", "at", "lastType", "import_topbar", "csrfToken", "liveSocket", "LiveSocket", "Socket", "topbar", "_info"]
}
